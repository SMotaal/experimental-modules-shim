{"version":3,"file":"modules.js","sources":["../lib/helpers.js","../lib/scope.js","../lib/namespaces.js","../lib/expressions.js","../lib/collator/symbols.js","../lib/environment.js","../lib/collator/nodes.js","../lib/collator/constructs.js","../lib/collator/collator.js","../lib/compiler/records.js","../../../../markup/packages/tokenizer/lib/core.js","../../../../markup/packages/matcher/lib/state.js","../../../../markup/packages/matcher/lib/matcher.js","../../../../markup/packages/matcher/lib/token-matcher.js","../../../../markup/packages/matcher/lib/range.js","../../../../markup/packages/matcher/helpers/symbol-map.js","../../../../markup/packages/matcher/experimental/common/helpers.js","../../../../markup/experimental/es/es-ranges.js","../../../../markup/experimental/es/es-definitions.js","../../../../markup/experimental/es/es-matcher.js","../../../../markup/experimental/es/es-mode.js","../../../../markup/experimental/es/standalone.js","../lib/compiler/tokenizer.js","../../../../markup/packages/matcher/lib/helpers.js","../lib/compiler/rewriters.js","../lib/compiler/compiler.js","../lib/evaluator.js","../lib/namespace.js","../lib/strapper.js","../lib/dynamic-module.js","../lib/modules.js"],"sourcesContent":["export const {\n\tbindProperty,\n\tcopyProperty,\n\tcreate,\n\tentries,\n\tfreeze,\n\tReflect,\n\tResolvedPromise,\n\tsetProperty,\n\tsetPrototypeOf,\n} = (() => {\n\tconst {\n\t\tObject: {create, entries, freeze, setPrototypeOf},\n\t\tReflect: {set, apply, construct, defineProperty, getOwnPropertyDescriptor},\n\t\tPromise,\n\t} = globalThis;\n\tconst noop = () => {};\n\treturn {\n\t\tbindProperty: (target, property, get = noop, enumerable = false, configurable = false) =>\n\t\t\tdefineProperty(target, property, {get, set: noop, configurable, enumerable}),\n\t\tcopyProperty: (target, source, identifier, alias = identifier) =>\n\t\t\tdefineProperty(target, alias, getOwnPropertyDescriptor(source, identifier)),\n\t\tcreate,\n\t\tentries: entries,\n\t\tfreeze,\n\t\tnoop,\n\t\tReflect: freeze(setPrototypeOf({set, apply, construct, defineProperty, getOwnPropertyDescriptor}, null)),\n\t\tResolvedPromise: Promise.resolve(),\n\t\tsetProperty: (target, property, value, enumerable = false, configurable = false) =>\n\t\t\tdefineProperty(target, property, {value, enumerable, configurable}) && value,\n\t\tsetPrototypeOf,\n\t};\n})();\n","import {Reflect, freeze, setPrototypeOf} from './helpers.js';\n\nexport const {GlobalScope, ModuleScope} = (() => {\n\t/** @type {import('./types').modules.GlobalScope} */\n\tconst GlobalScope = globalThis;\n\n\tconst globals = (({eval: $eval}) => ({eval: $eval}))(GlobalScope);\n\n\tconst scope = freeze(setPrototypeOf({...globals}, GlobalScope));\n\n\tconst locals = {};\n\n\tconst {set, apply, construct} = Reflect;\n\n\t/** @type {import('./types').modules.ModuleScope} */\n\tconst ModuleScope = new Proxy(scope, {\n\t\tget(target, property, receiver) {\n\t\t\tif (property in globals) return globals[property];\n\t\t\tconst value = property in GlobalScope && typeof property === 'string' ? GlobalScope[property] : undefined;\n\t\t\tif (value && typeof value === 'function') {\n\t\t\t\tconst local = locals[property];\n\t\t\t\treturn (\n\t\t\t\t\t(local && local.value === value && local) ||\n\t\t\t\t\t((locals[property] = {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tconstruct(target, argArray, newTarget) {\n\t\t\t\t\t\t\treturn newTarget === this.proxy ? construct(value, argArray) : construct(value, argArray, newTarget);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tapply(method, thisArg, argArray) {\n\t\t\t\t\t\t\treturn thisArg == null || thisArg === receiver ? value(...argArray) : apply(value, thisArg, argArray);\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t(locals[property].proxy = new Proxy(value, locals[property])),\n\t\t\t\t\tlocals[property])\n\t\t\t\t).proxy;\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\tset(target, property, value, receiver) {\n\t\t\tif (receiver !== ModuleScope) throw ReferenceError(`${property} is not defined [proxy says]`);\n\t\t\treturn set(GlobalScope, property, value);\n\t\t},\n\t});\n\n\treturn {GlobalScope, ModuleScope};\n})();\n","import {create, setProperty, bindProperty} from './helpers.js';\n\nexport class ModuleNamespaces {\n\tconstructor(importHostModule) {\n\t\tsetProperty(this, '[[importHostModule]]', importHostModule, true);\n\t\tsetProperty(this, '[[imports]]', create(null), true);\n\t\tsetProperty(\n\t\t\tthis,\n\t\t\t'import',\n\t\t\timportHostModule\n\t\t\t\t? url =>\n\t\t\t\t\t\tthis[url] ||\n\t\t\t\t\t\t(this['[[imports]]'][url] ||\n\t\t\t\t\t\t\t(this['[[imports]]'][url] = this['[[importHostModule]]'](url)).then(\n\t\t\t\t\t\t\t\tnamespace => (bindProperty(this, url, () => namespace, true, false), namespace),\n\t\t\t\t\t\t\t))\n\t\t\t\t: this.import,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\t/** @param {string} url @returns {Namespace | Promise<Namespace>} */\n\timport(url) {\n\t\tthrow Error('Unsupported operation: [[importHostModule]] is undefined!');\n\t}\n}\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n/** @typedef {import('./types').modules.Module.Namespace} Namespace */\n","/** ECMAScript quoted strings: `'…'` or `\"…\"`  */\nexport const StringLiteral = /\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g;\n\n/** ECMAScript comments */\nexport const Comments = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n/g;\n\n/** ECMAScript regular expressions  */\nexport const RegExps = /\\/(?=[^\\*\\/\\n][^\\n]*\\/)(?:[^\\\\\\/\\n\\t\\[]+|\\\\\\S|\\[(?:\\\\\\S|[^\\\\\\n\\t\\]]+)+?\\])+?\\/[a-z]*/g;\n\n/** First coherent indent spaces in a string */\n// export const Indent = /(?:^|\\n)([ \\t]+)/;\n\n/** Comma with surrounding whitespace */\nexport const Separator = /[\\s\\n]*,[\\s\\n]*/;\n\n/** Mapped binding: `Identifier as BindingIdentifier` */\nexport const Mappings = /([^\\s,]+)(?: +as +([^\\s,]+))?/g;\n\n/** Quoted export mappings: `export {…}` */\nexport const Exports = /(\\/\\*\\/|`)\\s*export *{([^}`;\\*\\/\\\\()=+&|\\-]*)}\\s*(?:\\1)/gm;\n\n/** Nothing but Identifier Characters */\nexport const Identifier = /[^\\n\\s\\(\\)\\{\\}\\-=+*/%`\"'~!&.:^<>,]+/;\n\nexport const Bindings = /\\b(import|export)\\b +(?:{ *([^}]*?) *}|([*] +as +\\S+|\\S+)|)(?: +from\\b|)(?: +(['\"])(.*?)\\4|(?:const|let|var) +(?:{ *([^}]*?) *}|\\S+)|)/g;\n\nexport const BindingDeclarations = /\\b(import|export)\\b +(?:{ *([^}]*?) *}|([*] +as +\\S+|\\S+)|)(?: +from\\b|)(?: +(['\"])(.*?)\\4|)/g;\n\nexport const Specifier = /^(?:([a-z]+[^/]*?:)\\/{0,2}(\\b[^/]+\\/?)?)(\\.{0,2}\\/)?([^#?]*?)(\\?[^#]*?)?(#.*?)?$/u;\n\nSpecifier.parse = specifier => {\n\tconst [url, schema, domain, root, path, query, fragment] = Specifier.exec(specifier) || '';\n\treturn {url, schema, domain, root, path, query, fragment, specifier};\n};\n","﻿export const Construct = Symbol('Node.construct');\nexport const Trailer = Symbol('Node.trailer');\nexport const NextNode = Symbol('Node.nextNode');\nexport const PreviousNode = Symbol('Node.previousNode');\nexport const NextTokenNode = Symbol('Node.nextTokenNode');\nexport const PreviousTokenNode = Symbol('Node.previousTokenNode');\nexport const ParentNode = Symbol('Node.parentNode');\nexport const RootNode = Symbol('Node.rootNode');\nexport const LastKeyword = Symbol('Node.lastKeyword');\nexport const LastOperator = Symbol('Node.lastOperator');\nexport const LastBreak = Symbol('Node.lastBreak');\nexport const TokenContext = Symbol('Node.tokenContext');\nexport const ContextNode = Symbol('Node.contextNode');\n\nexport const FunctionConstruct = Symbol('Node.functionConstruct');\nexport const ClassConstruct = Symbol('Node.classConstruct');\nexport const VariableConstruct = Symbol('Node.variableConstruct');\nexport const ImportConstruct = Symbol('Node.importConstruct');\nexport const ExportConstruct = Symbol('Node.exportConstruct');\nexport const BindingConstruct = Symbol('Node.bindingConstruct');\n\nexport const ArgumentConstruct = Symbol('Node.argumentConstruct');\nexport const BlockConstruct = Symbol('Node.blockConstruct');\n\nexport const BindingClause = Symbol('Construct.bindingClause');\nexport const ExtendsClause = Symbol('Construct.extendsClause');\nexport const FromClause = Symbol('Construct.fromClause');\nexport const ClassBody = Symbol('Construct.classBody');\nexport const FunctionArguments = Symbol('Construct.functionArguments');\nexport const FunctionBody = Symbol('Construct.functionBody');\n","﻿//@ts-check\n\nexport const environment = (globalThis => {\n\tconst environment = {};\n\n\t/** @type {Set<string>} */\n\tconst warnings = new Set();\n\n\t/** @type {Globals} */\n\t//@ts-ignore\n\tenvironment.globalThis = globalThis;\n\n\tconst warning = message => {\n\t\twarnings.add(message);\n\t};\n\n\tif (environment.globalThis || warning('No valid globalThis object in scope')) {\n\t\tconst {globalThis, warnings} = environment;\n\n\t\tconst globalProperties = ['global', 'window', 'self'];\n\n\t\tfor (const globalProperty of globalProperties)\n\t\t\tglobalProperty in globalThis &&\n\t\t\t\tglobalThis[globalProperty] != null &&\n\t\t\t\ttypeof globalThis[globalProperty] === 'object' &&\n\t\t\t\t(globalThis[globalProperty] === globalThis[globalProperty][globalProperty]\n\t\t\t\t\t? (environment[globalProperty] = globalThis[globalProperty])\n\t\t\t\t\t: warning(`An invalid ${globalProperty} was found in scope`));\n\n\t\tif (\n\t\t\tglobalProperties.findIndex(property => property in environment) > -1 ||\n\t\t\twarning(`No valid ${globalProperties.join(', ')} object(s) in scope`)\n\t\t) {\n\t\t\tconst {global, window, self, process} = environment.globalThis;\n\n\t\t\tif (environment.global !== undefined) {\n\t\t\t\t/** @type {Environment['global']} */\n\t\t\t\tenvironment.global = global;\n\n\t\t\t\tprocess == null ||\n\t\t\t\t\ttypeof process.pid !== 'number' ||\n\t\t\t\t\t/** @type {Environment['process']} */\n\t\t\t\t\t(environment.process = process);\n\t\t\t}\n\t\t\tif (environment.self !== undefined) {\n\t\t\t\t/** @type {Environment['self']} */\n\t\t\t\tenvironment.self = self;\n\n\t\t\t\tif (environment.window !== undefined) {\n\t\t\t\t\t/** @type {Environment['window']} */\n\t\t\t\t\tenvironment.window = window;\n\t\t\t\t\tconst {document} = window;\n\t\t\t\t\tdocument != null && document.defaultView === window && (environment.document = document);\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof self.ServiceWorkerGlobalScope === 'function' &&\n\t\t\t\t\tself instanceof self.ServiceWorkerGlobalScope\n\t\t\t\t) {\n\t\t\t\t\t/** @type {Environment['serviceWorker']} */\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tenvironment.serviceWorker = self;\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof self.DedicatedWorkerGlobalScope === 'function' &&\n\t\t\t\t\tself instanceof self.DedicatedWorkerGlobalScope\n\t\t\t\t) {\n\t\t\t\t\t/** @type {Environment['worker']} */\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tenvironment.worker = self;\n\t\t\t\t}\n\t\t\t}\n\t\t\tenvironment.global !== undefined && (environment.global = global);\n\t\t}\n\t}\n\n\t// warning('Not a warning');\n\n\twarnings.size && console.warn(['Runtime Warnings:', ...warnings].join('\\n\\t'));\n\n\t/** @type {typeof environment & Environment} */\n\treturn environment;\n})(typeof globalThis === 'object' && globalThis !== null && globalThis === globalThis.globalThis && globalThis);\n\n/** @typedef {import('./types').environment.Environment} Environment */\n/** @typedef {import('./types').environment.Globals} Globals */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as symbols from './symbols.js';\nimport {environment} from '../environment.js';\n\nexport const {Node, Root, Construct, Closure, Template, Text, Token} = (() => {\n\tconst FORCE_INCOMPLETE_CONSTRUCTS = true;\n\n\t// const {defineProperty} = Object;\n\tclass Node {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\t/** @type {string} */\n\t\t\tthis.text = undefined;\n\n\t\t\tthis.type = type;\n\n\t\t\tthis[Symbol.toStringTag] = type == null ? new.target.name : `${new.target.name} ⟨${type}⟩`;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.token = undefined;\n\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tthis[Node.tokenContext] = undefined;\n\n\t\t\t/** @type {RootNode} */\n\t\t\tthis[Node.rootNode] = undefined;\n\n\t\t\t/** @type {ParentNode} */\n\t\t\tthis[Node.parentNode] = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis[Node.previousNode] = this[Node.nextNode] = undefined;\n\n\t\t\t/** @type {TokenNode|ParentNode} */\n\t\t\tthis[Node.previousTokenNode] = this[Node.nextTokenNode] = undefined;\n\n\t\t\t/** @type {Node[]} */\n\t\t\tthis.children = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis.firstNode = this.lastNode = undefined;\n\n\t\t\t/** @type {TokenNode} */\n\t\t\tthis.firstTokenNode = this.lastTokenNode = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis[Node.lastKeyword] = this[Node.lastOperator] = this[Node.lastBreak] = undefined;\n\n\t\t\t/** @type {string} */\n\t\t\tthis[Node.construct] = '';\n\n\t\t\t/** @type {Construct[]} */\n\t\t\tthis.constructs = undefined;\n\t\t}\n\t}\n\n\tNode.prototype.symbols = symbols;\n\n\tclass Text extends Node {\n\t\t/** @param {string} text @param {string} type */\n\t\tconstructor(text, type) {\n\t\t\tsuper(type);\n\t\t\tthis.text = text;\n\t\t}\n\t}\n\n\tclass Token extends Node {\n\t\t/** @param {TokenizerToken} token @param {string} [type] */\n\t\tconstructor(token, type) {\n\t\t\tsuper((type == null && token.type) || type);\n\t\t\tthis.text = token.text;\n\t\t\tthis.token = this.firstToken = this.lastToken = token;\n\t\t}\n\t}\n\n\tclass Parent extends Node {\n\t\tset lastToken(lastToken) {}\n\n\t\tget lastToken() {\n\t\t\treturn this.lastTokenNode && this.lastTokenNode.lastToken;\n\t\t}\n\n\t\tset firstToken(firstToken) {}\n\n\t\tget firstToken() {\n\t\t\treturn this.firstTokenNode && this.firstTokenNode.firstToken;\n\t\t}\n\n\t\tset text(text) {}\n\n\t\tget text() {\n\t\t\t/** @type {string[]} */\n\t\t\tlet fragments;\n\t\t\t/** @type {Node} */\n\t\t\tlet node;\n\t\t\tconst {firstNode, lastNode} = this;\n\t\t\tif (firstNode === undefined) return '';\n\t\t\tif (firstNode === lastNode) return firstNode.text;\n\n\t\t\tfragments = [(node = firstNode).text];\n\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) {\n\t\t\t\tfragments.push(node.text || '');\n\t\t\t}\n\t\t\tnode === lastNode && fragments.push(node.text || '');\n\t\t\treturn fragments.join('');\n\t\t}\n\n\t\t/**\n\t\t * @template {Node} T\n\t\t * @param {T} child\n\t\t * @returns T\n\t\t */\n\t\tappendChild(child) {\n\t\t\tchild[Node.previousNode] = this.lastNode;\n\t\t\tthis.children === undefined\n\t\t\t\t? (this.children = [(this.firstNode = child)])\n\t\t\t\t: this.children.push((this.lastNode[Node.nextNode] = child));\n\t\t\t(child[Node.rootNode] = (child[Node.parentNode] = this)[Node.rootNode]).nodeCount++;\n\t\t\tchild[Node.previousTokenNode] = this.lastTokenNode;\n\n\t\t\treturn (this.lastNode = child);\n\t\t}\n\n\t\t/** @param {ParentNode|TokenNode|TextNode} child */\n\t\tappendToken(child) {\n\t\t\tconst {lastTokenNode, lastNode} = this;\n\t\t\tthis.appendChild(child);\n\t\t\t(child[Node.previousTokenNode] = lastTokenNode) === undefined\n\t\t\t\t? (child.firstToken && (this.firstToken = child.token), (this.firstTokenNode = child))\n\t\t\t\t: (child[Node.previousTokenNode][Node.nextTokenNode] = child);\n\t\t\tif (lastTokenNode !== undefined && lastTokenNode !== lastNode) {\n\t\t\t\t/** @type {Node} */\n\t\t\t\tlet node = this.lastTokenNode;\n\t\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) node[Node.nextTokenNode] = child;\n\t\t\t\tnode[Node.nextTokenNode] = child;\n\t\t\t}\n\t\t\tchild.lastToken && (this.lastToken = child.lastToken);\n\t\t\tthis.lastTokenNode = child;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendText(text, type) {\n\t\t\treturn this.appendChild(new Text(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendComment(text, type) {\n\t\t\treturn this.appendChild(new Comment(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendLiteral(text, type) {\n\t\t\treturn this.appendToken(new Literal(text, type));\n\t\t}\n\t}\n\n\tclass Root extends Parent {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\tsuper(type);\n\t\t\tthis[Node.rootNode] = this;\n\t\t\t/** @type {ConstructNode[]} */\n\t\t\tthis.constructs = [];\n\n\t\t\t// Only unique property\n\t\t\tthis.nodeCount = 0;\n\t\t}\n\t}\n\n\tclass Literal extends Text {}\n\tclass Comment extends Text {}\n\tclass Closure extends Parent {}\n\tclass Template extends Parent {}\n\tclass Construct extends Parent {\n\t\t/** @param {*} record */\n\t\tinitializeDeclarationRecord(record) {\n\t\t\tconst construct = this;\n\t\t\tconst {NextTokenNode, BindingClause} = construct.symbols;\n\t\t\t/** @type {ContentNode|ParentNode} */\n\t\t\tlet node;\n\t\t\tnode = construct[NextTokenNode];\n\t\t\t// node = construct.firstTokenNode[NextTokenNode] || construct[NextTokenNode];\n\t\t\t// node = construct.firstTokenNode[NextTokenNode];\n\t\t\tconst bindingTarget = construct[BindingClause] != null ? construct[BindingClause].text : undefined;\n\t\t\tconst nodes = [node];\n\t\t\tconst next = (next = node[NextTokenNode]) => (nodes.push(next), next);\n\t\t\tlet error;\n\t\t\tconst declarations = []; // (record.declarations = []);\n\t\t\tswitch (record.bindingDeclaration) {\n\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\tcase 'AsyncFunctionDeclaration':\n\t\t\t\tcase 'GeneratorFunctionDeclaration':\n\t\t\t\tcase 'AsyncGeneratorFunctionDeclaration':\n\t\t\t\tcase 'ClassDeclaration':\n\t\t\t\t\tconst bindingDeclaration = {};\n\t\t\t\t\tif (node.type !== 'identifier') {\n\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid identifier`,\n\t\t\t\t\t\t\tlineNumber: construct.lastToken.lineNumber,\n\t\t\t\t\t\t\tcolumnNumber: construct.lastToken.columnNumber,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t}\n\t\t\t\t\tbindingDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\tbindingDeclaration.internalType =\n\t\t\t\t\t\tbindingDeclaration.bindingDeclaration === 'ClassDeclaration' ? 'class' : 'function';\n\t\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\t\tbindingDeclaration.exportedIdentifier = bindingDeclaration.internalIdentifier;\n\t\t\t\t\t\tbindingDeclaration.exportedType = 'readonly';\n\t\t\t\t\t}\n\t\t\t\t\tdeclarations.push(bindingDeclaration);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\tconst variableDeclaration = {};\n\t\t\t\t\tvariableDeclaration.internalType = record.declarationText;\n\t\t\t\t\tif (node.type === '{…}') {\n\t\t\t\t\t\t// TODO: Destructure bindings\n\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\t\tvariableDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\t\t\tvariableDeclaration.exportedIdentifier = variableDeclaration.internalIdentifier;\n\t\t\t\t\t\t\tvariableDeclaration.exportedType = variableDeclaration.internalType === 'const' ? 'constant' : 'readonly';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeclarations.push(variableDeclaration);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExportDefaultAssignmentExpression':\n\t\t\t\t\tconst exportDeclaration = {};\n\t\t\t\t\texportDeclaration.exportedType = 'constant';\n\t\t\t\t\texportDeclaration.internalType = 'void';\n\t\t\t\t\texportDeclaration.exportedIdentifier = 'default';\n\t\t\t\t\tdeclarations.push(exportDeclaration);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ImportDeclaration':\n\t\t\t\t\tif (node.type !== 'string') {\n\t\t\t\t\t\tif (node.text === '*') {\n\t\t\t\t\t\t\tconst importDeclaration = {};\n\t\t\t\t\t\t\timportDeclaration.importedIdentifier = '*';\n\t\t\t\t\t\t\timportDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\tif (node.text === 'as' && (node = next()).type === 'identifier') {\n\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = node.text;\n\t\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdeclarations.push(importDeclaration);\n\t\t\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\t\t\tconst importDeclaration = {};\n\t\t\t\t\t\t\timportDeclaration.importedIdentifier = 'default';\n\t\t\t\t\t\t\timportDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\t\t\tnode = next();\n\n\t\t\t\t\t\t\tif (node.text !== 'from') {\n\t\t\t\t\t\t\t\tif (node.text === ',' && (node = next()).type === '{…}') {\n\t\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = node.text;\n\t\t\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeclarations.push(importDeclaration);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.type === '{…}') {\n\t\t\t\t\t\t\t// TODO: import {…}\n\t\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t\t\twhile ((node = next())) {\n\t\t\t\t\t\t\t\tif (node.type === 'identifier') {\n\t\t\t\t\t\t\t\t\tconst importDeclaration = {};\n\t\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = importDeclaration.importedIdentifier = node.text;\n\t\t\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\t\t\tif (node.text !== ',') {\n\t\t\t\t\t\t\t\t\t\tif (node.text === 'as' && (node = next()).type === 'identifier') {\n\t\t\t\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = node.text;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdeclarations.push(importDeclaration);\n\t\t\t\t\t\t\t\t\tif (node.text === ',') continue;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (node.text !== '}') {\n\t\t\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.text === 'from') node = next();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node.type === 'string') {\n\t\t\t\t\t\trecord.externalModuleSpecifier = node.text.slice(1, -1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log({construct, nodes});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExportDeclaration':\n\t\t\t\t\tif (node.text === '*') {\n\t\t\t\t\t\trecord.exportedIdentifier = bindingTarget;\n\t\t\t\t\t} else if (node.type === '{…}') {\n\t\t\t\t\t\t// TODO: export {…}\n\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn {record, error, declarations, nodes};\n\t\t}\n\t}\n\n\tNode.rootNode = symbols.RootNode;\n\tNode.parentNode = symbols.ParentNode;\n\tNode.nextNode = symbols.NextNode;\n\tNode.previousNode = symbols.PreviousNode;\n\tNode.nextTokenNode = symbols.NextTokenNode;\n\tNode.previousTokenNode = symbols.PreviousTokenNode;\n\tNode.construct = symbols.Construct;\n\tNode.trailer = symbols.Trailer;\n\tNode.lastKeyword = symbols.LastKeyword;\n\tNode.lastOperator = symbols.LastOperator;\n\tNode.lastBreak = symbols.LastBreak;\n\tNode.tokenContext = symbols.TokenContext;\n\n\t/** @type {boolean} */\n\tNode.RETAIN_TOKEN_CONTEXTS = true;\n\n\tif (environment.process) {\n\t\tconst inspect = Symbol.for('nodejs.util.inspect.custom');\n\t\tNode.prototype[inspect] = {\n\t\t\t/** @this {Node} @param {number} depth @param {NodeJS.InspectOptions & {stylize: Function}} options*/\n\t\t\t[inspect](depth, {stylize}) {\n\t\t\t\treturn `${stylize(this.constructor.name, 'undefined')} ‹${stylize(this.type, 'special')}›`;\n\t\t\t},\n\t\t}[inspect];\n\n\t\t// console.log(Text.prototype[inspect]);\n\t\t// process.exit();\n\t}\n\n\t((constructor, parentDescriptors, nodeDescriptors) => {\n\t\t({constructor, ...nodeDescriptors} = Object.getOwnPropertyDescriptors(Node.prototype));\n\t\t({constructor, ...parentDescriptors} = {...nodeDescriptors, ...Object.getOwnPropertyDescriptors(Parent.prototype)});\n\t\tfor (const Node of [Root, Closure, Template, Construct, Token, Text, Literal, Comment, Parent]) {\n\t\t\tObject.defineProperties(Node.prototype, Parent.isPrototypeOf(Node) ? parentDescriptors : nodeDescriptors);\n\t\t\tObject.freeze(Object.setPrototypeOf(Node.prototype, null));\n\t\t}\n\t})();\n\n\t// NOTE: Safari/iOS throw with Object.setPrototypeOf(Node, null);\n\tObject.freeze(Node);\n\n\treturn {Node, Root, Construct, Closure, Template, Text, Token};\n})();\n\n/** @typedef {ContentNode|ParentNode} Node */\n/** @typedef {Text|Token} ContentNode */\n/** @typedef {Text} TextNode */\n/** @typedef {Token} TokenNode */\n/** @typedef {Root|Construct|Closure|Template} ParentNode */\n/** @typedef {Root} RootNode */\n/** @typedef {Construct} ConstructNode */\n/** @typedef {Closure} ClosureNode */\n/** @typedef {Template} TemplateNode */\n","﻿import * as symbols from './symbols.js';\n\nexport const constructors = {};\n\n/** @typedef {} Construction */\n\n{\n\tconst {defineProperties} = Object;\n\n\tconst Constructor = (reducer =>\n\t\t/**\n\t\t * @template {symbol} P\n\t\t * @template {symbol[]} Q\n\t\t * @param {P} symbol\n\t\t * @param {Q} symbols\n\t\t * @returns {{<T extends ConstructNode>(node: T): T, symbol: P, symbols: Q}}\n\t\t */\n\t\t(symbol, ...symbols) =>\n\t\t\tdefineProperties(\n\t\t\t\tnode => {\n\t\t\t\t\tif (node[symbol] !== undefined) debugger;\n\t\t\t\t\treturn (node[symbol] = symbols.reduce(reducer, node));\n\t\t\t\t},\n\t\t\t\t{name: {value: symbol['description']}, symbol: {value: symbol}, symbols: {value: symbols}},\n\t\t\t))((construction, symbol) => (symbol in construction || (construction[symbol] = null), construction));\n\n\tconstructors.function = Constructor(\n\t\tsymbols.FunctionConstruct,\n\t\tsymbols.FunctionBody,\n\t\tsymbols.FunctionArguments,\n\t\tsymbols.BindingClause,\n\t\tsymbols.ArgumentConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.class = Constructor(\n\t\tsymbols.ClassConstruct,\n\t\tsymbols.ClassBody,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BlockConstruct,\n\t);\n\n\tconstructors.const = constructors.var = constructors.let = Constructor(\n\t\tsymbols.VariableConstruct,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.import = Constructor(\n\t\tsymbols.ImportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.export = Constructor(\n\t\tsymbols.ExportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n}\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Node, Root, Construct, Closure, Template, Token} from './nodes.js';\nimport * as symbols from './symbols.js';\nimport {constructors} from './constructs.js';\n\nexport const Collator = (() => {\n\tconst {RETAIN_TOKEN_CONTEXTS = false} = Root;\n\n\treturn class Collator {\n\t\t/**\n\t\t * Collates tokens into construct-aligned syntax trees (CAST)\n\t\t * @param {string} goal - only ECMAScript (for now)\n\t\t */\n\t\tconstructor(goal) {\n\t\t\tthis.goal = goal;\n\n\t\t\t/** Incremented with every append operation */\n\t\t\tthis.nodeCount = 0;\n\n\t\t\t/** Incremented with every token iteration */\n\t\t\tthis.tokenCount = 0;\n\n\t\t\t// TODO: Keep either rootNode or firstNode, right?\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.rootNode = undefined;\n\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.firstNode = undefined;\n\n\t\t\t/** The edges of the collated tree @type {Node} */\n\t\t\tthis.lastNode = undefined;\n\n\t\t\t/** The edges of the generated tokens @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = this.nextToken = undefined;\n\n\t\t\t/** Back-pressure token passed to next node @type {TokenizerToken} */\n\t\t\tthis.queuedToken = undefined;\n\n\t\t\t/** Tokenizer-provided context state @type {TokenizerContext} */\n\t\t\tthis.firstContext = this.lastContext = undefined;\n\n\t\t\t/** The construct currently being formed @type {Construct} */\n\t\t\tthis.currentConstructNode = undefined;\n\n\t\t\t/** Overridable logger function */\n\t\t\tthis.log = console.log;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\tcollate(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\n\t\t\t/** @type {ConstructNode} */\n\t\t\tlet constructNode;\n\n\t\t\tthis.nextToken = token.state.nextToken;\n\n\t\t\tthis.queuedToken === undefined ||\n\t\t\t\t(token === this.queuedToken\n\t\t\t\t\t? (this.queuedToken = undefined)\n\t\t\t\t\t: this.throw(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Invalid token: expecting queued token  [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ));\n\n\t\t\tthis.lastToken = token;\n\n\t\t\tif (this.node(token) === undefined) {\n\t\t\t\tcurrentNode = this.lastNode;\n\t\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\t\tswitch (token.punctuator) {\n\t\t\t\t\tcase 'pattern':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'pattern');\n\t\t\t\t\tcase 'comment':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'comment');\n\t\t\t\t\tcase 'quote':\n\t\t\t\t\t\tif (token.group.opener === '\"' || token.group.opener === \"'\") {\n\t\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'string');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Template()));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Closure(`${token.group.opener}…${token.group.closer}`)));\n\t\t\t\t\t\tif ((constructNode = currentNode[Node.previousTokenNode]) !== undefined) {\n\t\t\t\t\t\t\tif ('{' === token.text) {\n\t\t\t\t\t\t\t\t// if (constructNode[symbols.BlockConstruct] === null) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.BindingConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingClause] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = currentNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\t\t\t} else if (constructNode[symbols.ClassBody] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ClassBody] = currentNode[symbols.ClassBody] = currentNode;\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct] != null &&\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct][symbols.FunctionBody] === null\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t(constructNode = currentNode[symbols.FunctionConstruct] = constructNode[symbols.FunctionConstruct])[\n\t\t\t\t\t\t\t\t\t\tsymbols.BlockConstruct\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionBody] = (currentNode[symbols.FunctionArguments] =\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct])[symbols.FunctionBody] = currentNode[\n\t\t\t\t\t\t\t\t\t\tsymbols.FunctionBody\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// debugger;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t} else if ('(' === token.text) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.ArgumentConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct] = currentNode;\n\t\t\t\t\t\t\t\t\tif (constructNode[symbols.FunctionArguments] === null) {\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionBody] = currentNode[symbols.BlockConstruct] = null;\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionArguments] = currentNode;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdebugger;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t(token.punctuator === 'opener' && token.goal.name === this.goal) ||\n\t\t\t\t\t\t\tthis.throw(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`Invalid delimiter: ${token.punctuator} [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(this.lastContext = tokenContext)[symbols.ContextNode] = this.lastNode = currentNode;\n\t\t\t}\n\n\t\t\treturn this.emitTokenNode(token, tokens);\n\t\t}\n\n\t\t/** @param {TokenizerToken} token */\n\t\tnode(token) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\tif (this.firstNode === undefined) {\n\t\t\t\tthis.firstToken = token;\n\t\t\t\t(this.firstContext = this.lastContext = tokenContext)[\n\t\t\t\t\tsymbols.ContextNode\n\t\t\t\t] = this.lastNode = currentNode = this.rootNode = this.firstNode = new Root(token.goal.name);\n\t\t\t}\n\t\t\t// Are we building a construct?\n\t\t\telse if (this.currentConstructNode !== undefined) {\n\t\t\t\tcurrentNode = this.currentConstructNode;\n\t\t\t}\n\t\t\t// Are we where we want to be?\n\t\t\telse if (\n\t\t\t\t(this.lastNode = currentNode =\n\t\t\t\t\t(this.lastContext === tokenContext && this.lastNode) || tokenContext[symbols.ContextNode]) !== undefined\n\t\t\t) {\n\t\t\t\tthis.lastContext = tokenContext;\n\t\t\t} else if ((this.lastNode = this.lastContext[symbols.ContextNode]) === undefined) {\n\t\t\t\tthis.throw(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Invalid state: lastContext = ${this.lastContext && this.lastContext.number} [${token.goal.name}:${\n\t\t\t\t\t\t\ttoken.lineNumber\n\t\t\t\t\t\t}:${token.columnNumber}]`,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn currentNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitConstructNode(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {Construct} */\n\t\t\tlet constructNode;\n\n\t\t\tcurrentNode = this.lastNode;\n\t\t\tconstructNode = this.lastNode = this.currentConstructNode = new Construct();\n\n\t\t\tif (token.text in constructors) constructors[token.text](constructNode);\n\t\t\tRETAIN_TOKEN_CONTEXTS && (constructNode[Node.tokenContext] = this.lastContext);\n\t\t\tcurrentNode[Node.rootNode].constructs.push(constructNode);\n\t\t\tcurrentNode.appendToken(constructNode);\n\t\t\tconstructNode[Node.construct] = currentNode[Node.construct];\n\t\t\tcurrentNode[Node.construct] = '';\n\t\t\tconstructNode.appendToken(new Token(token, token.text));\n\n\t\t\tfor (\n\t\t\t\t;\n\t\t\t\tthis.currentConstructNode === constructNode &&\n\t\t\t\t(token = tokens.next().value) !== undefined &&\n\t\t\t\ttoken.isDelimiter !== true;\n\t\t\t\tthis.collate(token, tokens) === undefined ||\n\t\t\t\t((constructNode.type = constructNode[Node.construct]), (token = undefined))\n\t\t\t);\n\n\t\t\tconstructNode[Symbol.toStringTag] = `${constructNode[Symbol.toStringTag]} ⟨${constructNode.type}⟩`;\n\t\t\tconstructNode[Node.construct] = '';\n\t\t\tthis.currentConstructNode = undefined;\n\t\t\tthis.queuedToken = token;\n\t\t\tthis.lastNode = currentNode;\n\n\t\t\treturn constructNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens @param {string} type */\n\t\temitFlatNode(token, tokens, type) {\n\t\t\tconst {contextDepth, state} = token;\n\t\t\tconst fragments = [token.text];\n\t\t\twhile ((this.nextToken = state.nextToken).contextDepth >= contextDepth) {\n\t\t\t\tfragments.push((this.lastToken = tokens.next().value).text);\n\t\t\t}\n\t\t\tconst child =\n\t\t\t\ttype === 'comment'\n\t\t\t\t\t? this.lastNode.appendComment(fragments.join(''), type)\n\t\t\t\t\t: this.lastNode.appendLiteral(fragments.join(''), type);\n\t\t\tchild.firstToken = token;\n\t\t\tchild.lastToken = this.lastToken;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitTokenNode(token, tokens) {\n\t\t\t/** @type {string} */\n\t\t\tlet type;\n\t\t\t/** @type {symbol} */\n\t\t\tlet symbol;\n\t\t\t/** @type {(typeof constructors)[keyof (typeof constructors)]} */\n\t\t\tlet constructor;\n\n\t\t\tlet constructNode;\n\t\t\tconst currentNode = (constructNode = this.lastNode);\n\t\t\tconst currentConstructText = currentNode[Node.construct];\n\n\t\t\tswitch ((type = token.type)) {\n\t\t\t\tcase 'inset':\n\t\t\t\tcase 'whitespace':\n\t\t\t\t\treturn currentNode.appendText(token.text, token.type);\n\t\t\t\t// case 'default':\n\t\t\t\tcase 'identifier':\n\t\t\t\t\tif ((constructNode = currentNode)[symbols.BindingClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.BindingClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((constructNode = currentNode) && constructNode[symbols.ExtendsClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.ExtendsClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t}\n\t\t\t\tcase 'number':\n\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'break':\n\t\t\t\t\tcurrentNode[Node.lastBreak] = token;\n\t\t\t\t\t// TODO: GeneratorMethod\n\t\t\t\t\tif (currentConstructText.endsWith('async')) {\n\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\ttype = 'break';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'operator':\n\t\t\t\t\tcurrentNode[Node.lastOperator] = token;\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\t// case '*':\n\t\t\t\t\t\t// if (currentConstructText.endsWith('function')) {\n\t\t\t\t\t\t// \tcurrentNode[Node.construct] += '*';\n\t\t\t\t\t\t// \tbreak;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tcase '.':\n\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\tcase ':':\n\t\t\t\t\t\tcase ';':\n\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'keyword':\n\t\t\t\t\tcurrentNode[Node.lastKeyword] = token;\n\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tif (currentConstructText.endsWith('function')) {\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] += '*';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'import':\n\t\t\t\t\t\t\ttype = currentNode[Node.construct] = token.text;\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'export':\n\t\t\t\t\t\t\ttoken.contextDepth\n\t\t\t\t\t\t\t\t? (currentNode[Node.construct] = '')\n\t\t\t\t\t\t\t\t: (type = currentNode[Node.construct] = token.text);\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'const':\n\t\t\t\t\t\tcase 'var':\n\t\t\t\t\t\tcase 'let':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\tcase 'default':\n\t\t\t\t\t\t\tif (currentConstructText !== 'export') {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'async':\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === 'import' || currentConstructText === 'export'\n\t\t\t\t\t\t\t\t\t? `${currentNode[Node.construct]} ${token.text}`\n\t\t\t\t\t\t\t\t\t: token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'function':\n\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === '' ? token.text : `${currentNode[Node.construct]} ${token.text}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'extends':\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] !== undefined &&\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] === undefined\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] = null;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (constructor !== undefined && constructor.symbol in currentNode) debugger;\n\t\t\tif (currentConstructText !== currentNode[Node.construct]) {\n\t\t\t\tif (this.currentConstructNode === undefined) {\n\t\t\t\t\treturn this.emitConstructNode(token, tokens);\n\t\t\t\t} else if (this.currentConstructNode === currentNode) {\n\t\t\t\t\tif (currentNode[Node.construct] === '') {\n\t\t\t\t\t\tif (symbol) debugger;\n\t\t\t\t\t\treturn (this.currentConstructNode = undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (constructor) constructor(currentNode);\n\t\t\t}\n\n\t\t\tconst tokenNode = currentNode.appendToken(new Token(token, type));\n\n\t\t\tif (symbol !== undefined) {\n\t\t\t\tconstructNode[symbol] = tokenNode;\n\t\t\t\tswitch (symbol) {\n\t\t\t\t\tcase symbols.BindingClause:\n\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tokenNode;\n\t\t}\n\n\t\tthrow(error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\t/**\n\t\t * @param {{sourceRecord: ModuleSource, tokens: TokenizerTokens, log?:Collator['log'], collator?: Collator}} state\n\t\t */\n\t\tstatic collate(state) {\n\t\t\tconst collator = (state.collator = new Collator('ECMAScript'));\n\t\t\tconst {\n\t\t\t\tsourceRecord,\n\t\t\t\tsourceRecord: {\n\t\t\t\t\tfragments = (sourceRecord.fragments = /** @type {ModuleSource['fragments']} */ ([])),\n\t\t\t\t\t// bindings = (sourceRecord.bindings = /** @type {ModuleSource['bindings']} */ ([])),\n\t\t\t\t},\n\t\t\t\ttokens,\n\t\t\t\t// collator = (state.collator = new Collator('ECMAScript')),\n\t\t\t\tlog = (state.log = collator.log),\n\t\t\t\t// nonBindings = (state.nonBindings = []),\n\t\t\t} = state;\n\n\t\t\tif (collator.log != log) collator.log = log || undefined;\n\n\t\t\tfor (const token of tokens) {\n\t\t\t\tif (!token || !token.text) continue;\n\n\t\t\t\tconst node = collator.collate(token, tokens) || undefined;\n\t\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\n\t\t\t\tif (collator.queuedToken !== undefined) {\n\t\t\t\t\tconst node = collator.collate(collator.queuedToken, tokens) || undefined;\n\t\t\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\trootNode,\n\t\t\t\trootNode: {constructs},\n\t\t\t} = collator;\n\n\t\t\tsourceRecord.rootNode = rootNode;\n\t\t\tsourceRecord.constructs = constructs;\n\t\t\tsourceRecord.compiledText = rootNode.text;\n\n\t\t\treturn state;\n\t\t}\n\t};\n})();\n\n/** @typedef {import('../compiler/records').ModuleSource} ModuleSource */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {environment} from '../environment.js';\n\nexport const {ModuleSource, ModuleBinding, DeclarationType} = (() => {\n\tconst DeclarationType = {\n\t\t['function']: 'FunctionDeclaration',\n\t\t['async function']: 'AsyncFunctionDeclaration',\n\t\t['function*']: 'GeneratorFunctionDeclaration',\n\t\t['async function*']: 'AsyncGeneratorFunctionDeclaration',\n\t\t['class']: 'ClassDeclaration',\n\t\t['const']: 'VariableDeclaration',\n\t\t['let']: 'VariableDeclaration',\n\t\t['var']: 'VariableDeclaration',\n\t\t['import']: 'ImportDeclaration',\n\t\t['export']: 'ExportDeclaration',\n\t\t['export default']: 'ExportDefaultAssignmentExpression',\n\t};\n\n\t/** @param {Partial<ModuleBinding>} [record] */\n\tclass ModuleBinding {\n\t\tconstructor(record) {\n\t\t\tif (record) {\n\t\t\t\t({\n\t\t\t\t\tbindingIntent: this.bindingIntent,\n\t\t\t\t\tbindingDeclaration: this.bindingDeclaration,\n\t\t\t\t\tinternalType: this.internalType,\n\t\t\t\t\texportedType: this.exportedType,\n\t\t\t\t\tinternalIdentifier: this.internalIdentifier,\n\t\t\t\t\texportedIdentifier: this.exportedIdentifier,\n\t\t\t\t\timportedIdentifier: this.importedIdentifier,\n\t\t\t\t\texternalModuleSpecifier: this.externalModuleSpecifier,\n\t\t\t\t} = record);\n\n\t\t\t\t// Object.defineProperty(this, 'bindingDescription', {value: record.bindingDescription, enumerable: false});\n\t\t\t} else {\n\t\t\t\t/** @type {'import'|'export'|undefined} */\n\t\t\t\tthis.bindingIntent = undefined;\n\t\t\t\t/** @type {DeclarationType|undefined} */\n\t\t\t\tthis.bindingDeclaration = undefined;\n\t\t\t\t/** @type {'const'|'let'|'var'|'function'|'class'|'binding'|'void'|undefined} */\n\t\t\t\tthis.internalType = undefined;\n\t\t\t\t/** @type {'constant'|'readonly'|'symbolic'|undefined} */\n\t\t\t\tthis.exportedType = undefined;\n\t\t\t\t/** @type {string|undefined} */\n\t\t\t\tthis.internalIdentifier = this.exportedIdentifier = this.importedIdentifier = undefined;\n\t\t\t\t/** @type {string|undefined} */\n\t\t\t\tthis.externalModuleSpecifier = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tModuleBinding.DeclarationType = DeclarationType;\n\n\tclass ModuleSource {\n\t\t/** @param {Partial<ModuleSource>} [record] */\n\t\tconstructor(record) {\n\t\t\tif (record) {\n\t\t\t\t({\n\t\t\t\t\tcompiledText: this.compiledText,\n\t\t\t\t\tcompiledEvaluatorText: this.compiledEvaluatorText,\n\t\t\t\t\tsourceText: this.sourceText,\n\t\t\t\t\tsourceEvaluatorText: this.sourceEvaluatorText,\n\t\t\t\t\tsourceType: this.sourceType,\n\t\t\t\t\trootNode: this.rootNode,\n\t\t\t\t\tfragments: this.fragments,\n\t\t\t\t\tbindings: this.bindings,\n\t\t\t\t\tconstructs: this.constructs,\n\t\t\t\t\terrors: this.errors,\n\t\t\t\t} = record);\n\t\t\t} else {\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.compiledText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.compiledEvaluatorText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceEvaluatorText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceType = undefined;\n\t\t\t\t/** @type {RootNode} */\n\t\t\t\tthis.rootNode = undefined;\n\t\t\t\t/** @type {string[]} */\n\t\t\t\tthis.fragments = undefined;\n\t\t\t\t/** @type {BindingRecord[]} */\n\t\t\t\tthis.bindings = undefined;\n\t\t\t\t/** @type {ConstructNode[]} */\n\t\t\t\tthis.constructs = undefined;\n\t\t\t\t/** @type {Error[]} */\n\t\t\t\tthis.errors = undefined;\n\t\t\t}\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.compiledText;\n\t\t}\n\n\t\t/** @param {string} message @param {{lineNumber: number, columnNumber: number}} properties */\n\t\terror(message, properties, ErrorClass = Error) {\n\t\t\tconst error = Object.assign(new ErrorClass(message), properties);\n\t\t\tthis.errors === undefined ? (this.errors = [error]) : this.errors.push(error);\n\t\t}\n\t}\n\n\tif (environment.process) {\n\t\tconst inspect = Symbol.for('nodejs.util.inspect.custom');\n\t\tModuleSource.prototype[inspect] = ModuleBinding.prototype[inspect] = {\n\t\t\t/** @this {Node} @param {number} depth @param {NodeJS.InspectOptions & {stylize: Function}} options*/\n\t\t\t[inspect](depth, {stylize}) {\n\t\t\t\treturn `${stylize(this.constructor.name, 'undefined')} ‹${stylize(\n\t\t\t\t\t`${this.sourceText.length} chars`,\n\t\t\t\t\t'number',\n\t\t\t\t)}›`;\n\t\t\t},\n\t\t}[inspect];\n\t\t// ModuleBinding.prototype[inspect] = {\n\t\t// \t/** @this {Node} @param {number} depth @param {NodeJS.InspectOptions & {stylize: Function}} options*/\n\t\t// \t[inspect](depth, {stylize}) {\n\t\t// \t\treturn `${stylize(this.constructor.name, 'undefined')} ‹${stylize(this.sourceText, 'special')}›`;\n\t\t// \t},\n\t\t// }[inspect];\n\t}\n\n\treturn {ModuleSource, ModuleBinding, DeclarationType};\n})();\n\n/** @typedef {ModuleSource} SourceRecord */\n/** @typedef {ModuleBinding} BindingRecord */\n/** @typedef {keyof (typeof DeclarationType)} DeclarationType */\n","﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\n/** The identity empty immutable iterable for debugging. */\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/**\n * Returns the first occurance of a sequence in the string\n * starting from the index (or 0 where undefined), always\n * returning -1 or the index of the occurance.\n *\n * @see https://tc39.es/ecma262/#sec-string.prototype.indexof\n * @type {(string: string, sequence: string , index?: number) => number}\n */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n\n/**\n * Returns the total number of `\\n` sequences in the string.\n *\n * @type {(string: string) => number}\n */\nexport const countLineBreaks = text => {\n  let lineBreaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) !== -1; lineBreaks++);\n  return lineBreaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, lineBreaks: countLineBreaks(pre)});\n        yield {text, lineBreaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Parser.Mode} mode @param {Parser.Mode.Options} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { ReturnType<createParser> } Parser\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Parser.Mode\n * @typedef { {[name: string]: Parser.Mode} } Parser.Modes\n * @typedef { {[name: string]: {syntax: string} } } Parser.Mappings\n * @typedef { {aliases?: string[], syntax: string} } Parser.Mode.Options\n * @typedef { (options: Parser.Mode.Options, modes: Parser.Modes) => Parser.Mode } ModeFactory\n */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nconst CurrentIndex = Symbol('CurrentIndex');\nconst CurrentMatch = Symbol('CurrentMatch');\nconst CurrentToken = Symbol('CurrentToken');\nconst CreatedToken = Symbol('CreatedToken');\nconst TotalTokens = Symbol('TotalTokens');\nconst TotalMatches = Symbol('TotalMatches');\nconst Next = Symbol('Next');\nconst Initialize = Symbol('Initialize');\nconst Finalize = Symbol('Finalize');\nconst Tokens = Symbol('Tokens');\n\n/** @template {RegExp} T  @implements {MatcherIterator<T>} */\nexport class MatcherState {\n  /** @param {Partial<MatcherState<T>> & {initialize?(): void, finalize?(): void}} properties */\n  constructor({source, matcher, initialize, finalize, ...properties}) {\n    Object.assign(this, properties);\n\n    this.done = false;\n    /** @type {*} */\n    this.value = undefined;\n\n    /** @type {string} */\n    this.source = String(source);\n    /** @type {T} */\n    this.matcher =\n      matcher &&\n      (matcher instanceof RegExp\n        ? Object.setPrototypeOf(RegExp(matcher.source, matcher.flags || 'g'), matcher)\n        : RegExp(matcher, 'g'));\n\n    /** @type {RegExpExecArray} */\n    this[CurrentMatch] = undefined;\n    this[TotalMatches] = -1;\n    this[Next] = this.getNextMatch;\n    this[Initialize] =\n      typeof initialize === 'function'\n        ? () => {\n            this.initialize();\n            initialize();\n          }\n        : this.initialize;\n    this[Finalize] =\n      typeof finalize === 'function'\n        ? () => {\n            finalize();\n            this.finalize();\n          }\n        : this.finalize;\n  }\n\n  initialize() {\n    Object.defineProperties(this, {\n      source: {value: this.source, writable: false, configurable: true},\n      matcher: {value: this.matcher, writable: false, configurable: true},\n    });\n    this[TotalMatches] = 0;\n  }\n\n  finalize() {\n    Object.freeze(this);\n  }\n\n  [Symbol.iterator]() {\n    return this;\n  }\n\n  next() {\n    if (this.done) return this;\n    if (this[TotalMatches] === -1) this[Initialize]();\n    if ((this.done = (this.value = this[Next]()) == null)) this[Finalize]();\n    else this[TotalMatches]++;\n    return this;\n  }\n\n  getNextMatch() {\n    return !this.done &&\n      this.matcher.lastIndex <\n        ((this[CurrentMatch] = this.matcher.exec(this.source)) != null /* */\n          ? this.matcher.lastIndex + (this[CurrentMatch][0].length === 0 && 1)\n          : this.matcher.lastIndex)\n      ? this[CurrentMatch]\n      : undefined;\n  }\n}\n\n/** @template {RegExp} T  @extends {MatcherState<T>} */\nexport class TokenizerState extends MatcherState {\n  /** @param {Partial<TokenizerState<T>>} properties */\n  constructor(properties) {\n    super(properties)[Next] = this.getNextToken;\n  }\n\n  initialize() {\n    super.initialize();\n    this[TotalTokens] = 0;\n  }\n\n  finalize() {\n    super.finalize();\n  }\n\n  getNextToken() {\n    if (this.done || this.getNextMatch() == null) return;\n\n    this[CurrentToken] = this[CreatedToken];\n    this[CreatedToken] = this.createToken(this[CurrentMatch], this);\n\n    if (this[CreatedToken] !== undefined) {\n      this[CreatedToken].index = ++this[TotalTokens];\n    }\n\n    // Initial design considered holding on to one token\n    //   that used to be set to state.nextToken along with\n    //   the matching state.nextTokenContext.\n    //\n    // TODO: Replace graceful holding with construct stacking.\n    return this[CurrentToken] || this.getNextToken();\n  }\n\n  get [Tokens]() {\n    return Object.defineProperty(this, Tokens, {value: [], writable: false, configurable: true})[Tokens];\n  }\n\n  /** @template T @returns {T} */\n  createToken(match, state) {\n    return;\n  }\n}\n\nTokenizerState.prototype.previousToken = TokenizerState.prototype.nextToken = /** @type {Token} */ (undefined);\n\nTokenizerState.defaults = {source: undefined, initialize: undefined, finalize: undefined};\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {MatcherState} from './state.js';\n\n/** Matcher for composable matching */\nexport class Matcher extends RegExp {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze(\n        Object.assign((entities = (entities && Symbol.iterator in entities && [...entities]) || []), {\n          flags,\n          meta: Matcher.metaEntitiesFrom(entities),\n          identities: Matcher.identityEntitiesFrom(entities),\n        }),\n      );\n\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    this.state = state;\n    this.exec = this.exec;\n    this.capture = this.capture;\n\n    ({DELIMITER: this.DELIMITER = Matcher.DELIMITER, UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN} = new.target);\n  }\n\n  /** @param {MatcherExecArray} match */\n  capture(match) {\n    // @ts-ignore\n    if (match === null) return null;\n\n    // @ts-ignore\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n\n    return match;\n  }\n\n  /** @param {string} source */\n  exec(source) {\n    const match = /** @type {MatcherExecArray} */ (super.exec(source));\n    match == null || this.capture(match);\n    return match;\n  }\n\n  /** @param {string} source */\n  matchAll(source) {\n    return /** @type {typeof Matcher} */ (this.constructor).matchAll(source, /** @type {any} */ (this));\n  }\n\n  /** @returns {entity is MatcherMetaEntity} */\n  static isMetaEntity(entity) {\n    return typeof entity === 'string' && entity.endsWith('?');\n  }\n\n  /** @returns {entity is MatcherIdentityEntity} */\n  static isIdentityEntity(entity) {\n    return typeof entity === 'string'\n      ? entity !== '' && entity.trim() === entity && !entity.endsWith('?')\n      : typeof entity === 'symbol';\n  }\n\n  static metaEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherMetaEntity>} */ (new Set([...entities].filter(Matcher.isMetaEntity)));\n  }\n\n  static identityEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherIdentityEntity>} */ (new Set(\n      [...entities].filter(Matcher.isIdentityEntity),\n    ));\n  }\n\n  /**\n   * @param {MatcherPatternFactory} factory\n   * @param {MatcherFlags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    entities.meta = Matcher.metaEntitiesFrom(entities);\n    entities.identities = Matcher.identityEntitiesFrom(entities);\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags, iterative, sourceFlags;\n    flags = '';\n    for (const source of sources) {\n      sourceFlags =\n        (!!source &&\n          (typeof source === 'string'\n            ? source\n            : typeof source === 'object' &&\n              typeof source.flags !== 'string' &&\n              typeof source.source === 'string' &&\n              source.flags)) ||\n        undefined;\n      if (!sourceFlags) continue;\n      for (const flag of sourceFlags)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    // const sequence = (template, ...spans) =>\n    //   sequence.WHITESPACE[replace](sequence.COMMENTS[replace](raw(template, ...spans.map(sequence.span)), ''), '');\n\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        typeof value !== 'symbol' &&\n        `${value}`) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n    // sequence.COMMENTS = /(?:^|\\n)\\s*\\/\\/.*(?=\\n)|\\n\\s*\\/\\/.*(?:\\n\\s*)*$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) =>\n      values\n        .map(sequence.span)\n        .filter(Boolean)\n        .join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n\n  static get matchAll() {\n    /** @template {RegExp} T @type {(string: MatcherText, matcher: T) => MatcherIterator<T> } */\n    // const matchAll = (string, matcher) => new MatcherState(string, matcher);\n    const matchAll = (() =>\n      // TODO: Find a cleaner way to reference RegExp.prototype[Symbol.matchAll]\n      Function.call.bind(\n        String.prototype.matchAll || // TODO: Uncomment eventually\n          {\n            /**\n             * @this {string}\n             * @param {RegExp | string} pattern\n             */\n            *matchAll() {\n              const matcher =\n                arguments[0] &&\n                (arguments[0] instanceof RegExp\n                  ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                  : RegExp(arguments[0], 'g'));\n              const string = String(this);\n\n              if (!(matcher.flags.includes('g') || matcher.flags.includes('y')))\n                return void (yield matcher.exec(string));\n\n              for (\n                let match, lastIndex = -1;\n                lastIndex <\n                ((match = matcher.exec(string))\n                  ? (lastIndex = matcher.lastIndex + (match[0].length === 0))\n                  : lastIndex);\n                yield match, matcher.lastIndex = lastIndex\n              );\n            },\n          }.matchAll,\n      ))();\n\n    Object.defineProperty(Matcher, 'matchAll', {value: Object.freeze(matchAll), enumerable: true, writable: false});\n\n    return matchAll;\n  }\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @param {T & V} matcher\n   * @param {U} [instance]\n   * @returns {U & V}\n   */\n  static clone(matcher, instance) {\n    const {\n      constructor: {prototype},\n      source,\n      flags,\n      lastIndex,\n      ...properties\n    } = matcher;\n    const clone = /** @type {U & V} */ (Object.assign(\n      instance ||\n        (prototype && 'source' in prototype && 'flags' in prototype\n          ? RegExp(source, flags || 'g')\n          : RegExp(matcher, 'g')),\n      properties,\n    ));\n    // prototype && Object.setPrototypeOf(clone, prototype);\n    Object.setPrototypeOf(\n      clone,\n      prototype || (this && this !== Matcher && this.prototype instanceof Matcher ? this.prototype : Matcher.prototype),\n    );\n    return clone;\n  }\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  static create(matcher, state) {\n    /** @type {typeof Matcher} */\n    const Species = !this || this === Matcher || !(this.prototype instanceof Matcher) ? Matcher : this;\n\n    return Object.defineProperty(\n      ((\n        state || (state = Object.create(null))\n      ).matcher = /** @type {typeof Matcher} */ (matcher &&\n      matcher instanceof RegExp &&\n      matcher.constructor &&\n      'function' !== typeof (/** @type {typeof Matcher} */ (matcher.constructor).clone) // prettier-ignore\n        ? matcher.constructor\n        : Species === Matcher || typeof Species.clone !== 'function'\n        ? Matcher\n        : Species\n      ).clone(matcher)),\n      'state',\n      {value: state},\n    );\n  }\n}\n\n// Well-known identities for meaningful debugging which are\n//   Strings but could possible be changed to Symbols\n//\n//   TODO: Revisit Matcher.UNKOWN\n//\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  DELIMITER = (Matcher.DELIMITER = Matcher.prototype.DELIMITER = /** @type {MatcherIdentityString} */ ('DELIMITER?')),\n  /** Identity for unknown captures */\n  UNKNOWN = (Matcher.UNKNOWN = Matcher.prototype.UNKNOWN = /** @type {MatcherIdentityString} */ ('UNKNOWN?')),\n} = Matcher;\n","﻿// @ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {countLineBreaks} from '../../tokenizer/lib/core.js';\nimport {Matcher} from './matcher.js';\nimport {TokenizerState} from './state.js';\n\nexport const TokenMatcher = (() => {\n  /** @typedef {Object} State */\n\n  /** @template  U */\n  class TokenMatcher extends Matcher {\n    /**\n     * Safely updates the match to reflect the captured identity.\n     *\n     * NOTE: fault always sets match.flatten to false\n     *\n     * @template T @param {string} identity @param {T} match @returns {T}\n     */\n    static capture(identity, match) {\n      // @ts-ignore\n      match.capture[(match.identity = identity)] = match[0];\n      // @ts-ignore\n      (match.fault = identity === 'fault') && (match.flatten = false);\n      return match;\n    }\n\n    /**\n     * Safely mutates matcher state to open a new context.\n     *\n     * @template {State} S\n     * @param {string} text - Text of the intended { type = \"opener\" } token\n     * @param {S} state - Matcher state\n     * @returns {undefined | string} - String when context is **not** open\n     */\n    static open(text, state) {\n      const {\n        contexts,\n        context: parentContext,\n        context: {depth: index, goal: initialGoal},\n        groups,\n        initializeContext,\n      } = state;\n      const group = initialGoal.groups[text];\n\n      if (!group) return initialGoal.type || 'sequence';\n      groups.splice(index, groups.length, group);\n      groups.closers.splice(index, groups.closers.length, group.closer);\n\n      parentContext.contextCount++;\n\n      const goal = group.goal === undefined ? initialGoal : group.goal;\n\n      const nextContext = {\n        id: `${parentContext.id} ${\n          goal !== initialGoal\n            ? `\\n${goal[Symbol.toStringTag]} ${group[Symbol.toStringTag]}`\n            : group[Symbol.toStringTag]\n        }`,\n        number: ++contexts.count,\n        depth: index + 1,\n        parentContext,\n        goal,\n        group,\n        state,\n      };\n\n      typeof initializeContext === 'function' && initializeContext(nextContext);\n\n      state.nextContext = contexts[index] = nextContext;\n    }\n\n    /**\n     * Safely mutates matcher state to close the current context.\n     *\n     * @template {State} S\n     * @param {string} text - Text of the intended { type = \"closer\" } token\n     * @param {S} state - Matcher state\n     * @returns {undefined | string} - String when context is **not** closed\n     */\n    static close(text, state) {\n      const groups = state.groups;\n      const index = groups.closers.lastIndexOf(text);\n\n      if (index === -1 || index !== groups.length - 1) return 'fault';\n\n      groups.closers.splice(index, groups.closers.length);\n      groups.splice(index, groups.length);\n      state.nextContext = state.context.parentContext;\n    }\n\n    /**\n     * Safely mutates matcher state to skip ahead.\n     *\n     * TODO: Finish implementing forward helper\n     *\n     * @template {State} S\n     * @param {string | RegExp} search\n     * @param {MatcherMatch} match\n     * @param {S} state - Matcher state\n     * @param {number | boolean} [delta]\n     */\n    static forward(search, match, state, delta) {\n      if (typeof search === 'string' && search.length) {\n        state.nextOffset =\n          match.input.indexOf(search, match.index + match[0].length) + (0 + /** @type {number} */ (delta) || 0);\n      } else if (search != null && typeof search === 'object') {\n        // debugger;\n        search.lastIndex = match.index + match[0].length;\n        const matched = search.exec(match.input);\n        // console.log(...matched, {matched});\n        if (!matched || matched[1] !== undefined) {\n          if (delta === false) return false;\n          state.nextOffset = search.lastIndex;\n          state.nextFault = true;\n          return 'fault';\n        } else {\n          if (delta === false) return true;\n          state.nextOffset = search.lastIndex + (0 + /** @type {number} */ (delta) || 0);\n        }\n      } else {\n        throw new TypeError(`forward invoked with an invalid search argument`);\n      }\n    }\n\n    /**\n     * @param {Matcher} matcher\n     * @param {any} [options]\n     */\n    static createMode(matcher, options) {\n      const tokenizer = Object.defineProperties(\n        {matcher: Object.freeze(TokenMatcher.create(matcher))},\n        tokenizerPropertyDescriptors,\n      );\n\n      const mode = {syntax: 'matcher', tokenizer};\n      options &&\n        ({\n          syntax: mode.syntax = mode.syntax,\n          aliases: mode.aliases,\n          preregister: mode.preregister,\n          createToken: tokenizer.createToken = tokenizer.createToken,\n          initializeState: tokenizer.initializeState,\n          finalizeState: tokenizer.finalizeState,\n          ...mode.overrides\n        } = options);\n\n      Object.freeze(tokenizer);\n\n      return mode;\n    }\n  }\n\n  /** @type {import('../experimental/common/types').Goal|symbol} */\n  TokenMatcher.prototype.goal = undefined;\n\n  class Tokenizer {\n    constructor() {\n      this.finalizeState = /** @type {<S extends TokenizerState>(state: S) => S} */ (undefined);\n      this.initializeState = /** @type {<V, S extends TokenizerState>(state: S) => V & S} */ (undefined);\n    }\n\n    /** @type {<M extends MatcherArray, T extends {}, S extends TokenizerState>(init: MatcherMatch<M>, state?: S) => Token<T>} */\n    createToken({0: text, identity, capture, index}, state) {\n      // @ts-ignore\n      return {\n        // @ts-ignore\n        type: (identity && (identity.description || identity)) || 'text',\n        text,\n        lineBreaks: countLineBreaks(text),\n        lineInset: (capture && /** @type {any} */ (capture).inset) || '',\n        lineOffset: index,\n        capture,\n      };\n    }\n\n    /**\n     * @template {Matcher} T\n     * @template {{}} U\n     * @param {string} string\n     * @param {U & Partial<Record<'USE_ITERATOR'|'USE_GENERATOR', boolean>>} properties\n     */\n    tokenize(\n      string,\n      properties,\n      USE_ITERATOR = properties && 'USE_ITERATOR' in properties\n        ? !!properties.USE_ITERATOR\n        : properties && 'USE_GENERATOR' in properties\n        ? !properties.USE_GENERATOR\n        : !true,\n    ) {\n      return !!USE_ITERATOR ? this.TokenIterator(string, properties) : this.TokenGenerator(string, properties);\n    }\n    /**\n     * @template {Matcher} T\n     * @template {{}} U\n     * @param {string} string\n     * @param {U} properties\n     */\n    TokenIterator(string, properties) {\n      const state = new TokenizerState({\n        ...TokenizerState.defaults,\n        ...((typeof properties === 'object' && properties) || undefined),\n        source: string,\n        initialize: this.initializeState && (() => void this.initializeState(state)),\n        finalize: this.finalizeState && (() => void this.finalizeState(state)),\n        createToken: match => this.createToken(match, state),\n      });\n\n      /** @type {TokenMatcher<U>} */\n      const matcher = /** @type {any} */ (TokenMatcher.create(/** @type {any} */ (this).matcher, state));\n      matcher.exec = matcher.exec;\n      return state;\n    }\n\n    /** @template {Matcher} T @template {{}} U */\n    *TokenGenerator() {\n      /** @type {string} */\n      const string = `${arguments[0]}`;\n      /** @type {TokenMatcher<U>} */\n      const matcher = /** @type {any} */ (TokenMatcher.create(/** @type {any} */ (this).matcher, arguments[1] || {}));\n\n      const state = /** @type {TokenizerState<T, U>} */ (matcher.state);\n\n      this.initializeState && this.initializeState(state);\n      matcher.exec = matcher.exec;\n\n      for (\n        let match, capturedToken, retainedToken, index = 0;\n        // BAIL on first failed/empty match\n        ((match = matcher.exec(string)) !== null && match[0] !== '') ||\n        //   BUT first yield a nextToken if present\n        (retainedToken !== undefined && (yield retainedToken), (state.nextToken = undefined));\n\n      ) {\n        // @ts-ignore\n        if ((capturedToken = this.createToken(match, state)) === undefined) continue;\n\n        // HOLD back one grace token\n        //   until createToken(…) !== undefined (ie new token)\n        //   set the incremental token index for this token\n        //   and keep it referenced directly on the state\n        (state.nextToken = capturedToken).index = index++;\n\n        //   THEN yield a previously held token\n        if (retainedToken !== undefined) yield retainedToken;\n\n        //   THEN finally clear the nextToken reference\n        retainedToken = capturedToken;\n        state.nextToken = undefined;\n      }\n\n      this.finalizeState && this.finalizeState(state);\n    }\n  }\n\n  const tokenizerPropertyDescriptors = Object.getOwnPropertyDescriptors(\n    Object.preventExtensions(\n      Object.setPrototypeOf(Object.freeze(Object.setPrototypeOf(Tokenizer, null)).prototype, null),\n    ),\n  );\n\n  delete tokenizerPropertyDescriptors.constructor;\n\n  Object.freeze(TokenMatcher);\n\n  return TokenMatcher;\n})();\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\n\nconst RegExpClass = /^(?:\\[(?=.*(?:[^\\\\](?:\\\\\\\\)*|)\\]$)|)((?:\\\\.|[^\\\\\\n\\[\\]]*)*)\\]?$/;\n\nexport class RegExpRange extends RegExp {\n  /**\n   * @param {string|RegExp} source\n   * @param {string} [flags]\n   */\n  constructor(source, flags) {\n    /** @type {string} */\n    let range;\n\n    range = (source && typeof source === 'object' && source instanceof RegExp\n      ? (flags === undefined && (flags = source.flags), source.source)\n      : (typeof source === 'string' ? source : (source = `${source || ''}`)).trim() &&\n        (source = RegExpClass[Symbol.replace](source, '[$1]'))\n    ).slice(1, -1);\n\n    if (!range || !RegExpClass.test(range)) {\n      throw TypeError(`Invalid Regular Expression class range: ${range}`);\n    }\n\n    typeof flags === 'string' || (flags = `${flags || ''}` || '');\n\n    flags.includes('u') ||\n      //@ts-ignore\n      !(source.includes('\\\\p{') || source.includes('\\\\u')) ||\n      (flags += 'u');\n\n    //@ts-ignore\n    super(source, flags);\n\n    // this.arguments = [...arguments];\n\n    Object.defineProperty(this, 'range', {value: range, enumerable: true, writable: false});\n  }\n\n  /** @type {string} */\n  //@ts-ignore\n  get range() {\n    return `^`;\n  }\n\n  toString() {\n    return this.range;\n  }\n\n  /**\n   * @param {TemplateStringsArray} strings\n   * @param {... any[]} values\n   */\n  static define(strings, ...values) {\n    let source = String.raw(strings, ...values);\n    let flags;\n    // @ts-ignore\n    return (\n      RegExpRange.ranges[source] ||\n      Object.freeze(\n        (RegExpRange.ranges[source] = (flags = Matcher.flags(\n          ...values.map(value => (value instanceof RegExpRange ? value : undefined)),\n        ))\n          ? new (this || RegExpRange)(source, flags)\n          : new (this || RegExpRange)(source)),\n      )\n    );\n  }\n}\n\n/** @type {{[name: string]: RegExpRange}} */\nRegExpRange.ranges = {};\n\nglobalThis.RegExpRange = RegExpRange;\n","﻿// @ts-check\n\n/**\n * @typedef {Readonly<{symbol: symbol, description: string}>} Definition\n * @extends {Map<string|symbol, Definition>}\n */\nexport class SymbolMap extends Map {\n  /**\n   * @param {*} description\n   * @param {symbol} [symbol]\n   * @returns {symbol}\n   */\n  define(description, symbol) {\n    /** @type {Definition} */ let definition;\n\n    description = ((arguments.length > 0 && typeof description !== 'symbol') || undefined) && String(description);\n\n    if (description === undefined) {\n      throw new TypeError(\n        `Symbols.define invoked with a description (${\n          description != null ? typeof arguments[0] : arguments[0]\n        }) that is not non-coercible to a valid key.`,\n      );\n    }\n\n    definition = super.get(description);\n\n    if (symbol != null) {\n      if (typeof symbol !== 'symbol') {\n        throw new TypeError(\n          `Symbols.define invoked with an invalid symbol (${symbol == null ? arguments[1] : typeof arguments[1]}).`,\n        );\n      }\n\n      if (!definition) {\n        definition = super.get(symbol);\n      } else if (definition.symbol !== symbol) {\n        throw new ReferenceError('Symbols.define invoked with a description argument that is not unique.');\n      }\n\n      if (definition && definition.description !== description) {\n        throw new ReferenceError('Symbols.define invoked with a symbol argument that is not unique.');\n      }\n    }\n\n    if (!definition) {\n      definition = Object.freeze({symbol: symbol || Symbol(description), description: description});\n      super.set(definition.symbol, definition);\n      super.set(definition.description, definition);\n    }\n\n    return definition.symbol;\n  }\n\n  /** @param {symbol | string} key @returns {string} */\n  describe(key) {\n    return (super.get(key) || SymbolMap.undefined).description;\n  }\n}\n\nObject.defineProperty(SymbolMap, 'undefined', {value: Object.freeze(Object.create(null)), writable: false});\n\nObject.defineProperties(\n  Object.setPrototypeOf(\n    SymbolMap.prototype,\n    Object.create(Object.prototype, {\n      get: Object.getOwnPropertyDescriptor(Map.prototype, 'get'),\n      has: Object.getOwnPropertyDescriptor(Map.prototype, 'has'),\n      set: Object.getOwnPropertyDescriptor(Map.prototype, 'set'),\n    }),\n  ),\n  {get: {writable: false}, set: {writable: false}},\n);\n","﻿//@ts-check\nimport {countLineBreaks} from '../../../tokenizer/lib/core.js';\nimport {TokenMatcher} from '../../lib/token-matcher.js';\nimport {RegExpRange} from '../../lib/range.js';\nimport {SymbolMap} from '../../helpers/symbol-map.js';\n\n/// Helpers\n/** @typedef {<T extends {}>(options?: T) => MatcherPatternFactory} PatternFactory */\n\n/**\n * @template {symbol} G\n * @template {string} K\n * @param {G} goal\n * @param {(constructor: typeof TokenMatcher) => Record<G|K, PatternFactory> } factory\n */\nexport const createMatcher = (goal, factory) =>\n  TokenMatcher.define(factory(TokenMatcher)[goal](), 'gu', {goal: {value: goal, enumerable: true, writable: false}});\n\nexport const createMode = ({matcher, ...options}) => TokenMatcher.createMode(matcher, {...defaults.mode, ...options});\n\n/** @param {State} state */\n// TODO: Document initializeState\nexport const initializeState = state => {\n  /** @type {Groups} state */\n  (state.groups = []).closers = [];\n  state.lineOffset = state.lineIndex = 0;\n  state.totalCaptureCount = state.totalTokenCount = 0;\n\n  /** @type {Contexts} */\n  const contexts = (state.contexts = Array(100));\n  const context = initializeContext({\n    id: `«${state.matcher.goal.name}»`,\n    number: (contexts.count = state.totalContextCount = 1),\n    depth: 0,\n    parentContext: undefined,\n    goal: state.matcher.goal,\n    //@ts-ignore\n    group: (state.groups.root = Object.freeze({})),\n    state,\n    ...(state.USE_CONSTRUCTS === true ? {currentConstruct: new Construct()} : {}),\n  });\n  state.firstTokenContext = state.nextTokenContext = state.lastContext = state.context = contexts[-1] = context;\n  state.lastTokenContext = undefined;\n  state.initializeContext = initializeContext;\n};\n\n/** @param {State} state */\n// TODO: Document finalizeState\nexport const finalizeState = state => {\n  const isValidState =\n    state.firstTokenContext === state.nextTokenContext &&\n    state.nextToken === undefined &&\n    state.nextOffset === undefined;\n\n  const {\n    flags: {debug = false} = {},\n    options: {console: {log = console.log, warn = console.warn} = console} = {},\n    error = (state.error = !isValidState ? 'Unexpected end of tokenizer state' : undefined),\n  } = state;\n\n  // if (!debug && error) throw Error(error);\n\n  // Finalize latent token artifacts\n  state.nextTokenContext = void (state.lastTokenContext = state.nextTokenContext);\n\n  // Finalize tokenization artifacts\n  error || (state.context = state.contexts = state.groups = undefined);\n\n  // Output to console when necessary\n  debug && (error ? warn : log)(`[tokenizer]: ${error || 'done'} — %O`, state);\n};\n\n/** @param {Match} match @param {State} state @returns {Token}*/\nexport const createToken = (match, state) => {\n  let currentGoal,\n    // goalName,\n    currentGoalType,\n    contextId,\n    contextNumber,\n    contextDepth,\n    contextGroup,\n    parentContext,\n    tokenReference,\n    tokenContext,\n    nextToken,\n    text,\n    type,\n    fault,\n    punctuator,\n    offset,\n    lineInset,\n    lineBreaks,\n    isOperator,\n    isDelimiter,\n    isComment,\n    isWhitespace,\n    flatten,\n    fold,\n    columnNumber,\n    lineNumber,\n    tokenNumber,\n    captureNumber,\n    hint;\n\n  const {\n    context: currentContext,\n    nextContext,\n    lineIndex,\n    lineOffset,\n    nextOffset,\n    nextFault,\n    lastToken,\n    lastTrivia,\n    lastAtom,\n  } = state;\n\n  /* Capture */\n  ({\n    0: text,\n    capture: {inset: lineInset},\n    identity: type,\n    flatten,\n    fault,\n    punctuator,\n    index: offset,\n  } = match);\n\n  if (!text) return;\n\n  ({\n    id: contextId,\n    number: contextNumber,\n    depth: contextDepth,\n    goal: currentGoal,\n    group: contextGroup,\n    parentContext,\n  } = tokenContext = (type === 'opener' && nextContext) || currentContext);\n\n  currentGoalType = currentGoal.type;\n\n  if (nextOffset != null) {\n    state.nextOffset = undefined;\n    if (nextOffset > offset) {\n      text = match.input.slice(offset, nextOffset);\n      state.matcher.lastIndex = nextOffset;\n    }\n  } else if (nextFault != null) {\n    state.nextFault = undefined;\n    if (nextFault === true) {\n      fault = true;\n      flatten = false;\n      type = 'fault';\n      punctuator = undefined;\n      // console.log({state: {...state}, match, nextFault});\n    }\n  }\n\n  // nextOffset != null\n  //   ? ((state.nextOffset = undefined),\n  //     nextOffset > offset && ((text = match.input.slice(offset, nextOffset)), (state.matcher.lastIndex = nextOffset)))\n  //   : nextFault != null &&\n  //     ((state.nextFault = undefined),\n  //     fault || (nextFault === true && ((fault = true), (flatten = false), (type = 'fault'))));\n\n  lineBreaks = (text === '\\n' && 1) || countLineBreaks(text);\n  (isOperator = type === 'operator' || type === 'delimiter' || type === 'breaker' || type === 'combinator') ||\n    (isDelimiter = type === 'closer' || type === 'opener') ||\n    (isWhitespace = type === 'whitespace' || type === 'break' || type === 'inset');\n\n  (isComment = type === 'comment' || punctuator === 'comment')\n    ? (type = 'comment')\n    : type || (type = (!isDelimiter && !fault && currentGoalType) || 'text');\n\n  if (lineBreaks) {\n    state.lineIndex += lineBreaks;\n    state.lineOffset = offset + (text === '\\n' ? 1 : text.lastIndexOf('\\n'));\n  }\n\n  /* Flattening / Token Folding */\n\n  flatten === false ||\n    flatten === true ||\n    (flatten = fault !== true && (isDelimiter !== true || currentGoal.fold === true) && currentGoal.flatten === true);\n\n  captureNumber = ++tokenContext.captureCount;\n  state.totalCaptureCount++;\n\n  if (\n    fault !== true && // type ! 'fault' &&\n    (fold = flatten) && // fold only if flatten is allowed\n    lastToken != null &&\n    ((lastToken.contextNumber === contextNumber && lastToken.fold === true) ||\n      (type === 'closer' && flatten === true)) && // never fold across contexts\n    (lastToken.type === type ||\n      (currentGoal.fold === true && (lastToken.type === currentGoalType || lastToken.punctuator === currentGoalType)))\n  ) {\n    lastToken.captureCount++;\n    lastToken.text += text;\n    lineBreaks && (lastToken.lineBreaks += lineBreaks);\n  } else {\n    // The generator retains this new as state.nextToken\n    //   which means tokenContext is state.nextTokenContext\n    //   and the fact that we are returning a token here will\n    //   yield the current state.nextToken so we need to also\n    //   set state.lastTokenContext to match\n    //\n    //   TODO: Add parity tests for tokenizer's token/context states\n    state.lastTokenContext = state.nextTokenContext;\n    state.nextTokenContext = tokenContext;\n\n    /* Token Creation */\n    flatten = false;\n    columnNumber = 1 + (offset - lineOffset || 0);\n    lineNumber = 1 + (lineIndex || 0);\n\n    tokenNumber = ++tokenContext.tokenCount;\n    state.totalTokenCount++;\n\n    // hint = `${(isDelimiter ? type : currentGoalType && `in-${currentGoalType}`) ||\n    hint = `${\n      currentGoalType\n        ? isDelimiter && currentGoal.opener === text\n          ? `${type}`\n          : `in-${currentGoalType}`\n        : isDelimiter\n        ? type\n        : ''\n    }\\n\\n${contextId} #${tokenNumber}\\n(${lineNumber}:${columnNumber})`;\n\n    tokenReference = isWhitespace || isComment ? 'lastTrivia' : 'lastAtom';\n\n    nextToken = tokenContext[tokenReference] = state[tokenReference] = tokenContext.lastToken = state.lastToken = {\n      text,\n      type,\n      offset,\n      punctuator,\n      hint,\n      lineOffset,\n      lineBreaks,\n      lineInset,\n      columnNumber,\n      lineNumber,\n      captureNumber,\n      captureCount: 1,\n      tokenNumber,\n      contextNumber,\n      contextDepth,\n\n      isWhitespace,\n      isOperator,\n      isDelimiter,\n      isComment,\n\n      // FIXME: Nondescript\n      fault,\n      fold,\n      flatten,\n\n      goal: currentGoal,\n      group: contextGroup,\n      state,\n      context: tokenContext,\n    };\n  }\n  /* Context */\n  !nextContext ||\n    ((state.nextContext = undefined), nextContext === currentContext) ||\n    ((state.lastContext = currentContext),\n    currentContext === nextContext.parentContext\n      ? (state.totalContextCount++,\n        // tokenReference === 'lastAtom'\n        //   ? ((nextContext.firstAtom = nextToken), (nextContext.firstTrivia = undefined))\n        //   : ((nextContext.firstAtom = undefined), (nextContext.firstTrivia = nextToken)),\n        (nextContext.precedingAtom = lastAtom),\n        (nextContext.precedingTrivia = lastTrivia),\n        (nextContext.precedingToken = lastToken))\n      : ((parentContext.nestedContextCount += currentContext.nestedContextCount + currentContext.contextCount),\n        (parentContext.nestedCaptureCount += currentContext.nestedCaptureCount + currentContext.captureCount),\n        (parentContext.nestedTokenCount += currentContext.nestedTokenCount + currentContext.tokenCount)),\n    (state.context = nextContext));\n\n  return nextToken;\n};\n\nexport const initializeContext = (assign =>\n  /**\n   * @template {Partial<Context>} T\n   * @template {{}} U\n   * @param {T | Context} context\n   * @param {U} [properties]\n   * @returns {Context & T & U}\n   */\n  (context, properties) => {\n    //@ts-ignore\n    return (\n      assign(context, stats, properties),\n      context.goal &&\n        context.goal.initializeContext &&\n        //@ts-ignore\n        context.goal.initializeContext(context),\n      context\n    );\n  })(Object.assign);\n\nconst symbolMap = new SymbolMap();\n\n/** @type {SymbolMap['define']} */\nexport const defineSymbol = (description, symbol) => symbolMap.define(description, symbol);\n\n/** @type {SymbolMap['describe']} */\nexport const describeSymbol = symbol => symbolMap.describe(symbol);\n\nexport const generateDefinitions = ({groups = {}, goals = {}, identities = {}, symbols = {}, tokens = {}}) => {\n  const FaultGoal = generateDefinitions.FaultGoal;\n\n  const punctuators = Object.create(null);\n\n  for (const opener of Object.getOwnPropertyNames(groups)) {\n    const {[opener]: group} = groups;\n    'goal' in group && (group.goal = goals[group.goal] || FaultGoal);\n    'parentGoal' in group && (group.parentGoal = goals[group.parentGoal] || FaultGoal);\n    Object.freeze(group);\n  }\n\n  for (const symbol of Object.getOwnPropertySymbols(goals)) {\n    // @ts-ignore\n    const {[symbol]: goal} = goals;\n\n    goal.symbol === symbol || (goal.symbol = symbol);\n    goal.name = describeSymbol(symbol).replace(/Goal$/, '');\n    symbols[`${goal.name}Goal`] = goal.symbol;\n    goal[Symbol.toStringTag] = `«${goal.name}»`;\n    goal.tokens = tokens[symbol] = {};\n    goal.groups = [];\n\n    if (goal.punctuators) {\n      for (const punctuator of (goal.punctuators = [...goal.punctuators]))\n        punctuators[punctuator] = !(goal.punctuators[punctuator] = true);\n      Object.freeze(Object.setPrototypeOf(goal.punctuators, punctuators));\n    } else {\n      goal.punctuators = punctuators;\n    }\n\n    if (goal.closers) {\n      for (const closer of (goal.closers = [...goal.closers])) punctuators[closer] = !(goal.closers[closer] = true);\n      Object.freeze(Object.setPrototypeOf(goal.closers, punctuators));\n    } else {\n      goal.closers = generateDefinitions.Empty;\n    }\n\n    if (goal.openers) {\n      const overrides = {...goal.openers};\n      for (const opener of (goal.openers = [...goal.openers])) {\n        const group = (goal.groups[opener] = {...groups[opener], ...overrides[opener]});\n        typeof group.goal === 'symbol' && (group.goal = goals[group.goal] || FaultGoal);\n        typeof group.parentGoal === 'symbol' && (group.parentGoal = goals[group.goal] || FaultGoal);\n        punctuators[opener] = !(goal.openers[opener] = true);\n        GoalSpecificTokenRecord(goal, group.opener, 'opener', {group});\n        GoalSpecificTokenRecord(goal, group.closer, 'closer', {group});\n        group.description || (group.description = `${group.opener}…${group.closer}`);\n        group[Symbol.toStringTag] = `‹${group.opener}›`;\n      }\n      Object.freeze(Object.setPrototypeOf(goal.openers, punctuators));\n    } else {\n      goal.closers = generateDefinitions.Empty;\n    }\n\n    // if (goal.punctuation)\n    Object.freeze(Object.setPrototypeOf((goal.punctuation = {...goal.punctuation}), null));\n\n    Object.freeze(goal.groups);\n    Object.freeze(goal.tokens);\n    Object.freeze(goal);\n  }\n\n  Object.freeze(punctuators);\n  Object.freeze(goals);\n  Object.freeze(groups);\n  Object.freeze(identities);\n  Object.freeze(symbols);\n\n  return Object.freeze({groups, goals, identities, symbols, tokens});\n\n  // if (keywords) {\n  //   for (const [identity, list] of entries({})) {\n  //     for (const keyword of list.split(/\\s+/)) {\n  //       keywords[keyword] = identity;\n  //     }\n  //   }\n\n  //   keywords[Symbol.iterator] = Array.prototype[Symbol.iterator].bind(Object.getOwnPropertyNames(keywords));\n  //   freeze(keywords);\n  // }\n\n  /**\n   * Creates a symbolically mapped goal-specific token record\n   *\n   * @template {{}} T\n   * @param {Goal} goal\n   * @param {string} text\n   * @param {type} type\n   * @param {T} properties\n   */\n  function GoalSpecificTokenRecord(goal, text, type, properties) {\n    const symbol = defineSymbol(`‹${goal.name} ${text}›`);\n    return (goal.tokens[text] = goal.tokens[symbol] = tokens[symbol] = {symbol, text, type, goal, ...properties});\n  }\n};\n\n// generateDefinitions.Empty = Object.freeze(new class Empty extends Array{});\ngenerateDefinitions.Empty = Object.freeze({[Symbol.iterator]: (iterator => iterator).bind([][Symbol.iterator])});\n\nexport const FaultGoal = (generateDefinitions.FaultGoal = {symbol: defineSymbol('FaultGoal'), type: 'fault'});\ngenerateDefinitions({goals: {[FaultGoal.symbol]: FaultGoal}});\n\n/**\n * @template {string} K\n * @template {string} I\n * @param {{[i in I]: K[]}} mappings\n */\nexport const Keywords = mappings => {\n  /** @type {{[i in I]: ReadonlyArray<K>}} */\n  //@ts-ignore\n  const identities = {};\n\n  /** @type {{[k in K]: I}} */\n  //@ts-ignore\n  const keywords = {...Keywords.prototype};\n\n  for (const identity in mappings) {\n    identities[identity] = Object.freeze([...mappings[identity]]);\n    for (const keyword of mappings[identity]) {\n      keywords[keyword] = identity;\n    }\n  }\n\n  Object.setPrototypeOf(keywords, identities);\n  Object.freeze(identities);\n  Object.freeze(keywords);\n\n  return keywords;\n};\n\nKeywords.prototype = {\n  [Symbol.iterator]() {\n    return Object.getOwnPropertyNames(this)[Symbol.iterator]();\n  },\n};\n\nexport const Construct = class Construct extends Array {\n  constructor() {\n    super(...arguments);\n    this.text = arguments.length ? this.join(' ') : '';\n    this.last = arguments.length ? this[this.length - 1] : '';\n  }\n\n  add(text) {\n    this.length === 0 ? (this.text = text) : (this.text += ` ${text}`);\n    super.push((this.last = text));\n  }\n  set(text) {\n    this.previousText = this.text;\n    text === '' || text == null\n      ? ((this.last = this.text = ''), this.length === 0 || super.splice(0, this.length))\n      : this.length === 0\n      ? super.push((this.last = this.text = text))\n      : super.splice(0, this.length, (this.last = this.text = text));\n  }\n  clone() {\n    const clone = new Construct(...this);\n    clone.text = this.text;\n    clone.last = this.last;\n    return clone;\n  }\n};\n\n/**\n * @template {string} K\n * @template {{[k in K]: (range: typeof RegExpRange.define, ranges: Record<K, RegExpRange>) => RegExpRange}} T\n * @param {T} factories\n */\nexport const Ranges = factories => {\n  /** @type {PropertyDescriptorMap} */\n  const descriptors = {\n    ranges: {\n      get() {\n        return ranges;\n      },\n      enumerable: true,\n      configurable: false,\n    },\n  };\n\n  // TODO: Revisit once unicode classes are stable\n  const safeRange = (strings, ...values) => {\n    try {\n      return RegExpRange.define(strings, ...values);\n    } catch (exception) {}\n  };\n\n  for (const property in factories) {\n    descriptors[property] = {\n      get() {\n        const value = factories[property](safeRange, ranges);\n        if (value === undefined) throw new RangeError(`Failed to define: ${factories[property]}`);\n        Object.defineProperty(ranges, property, {value, enumerable: true, configurable: false});\n        return value;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n  }\n\n  /** @type {{ranges: typeof ranges} & Record<K, RegExpRange>} */\n  const ranges = Object.create(null, descriptors);\n\n  return ranges;\n};\n\n/// Internal\n\nconst defaults = {\n  mode: {initializeState, finalizeState, createToken},\n};\n\n/** @typedef {typeof stats} ContextStats */\nconst stats = {\n  captureCount: 0,\n  contextCount: 0,\n  tokenCount: 0,\n  nestedCaptureCount: 0,\n  nestedContextCount: 0,\n  nestedTokenCount: 0,\n};\n\n/// Ambient\n\n/** @typedef {import('./types').Match} Match */\n/** @typedef {import('./types').Groups} Groups */\n/** @typedef {import('./types').Group} Group */\n/** @typedef {import('./types').Goal} Goal */\n/** @typedef {import('./types').Context} Context */\n/** @typedef {import('./types').Contexts} Contexts */\n/** @typedef {import('./types').State} State */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {Goal['type']} type */\n/** @typedef {{symbol: symbol, text: string, type: type, goal?: Goal, group?: Group}} token */\n","﻿import {Ranges} from '../../packages/matcher/experimental/common/helpers.js';\n\nexport const ECMAScriptRanges = Ranges({\n  NullCharacter: range => range`\\0`,\n  BinaryDigit: range => range`01`,\n  DecimalDigit: range => range`0-9`,\n  ControlLetter: range => range`A-Za-z`,\n  HexLetter: range => range`A-Fa-f`,\n  HexDigit: (range, {DecimalDigit, HexLetter}) => range`${DecimalDigit}${HexLetter}`,\n  GraveAccent: range => range`${'`'}`,\n  ZeroWidthNonJoiner: range => range`\\u200c`,\n  ZeroWidthJoiner: range => range`\\u200d`,\n  ZeroWidthNoBreakSpace: range => range`\\ufeff`,\n  CombiningGraphemeJoiner: range => range`\\u034f`,\n  Whitespace: (range, {ZeroWidthNoBreakSpace}) => range`\\s${ZeroWidthNoBreakSpace}`,\n  IdentifierStart: (range, {UnicodeIDStart}) => range`_$${UnicodeIDStart}`,\n  IdentifierPart: (range, {UnicodeIDContinue, ZeroWidthNonJoiner, ZeroWidthJoiner, CombiningGraphemeJoiner}) =>\n    range`$${UnicodeIDContinue}${ZeroWidthNonJoiner}${ZeroWidthJoiner}${CombiningGraphemeJoiner}`,\n  UnicodeIDStart: range =>\n    range`\\p{ID_Start}` ||\n    range`A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  UnicodeIDContinue: range =>\n    range`\\p{ID_Continue}` ||\n    range`0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n});\n","﻿//@ts-check\nimport {\n  generateDefinitions,\n  defineSymbol,\n  Keywords,\n  Construct,\n} from '../../packages/matcher/experimental/common/helpers.js';\n\nexport const {\n  ECMAScriptGoal,\n  ECMAScriptCommentGoal,\n  ECMAScriptRegExpGoal,\n  ECMAScriptRegExpClassGoal,\n  ECMAScriptStringGoal,\n  ECMAScriptTemplateLiteralGoal,\n  ECMAScriptDefinitions,\n} = (() => {\n  // Avoids TypeScript \"always …\" style errors\n  const DEBUG_CONSTRUCTS = Boolean(false);\n\n  const identities = {\n    UnicodeIDStart: 'ECMAScript.UnicodeIDStart',\n    UnicodeIDContinue: 'ECMAScript.UnicodeIDContinue',\n    HexDigits: 'ECMAScript.HexDigits',\n    CodePoint: 'ECMAScript.CodePoint',\n    ControlEscape: 'ECMAScript.ControlEscape',\n    ContextualWord: 'ECMAScript.ContextualWord',\n    RestrictedWord: 'ECMAScript.RestrictedWord',\n    FutureReservedWord: 'ECMAScript.FutureReservedWord',\n    Keyword: 'ECMAScript.Keyword',\n  };\n\n  const goals = {};\n  const symbols = {};\n\n  const ECMAScriptGoal = (goals[(symbols.ECMAScriptGoalSymbol = defineSymbol('ECMAScriptGoal'))] = {\n    type: undefined,\n    flatten: undefined,\n    fold: undefined,\n    openers: ['{', '(', '[', \"'\", '\"', '`', '/', '/*', '//'],\n    // TODO: Properly fault on invalid closer\n    closers: ['}', ')', ']'],\n    /** @type {ECMAScript.Keywords} */\n    // @ts-ignore\n    keywords: Keywords({\n      // TODO: Let's make those constructs (this.new.target borks)\n      // [identities.MetaProperty]: 'new.target import.meta',\n      [identities.Keyword]: [\n        ...['await', 'break', 'case', 'catch', 'class', 'const', 'continue'],\n        ...['debugger', 'default', 'delete', 'do', 'else', 'export', 'extends'],\n        ...['finally', 'for', 'function', 'if', 'import', 'in', 'instanceof'],\n        ...['let', 'new', 'return', 'super', 'switch', 'this', 'throw', 'try'],\n        ...['typeof', 'var', 'void', 'while', 'with', 'yield'],\n      ],\n      [identities.RestrictedWord]: ['interface', 'implements', 'package', 'private', 'protected', 'public'],\n      [identities.FutureReservedWord]: ['enum'],\n      // NOTE: This is purposely not aligned with the spec\n      [identities.ContextualWord]: ['arguments', 'async', 'as', 'from', 'of', 'static', 'get', 'set'],\n    }),\n\n    punctuation: {\n      '=>': 'combinator',\n      '?': 'delimiter',\n      ':': 'delimiter',\n      ',': 'delimiter',\n      ';': 'breaker',\n    },\n  });\n\n  const ECMAScriptCommentGoal = (goals[\n    (symbols.ECMAScriptCommentGoalSymbol = defineSymbol('ECMAScriptCommentGoal'))\n  ] = {\n    type: 'comment',\n    flatten: true,\n    fold: true,\n    spans: {\n      // SINLE-LINE COMMENT\n      //\n      //    This faults when match[1] === ''\n      //    It forwards until ‹\\n›\n      '//': /.*?(?=\\n|($))/g,\n      //\n      //    Alternative: '\\n' ie indexOf(…, lastIndex)\n      //\n      // MULTI-LINE COMMENT\n      //\n      //   This faults when match[1] === ''\n      //   It forwards until ‹*/›\n      '/*': /[^]*?(?=\\*\\/|($))/g,\n      //\n      //   Alternative: '*/' ie indexOf(…, lastIndex)\n    },\n  });\n\n  const ECMAScriptRegExpGoal = (goals[(symbols.ECMAScriptRegExpGoalSymbol = defineSymbol('ECMAScriptRegExpGoal'))] = {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: ['(', '{', '['],\n    closers: [],\n    opener: '/',\n    closer: '/',\n    punctuators: ['+', '*', '?', '|', '^', '.', '?=', '?:', '?!'],\n    punctuation: {\n      '[': 'combinator',\n      ']': 'combinator',\n      '(': 'combinator',\n      ')': 'combinator',\n      '{': 'combinator',\n      '}': 'combinator',\n    },\n    spans: {\n      // This faults when match[1] === ''\n      //   It forwards thru ‹•\\d•,•}› ‹•,•\\d•}› or ‹•\\d•}› only\n      '{': /\\s*(?:\\d+\\s*,\\s*\\d+|\\d+\\s*,|\\d+|,\\s*\\d+)\\s*}|()/g,\n    },\n  });\n\n  const ECMAScriptRegExpClassGoal = (goals[\n    (symbols.ECMAScriptRegExpClassGoal = defineSymbol('ECMAScriptRegExpClassGoal'))\n  ] = {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: [],\n    closers: [']'],\n    opener: '[',\n    closer: ']',\n    punctuators: ['\\\\', '^', '-'],\n    punctuation: {\n      '[': 'pattern',\n      ']': 'combinator',\n      '(': 'pattern',\n      ')': 'pattern',\n      '{': 'pattern',\n      '}': 'pattern',\n    },\n  });\n\n  ECMAScriptRegExpGoal.openers['['] = {\n    goal: symbols.ECMAScriptRegExpClassGoal,\n    parentGoal: symbols.ECMAScriptRegExpGoalSymbol,\n  };\n\n  const ECMAScriptStringGoal = (goals[(symbols.ECMAScriptStringGoalSymbol = defineSymbol('ECMAScriptStringGoal'))] = {\n    type: 'quote',\n    flatten: true,\n    fold: true,\n    spans: {\n      // SINGLE-QUOTE\n      //\n      //   This faults when match[1] === '\\n' or ''\n      //   It forwards until ‹'›\n      \"'\": /(?:[^'\\\\\\n]+?(?=\\\\[^]|')|\\\\[^])*?(?='|($|\\n))/g,\n      //\n      //   We cannot use indexOf(…, lastIndex)\n      //\n      // DOUBLE-QUOTE\n      //\n      //   This faults when match[1] === '\\n' or ''\n      //   It forwards until ‹\"›\n      '\"': /(?:[^\"\\\\\\n]+?(?=\\\\[^]|\")|\\\\[^])*?(?=\"|($|\\n))/g,\n      //\n      //   We cannot use indexOf(…, lastIndex)\n    },\n  });\n\n  const ECMAScriptTemplateLiteralGoal = (goals[\n    (symbols.ECMAScriptTemplateLiteralGoalSymbol = defineSymbol('ECMAScriptTemplateLiteralGoal'))\n  ] = {\n    type: 'quote',\n    flatten: true,\n    fold: false,\n    openers: ['${'],\n    opener: '`',\n    closer: '`',\n    punctuation: {\n      '${': 'opener',\n    },\n    spans: {\n      // GRAVE/BACKTIC QUOTE\n      //\n      //   This faults when match[1] === ''\n      //   It forwards until ‹\\n› ‹`› or ‹${›\n      '`': /(?:[^`$\\\\\\n]+?(?=\\n|\\\\.|`|\\$\\{)|\\\\.)*?(?=\\n|`|\\$\\{|($))/g,\n      //\n      //   We cannot use indexOf(…, lastIndex)\n    },\n  });\n\n  {\n    const operativeKeywords = new Set('await delete typeof void yield'.split(' '));\n    const declarativeKeywords = new Set('export import default async function class const let var'.split(' '));\n    const constructiveKeywords = new Set(\n      'await async function class await delete typeof void yield this new'.split(' '),\n    );\n\n    /**\n     * Determines if the capture is a valid keyword, identifier or undefined\n     * based on matcher state (ie lastAtom, context, intent) and subset\n     * of ECMAScript keyword rules of significant.\n     *\n     * TODO: Refactor or extensively test captureKeyword\n     * TODO: Document subset of ECMAScript keyword rules of significant\n     *\n     * @param {string} text - Matched by /\\b(‹text›)\\b(?=[^\\s$_:]|\\s+[^:]|$)\n     * @param {State} state\n     * @param {string} [intent]\n     */\n    const captureKeyword = (text, {lastAtom: pre, lineIndex, context}, intent) => {\n      //                              (a) WILL BE ‹fault› UNLESS  …\n      switch (intent || (intent = context.intent)) {\n        //  DESTRUCTURING INTENT  (ie Variable/Class/Function declarations)\n        case 'destructuring':\n        //  DECLARATION INTENT  (ie Variable/Class/Function declarations)\n        case 'declaration':\n          return (\n            //                        (b)   WILL BE ‹idenfitier›\n            //                              AFTER ‹.›  (as ‹operator›)\n            (pre !== undefined && pre.text === '.' && 'identifier') ||\n            //                        (c)   WILL BE ‹keyword›\n            //                              IF DECLARATIVE AND …\n            (declarativeKeywords.has(text) &&\n              //                      (c1)  NOT AFTER ‹keyword› …\n              (pre === undefined ||\n                pre.type !== 'keyword' ||\n                //                          UNLESS IS DIFFERENT\n                (pre.text !== text &&\n                  //                        AND NOT ‹export› NOR ‹import›\n                  !(text === 'export' || text === 'import') &&\n                  //                  (c2)  FOLLOWS ‹export› OR ‹default›\n                  (pre.text === 'export' ||\n                    pre.text === 'default' ||\n                    //                (c3)  IS ‹function› AFTER ‹async›\n                    (pre.text === 'async' && text === 'function')))) &&\n              'keyword')\n          );\n        default:\n          return (\n            //                        (b)   WILL BE ‹idenfitier› …\n            (((pre !== undefined &&\n              //                      (b1)  AFTER ‹.›  (as ‹operator›)\n              pre.text === '.') ||\n              //                      (b2)  OR ‹await› (not as ‹keyword›)\n              (text === 'await' && context.awaits === false) ||\n              //                      (b3)  OR ‹yield› (not as ‹keyword›)\n              (text === 'yield' && context.yields === false)) &&\n              'identifier') ||\n            //                        (c)   WILL BE ‹keyword› …\n            ((pre === undefined ||\n              //                      (c1)  NOT AFTER ‹keyword›\n              pre.type !== 'keyword' ||\n              //                      (c2)  UNLESS OPERATIVE\n              operativeKeywords.has(pre.text) ||\n              //                      (c3)  OR ‹if› AFTER ‹else›\n              (text === 'if' && pre.text === 'else') ||\n              //                      (c4)  OR ‹default› AFTER ‹export›\n              (text === 'default' && pre.text === 'export') ||\n              //                      (c5)  NOT AFTER ‹async›\n              //                            EXCEPT ‹function›\n              ((pre.text !== 'async' || text === 'function') &&\n                //                    (c6)  AND NOT AFTER ‹class›\n                //                          EXCEPT ‹extends›\n                (pre.text !== 'class' || text === 'extends') &&\n                //                    (c7)  AND NOT AFTER ‹for›\n                //                          EXCEPT ‹await› (as ‹keyword›)\n                (pre.text !== 'for' || text === 'await') &&\n                //                    (c6)  NOT AFTER ‹return›\n                //                          AND IS DIFFERENT\n                //                          AND IS NOT ‹return›\n                (pre.text !== 'return'\n                  ? pre.text !== text\n                  : text !== 'return'\n                  ? //                (c7)  OR AFTER ‹return›\n                    //                      AND IS CONSTRUCTIVE\n                    constructiveKeywords.has(text)\n                  : //                (c8)  OR AFTER ‹return›\n                    //                      AND IS ‹return›\n                    //                      WHEN ON NEXT LINE\n                    pre.lineNumber < 1 + lineIndex))) &&\n              'keyword')\n          );\n      }\n    };\n\n    const EmptyConstruct = Object.freeze(new Construct());\n    const initializeContext = context => {\n      if (context.state['USE_CONSTRUCTS'] !== true) return;\n      context.parentContext == null || context.parentContext.currentConstruct == null\n        ? (context.currentConstruct == null && (context.currentConstruct = EmptyConstruct),\n          (context.parentConstruct = context.openingConstruct = EmptyConstruct))\n        : (context.currentConstruct == null && (context.currentConstruct = new Construct()),\n          (context.parentConstruct = context.parentContext.currentConstruct),\n          context.parentContext.goal === ECMAScriptGoal && context.parentConstruct.add(context.group.description),\n          (context.openingConstruct = context.parentConstruct.clone()),\n          DEBUG_CONSTRUCTS === true && console.log(context));\n    };\n\n    goals[symbols.ECMAScriptRegExpGoalSymbol].initializeContext = goals[\n      symbols.ECMAScriptStringGoalSymbol\n    ].initializeContext = goals[symbols.ECMAScriptTemplateLiteralGoalSymbol].initializeContext = initializeContext;\n\n    /** @param {Context} context */\n    goals[symbols.ECMAScriptGoalSymbol].initializeContext = context => {\n      context.captureKeyword = captureKeyword;\n      context.state['USE_CONSTRUCTS'] === true && initializeContext(context);\n    };\n  }\n\n  return {\n    ECMAScriptGoal,\n    ECMAScriptCommentGoal,\n    ECMAScriptRegExpGoal,\n    ECMAScriptRegExpClassGoal,\n    ECMAScriptStringGoal,\n    ECMAScriptTemplateLiteralGoal,\n    ECMAScriptDefinitions: generateDefinitions({\n      symbols,\n      identities,\n      goals,\n      groups: {\n        ['{']: {opener: '{', closer: '}'},\n        ['(']: {opener: '(', closer: ')'},\n        ['[']: {opener: '[', closer: ']'},\n        ['//']: {\n          opener: '//',\n          closer: '\\n',\n          goal: symbols.ECMAScriptCommentGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹comment›',\n        },\n        ['/*']: {\n          opener: '/*',\n          closer: '*/',\n          goal: symbols.ECMAScriptCommentGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹comment›',\n        },\n        ['/']: {\n          opener: '/',\n          closer: '/',\n          goal: symbols.ECMAScriptRegExpGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹pattern›',\n        },\n        [\"'\"]: {\n          opener: \"'\",\n          closer: \"'\",\n          goal: symbols.ECMAScriptStringGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹string›',\n        },\n        ['\"']: {\n          opener: '\"',\n          closer: '\"',\n          goal: symbols.ECMAScriptStringGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹string›',\n        },\n        ['`']: {\n          opener: '`',\n          closer: '`',\n          goal: symbols.ECMAScriptTemplateLiteralGoalSymbol,\n          parentGoal: symbols.ECMAScriptGoalSymbol,\n          description: '‹template›',\n        },\n        ['${']: {\n          opener: '${',\n          closer: '}',\n          goal: symbols.ECMAScriptGoalSymbol,\n          parentGoal: symbols.ECMAScriptTemplateLiteralGoalSymbol,\n          description: '‹span›',\n        },\n      },\n    }),\n  };\n})();\n\n/** @typedef {import('./types').State} State */\n/** @typedef {import('./types').Context} Context */\n\n/**\n * @typedef {'await'|'break'|'case'|'catch'|'class'|'const'|'continue'|'debugger'|'default'|'delete'|'do'|'else'|'export'|'extends'|'finally'|'for'|'function'|'if'|'import'|'in'|'instanceof'|'new'|'return'|'super'|'switch'|'this'|'throw'|'try'|'typeof'|'var'|'void'|'while'|'with'|'yield'} ECMAScript.Keyword\n * @typedef {'interface'|'implements'|'package'|'private'|'protected'|'public'} ECMAScript.RestrictedWord\n * @typedef {'enum'} ECMAScript.FutureReservedWord\n * @typedef {'arguments'|'async'|'as'|'from'|'of'|'static'} ECMAScript.ContextualKeyword\n * @typedef {Record<ECMAScript.Keyword|ECMAScript.RestrictedWord|ECMAScript.FutureReservedWord|ECMAScript.ContextualKeyword, symbol>} ECMAScript.Keywords\n */\n","﻿import {ECMAScriptRanges} from './es-ranges.js';\nimport {\n  // TODO: Always import expected goals even if not directly referenced\n  ECMAScriptGoal,\n  ECMAScriptCommentGoal,\n  ECMAScriptRegExpGoal,\n  ECMAScriptRegExpClassGoal,\n  ECMAScriptStringGoal,\n  ECMAScriptTemplateLiteralGoal,\n} from './es-definitions.js';\nimport {TokenMatcher} from '../../packages/matcher/lib/token-matcher.js';\n\nDUMMY: async () => {\n  /* prettier-ignore */ // Make sure this block never lints\n  {\n    Identifiers: {\n      $\\u0032; \\u0024\\u0032; this.new.target;\n    }\n\n    Solidus: {\n                        // [x] ExpressionStart never divide\n      ( ([              /([(regexp)])/g / [] ] ) );\n      ( [] /( [         /([(regexp)])/g / [] ] ) );\n      ( ([]) /( [       /([(regexp)])/g / [] ] ) );\n      ( [] /* */ /( [   /([(regexp)])/g / [] ] ) );\n      ( []/( [/*/*//*/*//([(regexp)])/g / [] ] ) );\n\n                        // [x] Literals always divide (never ASI)\n      ( []              /([(divisor)])/g / [] );\n      ( ([])            /([(divisor)])/g / [] );\n      ( []/*/*//**//*/*//([(divisor)])/g / [] );\n\n      a = b             // [x] Identifiers always divide (never ASI)\n                        /(divisor)/g.exec(c).map(d);\n\n                        // [x] Declaration (ASI) then ExpressionStart\n      function ƒ () {}  /(regexp)/g.exec(c).map(d);\n\n\n      async () => {}    // [x] Curly+LineBreak is ASI\n                        /(regexp)/g.exec(c).map(d);\n      async () => {}    /* [x] and with Multiline Comment */\n                        /(regexp)/g.exec(c).map(d);\n\n      async () => ({})  // [x] Parenthsized Expression (no ASI)\n                        /(divisor)/g.exec(c).map(d);\n\n      async ()          // [x] Function calls always in Expression\n                        /(divisor)/g.exec(c).map(d);\n      async ()          /(divisor)/g.exec(c).map(d);\n\n      async () =>       // [x] Arrow Function Body is Expression\n                        /(regexp)/g.exec(c).map(d);\n\n                        // [ ] ObjectLiteral is \"a literal\"\n      const x = {}      /(divisor)/g.exec(c).map(d);\n\n                        // [ ] Function/ClassExpression is \"an expression\"\n      const y = function ƒ () {}\n                        /(divisor)/g.exec(c).map(d);\n\n                        // Keyword always regexp (regardless of ASI)\n      return await/*/\\*//(regexp)/g.exec(c).map(d);\n\n      (function () {\n                        // Recursively operative Keywords\n                        void    void\n                        typeof  typeof\n                        delete  this\n\n        (async function () {\n                        // Recursively operative Keywords\n                        await   await\n                        ('')\n        });\n\n        (function* () {\n                        // Recursively operative Keywords\n                        yield   yield\n                        ('')\n        });\n\n                        return  new     class {}\n                        return\n                        return\n                        return  async   function () {}\n\n                        // [ ] Non-Keywords\n                        async\n                        async   ('')\n      });\n\n      // Matt Austin's\n      Function(\"arg=`\", \"/*body`){});({x: this/**/\");\n      (function(arg=`/*``*/){/*body`){});({x: this/**/})\n    }\n\n    Strings: {\n      '@@'            // [x] Not a ‹fault›\n\n      '\\\n      a\\a'            // [x] ‹quote›•‹comment›\n\n      \"\\\n      \\\\n\\\\b\"/**/     // [x] ‹quote›•‹comment›•‹comment›\n    }\n\n    Numerals: {\n      0, -0, 1, -1, +1.1, 0.1, 0.1e3\n      0b01, 0x0123456789abcdef\n      NaN, Infinity, -Infinity\n      // 1_1 // [ ] Proposal Numeric Separators\n    }\n\n    RegExp: {\n      /[^[\\]]/g;\n      /{(.)}{{1,}|{}}/g;\n      /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?(?:'|$)/g;\n      /(?:[^\\\\`$]+?(?=\\\\.|`|\\${)|\\\\.)*?(?:`|$|\\$(?={))/g;\n    }\n  }\n};\n\n/** @type {TokenMatcher} */\nexport const matcher = (ECMAScript =>\n  TokenMatcher.define(\n    // Matcher generator for this matcher instance\n    entity =>\n      TokenMatcher.join(\n        entity(ECMAScript.Break()),\n        entity(ECMAScript.Whitespace()),\n        entity(ECMAScript.Escape()),\n        entity(ECMAScript.Comment()),\n        entity(ECMAScript.StringLiteral()),\n        entity(ECMAScript.Opener()),\n        entity(ECMAScript.Closer()),\n        entity(ECMAScript.Solidus()),\n        entity(ECMAScript.Operator()),\n        entity(ECMAScript.Keyword()),\n        entity(ECMAScript.Number()),\n        entity(ECMAScript.Identifier()),\n\n        // Defines how to address non-entity character(s):\n        entity(\n          ECMAScript.Fallthrough({\n            type: 'fault',\n            flatten: true,\n          }),\n        ),\n      ),\n    // RegExp flags for this matcher instance\n    'gu',\n    // Property descriptors for this matcher instance\n    {\n      goal: {value: ECMAScriptGoal, enumerable: true, writable: false},\n    },\n  ))({\n  Fallthrough: ({fallthrough = '.', type, flatten} = {}) =>\n    TokenMatcher.define(\n      (typeof fallthrough === 'string' || (fallthrough = '.'), type && typeof type === 'string')\n        ? entity => TokenMatcher.sequence/* regexp */ `(\n            ${fallthrough}\n            ${entity((text, entity, match, state) => {\n              TokenMatcher.capture(\n                type !== 'fault'\n                  ? type || state.context.goal.type || 'sequence'\n                  : state.context.goal !== ECMAScriptGoal\n                  ? state.context.goal.type || 'sequence'\n                  : 'fault',\n                match,\n              );\n              typeof flatten === 'boolean' && (match.flatten = flatten);\n            })}\n          )`\n        : entity => `${fallthrough}`,\n    ),\n  Break: ({lf = true, crlf = false} = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        ${TokenMatcher.join(lf && '\\\\n', crlf && '\\\\r\\\\n')}\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          TokenMatcher.capture(\n            (state.context.group != null && state.context.group.closer === '\\n' && TokenMatcher.close(text, state)) ||\n              // NOTE: ‹break› takes precedence over ‹closer›\n              'break',\n            match,\n          );\n          match.flatten = false;\n        })}\n      )`,\n    ),\n  Whitespace: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\s+\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          TokenMatcher.capture((match.flatten = state.lineOffset !== match.index) ? 'whitespace' : 'inset', match); // , text\n        })}\n      )`,\n    ),\n  Escape: ({\n    IdentifierStartCharacter = RegExp(TokenMatcher.sequence/* regexp */ `[${ECMAScriptRanges.IdentifierStart}]`, 'u'),\n    IdentifierPartSequence = RegExp(TokenMatcher.sequence/* regexp */ `[${ECMAScriptRanges.IdentifierPart}]+`, 'u'),\n    fromUnicodeEscape = (fromCodePoint => text => fromCodePoint(parseInt(text.slice(2), 16)))(String.fromCodePoint),\n  } = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\\\u[${ECMAScriptRanges.HexDigit}][${ECMAScriptRanges.HexDigit}][${ECMAScriptRanges.HexDigit}][${\n        ECMAScriptRanges.HexDigit\n      }]\n        ${entity((text, entity, match, state) => {\n          match.format = 'escape';\n          TokenMatcher.capture(\n            state.context.goal.type ||\n              (state.context.goal === ECMAScriptGoal &&\n              state.lastToken != null &&\n              (state.lastToken.type === 'identifier'\n                ? IdentifierPartSequence.test(fromUnicodeEscape(text))\n                : IdentifierStartCharacter.test(fromUnicodeEscape(text)))\n                ? ((match.flatten = true), 'identifier')\n                : 'escape'),\n            match,\n          );\n        })}\n      )|(\n        \\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\c[${ECMAScriptRanges.ControlLetter}]\n        |\\\\x[${ECMAScriptRanges.HexDigit}][${ECMAScriptRanges.HexDigit}]\n        |\\\\u\\{[${ECMAScriptRanges.HexDigit}]*\\}\n        |\\\\[^]\n        ${entity((text, entity, match, state) => {\n          TokenMatcher.capture(state.context.goal.type || 'escape', match);\n          match.capture[ECMAScriptGoal.keywords[text]] = text;\n        })}\n      )`,\n    ),\n  Comment: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        //|/\\*|\\*/\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal.openers && state.context.goal.openers[text]\n              ? TokenMatcher.open(text, state) ||\n                  (state.nextContext.goal.spans != null &&\n                    state.nextContext.goal.spans[text] &&\n                    (TokenMatcher.forward(state.nextContext.goal.spans[text], match, state),\n                    (match[match.format] = state.nextContext.goal.type || 'comment')),\n                  // (match.flatten = true),\n                  'opener')\n              : state.context.group && state.context.group.closer === text\n              ? TokenMatcher.close(text, state) ||\n                (state.context.goal === ECMAScriptCommentGoal && (match[match.format] = ECMAScriptCommentGoal.type),\n                'closer')\n              : (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                (((match.punctuator = state.context.goal.punctuation && state.context.goal.punctuation[text]) ||\n                  (state.context.goal.punctuators && state.context.goal.punctuators[text] === true)) &&\n                  'punctuator') ||\n                  state.context.goal.type ||\n                  'sequence'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  StringLiteral: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \"|'|${'`'}\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal === ECMAScriptGoal\n              ? TokenMatcher.open(text, state) ||\n                  // Safely fast forward to end of string\n                  (state.nextContext.goal.spans != null &&\n                    state.nextContext.goal.spans[text] &&\n                    TokenMatcher.forward(\n                      state.nextContext.goal.spans[text],\n                      match,\n                      state,\n                      // DONE: fix deltas for forwards expressions\n                    ),\n                  (match.punctuator =\n                    (state.nextContext.goal.punctuation && state.nextContext.goal.punctuation[text]) ||\n                    state.nextContext.goal.type ||\n                    'quote'),\n                  // (match.flatten = true),\n                  'opener')\n              : state.context.group.closer === text\n              ? TokenMatcher.close(text, state) || ((match.punctuator = state.context.goal.type || 'quote'), 'closer')\n              : state.context.goal.type || 'quote',\n            match,\n          );\n        })}\n      )`,\n    ),\n  Opener: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\$\\{|\\{|\\(|\\[\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal.punctuators != null && state.context.goal.punctuators[text] === true\n              ? (match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || 'combinator')\n              : state.context.goal.openers != null &&\n                state.context.goal.openers[text] === true &&\n                (state.context.goal.spans == null ||\n                  state.context.goal.spans[text] == null ||\n                  // Check if conditional span faults\n                  TokenMatcher.forward(state.context.goal.spans[text], match, state, false))\n              ? TokenMatcher.open(text, state) ||\n                ((match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || state.context.goal.type),\n                'opener')\n              : // If it is passive sequence we keep only on character\n                (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                state.context.goal.type || 'sequence'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  Closer: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\}|\\)|\\]\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.group.closer === text ||\n                (state.context.goal.closers && state.context.goal.closers[text] === true)\n              ? TokenMatcher.close(text, state) ||\n                ((match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || state.context.goal.type),\n                'closer')\n              : state.context.goal.type || 'sequence',\n            match,\n          );\n          // TODO: Figure out where to fast forward after ‹${…}›\n        })}\n      )`,\n    ),\n  Solidus: () =>\n    // TODO: Refine the necessary criteria for RegExp vs Div\n    // TEST: [eval('var g;class x {}/1/g'), eval('var g=class x {}/1/g')]\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        \\/=|\\/\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal === ECMAScriptRegExpGoal\n              ? (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                (match.punctuator = state.context.goal.type || 'sequence'),\n                state.context.group.closer !== ']'\n                  ? TokenMatcher.close(text, state) /* fault? */ || 'closer'\n                  : match.punctuator)\n              : state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : state.lastAtom === undefined ||\n                state.lastAtom.type === 'delimiter' ||\n                state.lastAtom.type === 'breaker' ||\n                state.lastAtom.text === '=>' ||\n                (state.lastAtom.type === 'operator'\n                  ? state.lastAtom.text !== '++' && state.lastAtom.text !== '--'\n                  : state.lastAtom.type === 'closer'\n                  ? state.lastAtom.text === '}'\n                  : state.lastAtom.type === 'opener' || state.lastAtom.type === 'keyword')\n              ? TokenMatcher.open(text, state) ||\n                ((match.punctuator =\n                  (state.nextContext.goal.punctuation && state.nextContext.goal.punctuation[text]) ||\n                  state.nextContext.goal.type ||\n                  'pattern'),\n                'opener')\n              : (match.punctuator = 'operator'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  Operator: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        ,|;|\\.\\.\\.|\\.|:|\\?${\n          // We're including non-conflicting RegExp atoms here\n          '[:=!]?'\n        }\n        |\\+\\+|--|=>\n        |\\+=|-=|\\*\\*=|\\*=\n        |&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~\n        |<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>\n        |!==|!=|!|===|==|=\n        |\\+|-|\\*\\*|\\*\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuator';\n          TokenMatcher.capture(\n            state.context.goal === ECMAScriptGoal\n              ? (text === '*' && state.lastAtom && state.lastAtom.text === 'function' && 'keyword') ||\n                  (ECMAScriptGoal.punctuation[text] || 'operator')\n              : state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator =\n                  (state.context.goal.punctuation && state.context.goal.punctuation[text]) || 'punctuation')\n              : (text.length === 1 || ((state.nextOffset = match.index + 1), (text = match[0] = text[0])),\n                state.context.goal.type || 'sequence'),\n            match,\n          );\n        })}\n      )`,\n    ),\n  Keyword: () =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `\\b(\n        ${TokenMatcher.join(...ECMAScriptGoal.keywords).replace(/\\./g, '\\\\.')}\n        ${entity((text, entity, match, state) => {\n          match.format = 'identifier';\n          TokenMatcher.capture(\n            (match.flatten = state.context.goal !== ECMAScriptGoal)\n              ? state.context.goal.type || 'sequence'\n              : state.lastAtom != null && state.lastAtom.text === '.'\n              ? 'identifier'\n              : state.context.captureKeyword === undefined\n              ? 'keyword'\n              : state.context.captureKeyword(text, state) || 'fault',\n            match,\n          );\n        })}\n      )\\b(?=[^\\s$_:]|\\s+[^:]|$)`,\n    ),\n  Identifier: ({\n    RegExpFlags = new RegExp(\n      /\\w/g[Symbol.replace](\n        /*regexp*/ `^(?:g|i|m|s|u|y)+$`,\n        /*regexp*/ `$&(?=[^$&]*$)`, // interleaved\n      ),\n    ),\n  } = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `(\n        [${ECMAScriptRanges.IdentifierStart}][${ECMAScriptRanges.IdentifierPart}]*\n        ${entity((text, entity, match, state) => {\n          match.format = 'identifier';\n          TokenMatcher.capture(\n            state.context.goal !== ECMAScriptGoal\n              ? (([text] = text.split(/\\b/, 2)),\n                (state.nextOffset = match.index + text.length),\n                (match[0] = text),\n                // identity\n                state.context.goal.type || 'sequence')\n              : state.lastToken != null && state.lastToken.punctuator === 'pattern' && RegExpFlags.test(text)\n              ? ((match.flatten = true), (match.punctuator = ECMAScriptRegExpGoal.type), 'closer')\n              : ((match.flatten = true), 'identifier'),\n            match,\n          );\n        })}\n      )`,\n      `${ECMAScriptRanges.IdentifierStart}${ECMAScriptRanges.IdentifierPart}`.includes('\\\\p{') ? 'u' : '',\n    ),\n  Number: ({\n    NumericSeparator,\n    Digits = NumericSeparator\n      ? Digit => TokenMatcher.sequence/* regexp */ `[${Digit}][${Digit}${TokenMatcher.escape(NumericSeparator)}]*`\n      : Digit => TokenMatcher.sequence/* regexp */ `[${Digit}]+`,\n    DecimalDigits = Digits(ECMAScriptRanges.DecimalDigit),\n    HexDigits = Digits(ECMAScriptRanges.HexDigit),\n    BinaryDigits = Digits(ECMAScriptRanges.BinaryDigit),\n  } = {}) =>\n    TokenMatcher.define(\n      entity => TokenMatcher.sequence/* regexp */ `\\b(\n        ${DecimalDigits}\\.${DecimalDigits}[eE]${DecimalDigits}\n        |\\.${DecimalDigits}[eE]${DecimalDigits}\n        |0[xX]${HexDigits}\n        |0[bB]${BinaryDigits}\n        |${DecimalDigits}\\.${DecimalDigits}\n        |\\.${DecimalDigits}\n        |${DecimalDigits}\n        ${entity((text, entity, match, state) => {\n          match.format = 'number';\n          TokenMatcher.capture(state.context.goal.type || 'number', match); // , text\n        })}\n      )\\b`,\n    ),\n});\n","﻿//@ts-check\n\nimport {matcher} from './es-matcher.js';\nimport {initializeState, finalizeState, createToken} from '../../packages/matcher/experimental/common/helpers.js';\nimport {TokenMatcher} from '../../packages/matcher/lib/token-matcher.js';\n\n//@ts-ignore\nexport const mode = TokenMatcher.createMode(matcher, {\n  USE_CONSTRUCTS: false,\n\n  syntax: 'ecmascript',\n  aliases: ['es', 'js', 'javascript'],\n\n  preregister: parser => {\n    parser.unregister('es');\n    parser.unregister('ecmascript');\n  },\n\n  initializeState: state => {\n    state.USE_CONSTRUCTS = mode.USE_CONSTRUCTS === true;\n    initializeState(state);\n  },\n\n  finalizeState: state => {\n    finalizeState(state);\n  },\n\n  createToken: (log => (match, state) => {\n    // let construct;\n    // const lastAtom = state.lastAtom;\n    const token = createToken(match, state);\n\n    if (state.USE_CONSTRUCTS === true && token !== undefined) {\n      const {type, text, context = state.nextTokenContext} = token;\n      //@ts-ignore\n      if (token.goal === matcher.goal) {\n        switch (type) {\n          case 'inset':\n          case 'whitespace':\n          case 'opener':\n          // if (context.currentConstruct.last === '=>') {\n          // } else\n          // if (text === '{') {\n          //   if (context.openingConstruct[context.openingConstruct.length - 2] === '(…)') {\n          //     [\n          //       ,\n          //       context.openingConstruct.block,\n          //     ] = /((?:(?:async |)function (?:\\* |)(?:\\S+ |)|(?:while|for|if|else|catch|switch|with) |)\\(…\\) \\{…\\})?$/.exec(\n          //       context.openingConstruct.text,\n          //     );\n          //     log('%s\\t%o', text, {...context.openingConstruct});\n          //   } else {\n          //     // log('%s\\t%o', text, [...context.openingConstruct.text]);\n          //   }\n          // }\n          case 'closer':\n            break;\n          case 'number':\n          case 'identifier':\n            context.currentConstruct.add(`‹${type}›`);\n            break;\n          case 'combinator': // ie ‹=>›\n          case 'delimiter':\n          case 'breaker':\n          case 'operator':\n            switch (text) {\n              case ',':\n              case ';':\n                context.currentConstruct.add(text);\n                context.currentConstruct.set('');\n                break;\n              case '=>':\n              case '.':\n                context.currentConstruct.add(text);\n                break;\n              case ':':\n                if (context.currentConstruct.length === 1) {\n                  context.currentConstruct.add(text);\n                  break;\n                }\n              default:\n                context.currentConstruct.set(text);\n                break;\n            }\n            break;\n          case 'break':\n            context.currentConstruct.last !== undefined &&\n              (context.currentConstruct.last === 'return' ||\n                context.currentConstruct.last === 'throw' ||\n                context.currentConstruct.last === 'break' ||\n                context.currentConstruct.last === 'continue' ||\n                context.currentConstruct.last === 'yield' ||\n                context.currentConstruct.last === '{…}') &&\n              context.currentConstruct.set('');\n            break;\n          case 'keyword':\n            switch (text) {\n              case 'for':\n              case 'if':\n              case 'do':\n              case 'while':\n              case 'with':\n                context.currentConstruct.set(text);\n                break;\n              default:\n                context.currentConstruct.add(text);\n            }\n            break;\n        }\n        token.construct = context.currentConstruct.text;\n        // typeof log === 'function' &&\n        //   ((type === 'opener' && (text === '/' || text === '{')) ||\n        //     // Semi\n        //     text === ';' ||\n        //     // Arrow Function\n        //     text === '=>') &&\n        //   log(\n        //     '%s\\t%o\\n\\t%o\\n\\t%o',\n        //     text,\n        //     type === 'breaker'\n        //       ? context.currentConstruct.previousText\n        //       : type === 'opener'\n        //       ? token.context.openingConstruct.text\n        //       : token.construct,\n        //     lastAtom,\n        //     token,\n        //   );\n      }\n      token.isDelimiter || context.currentConstruct == null\n        ? context.openingConstruct == null ||\n          context.openingConstruct.length === 0 ||\n          (token.hint = `${token.hint}\\n\\n${context.openingConstruct.text}`)\n        : context.currentConstruct.length > 0\n        ? (token.hint = `${token.hint}\\n\\n${context.currentConstruct.text}`)\n        : context.currentConstruct.previousText &&\n          (token.hint = `${token.hint}\\n\\n${context.currentConstruct.previousText}\\n…`);\n    }\n    return token;\n  })(\n    /** @type {Console['log']} */\n    // null && //\n    //@ts-ignore\n    (console.internal || console).log,\n  ),\n});\n\n/** @typedef {import('./types').State} State */\n","﻿import {mode} from './es-mode.js';\n\n// mode.USE_CONSTRUCTS = true;\nimport.meta.url.includes('standalone.js') && (mode.USE_CONSTRUCTS = true);\n\nexport const {syntax, tokenizer} = mode;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {tokenizer} from '../../../markup/experimental/es/standalone.js';\n\n/** @param {string} text @returns {TokenizerTokens} */\nexport const tokenizeSourceText = text => tokenizer.tokenize(text, {console});\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\n\nexport const {\n  escape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n  join,\n  sequence,\n  matchAll,\n} = Matcher;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from '../../../markup/packages/matcher/matcher.js';\n\nexport const {esx, Rewriter} = (Rewriter => {\n\tconst {escape, sequence, join} = Matcher;\n\tconst {freeze} = Object;\n\tconst {raw} = String;\n\n\t/**\n\t * @param {TemplateStringsArray} strings\n\t * @param {... string} values\n\t */\n\tconst regexp = (strings, ...values) => RegExp(sequence(strings, ...values), 'g');\n\n\tconst word = word => sequence/* regexp */ `\\b${escape(word)}\\b`;\n\n\tconst MARK = '/*/';\n\tconst MARKS = '/*@*/';\n\tconst STARTS = '/*‹*/';\n\tconst ENDS = '/*›*/';\n\tconst LITERAL = '`([^`]*)`';\n\n\tconst esx = {};\n\n\tesx.input = {\n\t\tMarkedExport: Rewriter(\n\t\t\tregexp/* regexp */ `${escape(MARK)}export${escape(MARK)}[\\s\\n]*(${'const let var async function class'\n\t\t\t\t.split(' ')\n\t\t\t\t.map(word)\n\t\t\t\t.join('|')})`,\n\t\t\traw` ${MARKS}export $1`,\n\t\t),\n\t\tModuleImport: Rewriter(regexp/* regexp */ `\\bmodule\\.import\\b${LITERAL}`, raw` ${STARTS} import $1 ${ENDS} `),\n\t\tModuleExport: Rewriter(regexp/* regexp */ `\\bmodule\\.export\\b${LITERAL}`, raw` ${STARTS} export $1 ${ENDS} `),\n\t\tModuleAwait: Rewriter(regexp/* regexp */ `\\bmodule\\.await\\b[\\s\\n]*\\(`, raw`module.await = (`),\n\t\tModuleExportDefault: Rewriter(\n\t\t\tregexp/* regexp */ `\\bmodule\\.export\\.default\\b[\\s\\n]*=`,\n\t\t\t` ${STARTS} export default ${ENDS} `,\n\t\t),\n\t};\n\t(esx.output = {\n\t\tUnmarkedExport: Rewriter(regexp/* regexp */ ` ${escape(MARKS)}export `, raw`${MARK}export${MARK} `),\n\t\tWrappedExportDefault: Rewriter(\n\t\t\tregexp/* regexp */ ` ${escape(STARTS)} export default ${escape(ENDS)} `,\n\t\t\traw`exports.default =`,\n\t\t),\n\t\tUntaggedExpression: Rewriter(regexp/* regexp */ ` ${escape(STARTS)}([^]*?)${escape(ENDS)} `, raw`${MARK}$1${MARK}`),\n\t}),\n\t\t(esx.rewriteEvaluatorInput = Rewriter.create(\n\t\t\tesx.input.MarkedExport,\n\t\t\tesx.input.ModuleImport,\n\t\t\tesx.input.ModuleExport,\n\t\t\tesx.input.ModuleAwait,\n\t\t\tesx.input.ModuleExportDefault,\n\t\t));\n\tesx.rewriteEvaluatorOutput = Rewriter.create(\n\t\tesx.output.UnmarkedExport,\n\t\tesx.output.WrappedExportDefault,\n\t\tesx.output.UntaggedExpression,\n\t);\n\n\treturn {esx, Rewriter};\n})(\n\t(() => {\n\t\tconst {replace: ReplaceSymbol} = Symbol;\n\t\tconst {freeze, defineProperties} = Object;\n\n\t\t/**\n\t\t * @template {RegExp} T\n\t\t * @template {string|((...args) => string)} U\n\t\t * @template {PropertyDescriptorMap} V\n\t\t * @param {T} expression\n\t\t * @param {U} rewrite\n\t\t * @param {V} [propertyDescriptors]\n\t\t * @returns {T & {readonly rewrite: U} & DescribedType<V>}\n\t\t */\n\t\tconst Rewriter = (expression, rewrite, propertyDescriptors) =>\n\t\t\tdefineProperties(expression, {\n\t\t\t\t...propertyDescriptors,\n\t\t\t\t...Rewriter.descriptors,\n\t\t\t\trewrite: {value: rewrite, writable: false, enumerable: true},\n\t\t\t});\n\n\t\tRewriter.reducer = (string, rewriter) => rewriter[ReplaceSymbol](string);\n\n\t\t/** @type {(... RegExp) => (source: string) => string} */\n\t\tRewriter.create = (...rewriters) => string => rewriters.reduce(Rewriter.reducer, string);\n\n\t\tRewriter.descriptors = Object.getOwnPropertyDescriptors(\n\t\t\tclass Rewriter extends RegExp {\n\t\t\t\t[ReplaceSymbol](string, replacement) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\treturn replacement == null && (({rewrite: replacement} = this), replacement) == null\n\t\t\t\t\t\t? string\n\t\t\t\t\t\t: super[ReplaceSymbol](string, replacement);\n\t\t\t\t}\n\t\t\t}.prototype,\n\t\t);\n\n\t\treturn freeze(Rewriter);\n\t})(),\n);\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// import {tokenizer} from '../../../markup/dist/tokenizer.es.js';\nimport {Collator} from '../collator/collator.js';\nimport {ModuleSource, ModuleBinding} from './records.js';\nimport {tokenizeSourceText} from './tokenizer.js';\nimport {esx} from './rewriters.js';\n// import * as symbols from './symbols.js';\nimport {environment} from '../environment.js';\n\nexport const {parseModuleText, parseDynamicModuleEvaluator} = (() => {\n\tconst {DEBUG_COMPILER, DEBUG_CONSTRUCTS, INTERNAL_CONSOLE} = getFlags();\n\n\t/** @type {Console} */\n\tconst console =\n\t\t(globalThis.console && (INTERNAL_CONSOLE !== false && globalThis.console['internal'])) || globalThis.console;\n\n\tconst {log, warn, group, groupCollapsed, groupEnd, table} = console;\n\n\t/** @param {string} sourceText @param {ModuleSource} [sourceRecord] */\n\tconst compileModule = (sourceText, sourceRecord) => {\n\t\tconst {bindings = (sourceRecord.bindings = /** @type {ModuleSource['bindings']} */ ([]))} =\n\t\t\tsourceRecord || (sourceRecord = new ModuleSource({sourceText: sourceText}));\n\t\tconst nonBindings = [];\n\t\tconst {\n\t\t\tcollator: {\n\t\t\t\trootNode: {constructs},\n\t\t\t},\n\t\t} = Collator.collate({sourceRecord, tokens: tokenizeSourceText(sourceText), log});\n\n\t\tif (constructs.length) {\n\t\t\tlet bindingRecords;\n\t\t\t// /** @type {constructs} */\n\t\t\tconst constructList = [];\n\n\t\t\tfor (const construct of constructs) {\n\t\t\t\tconstructList.push(construct.type);\n\t\t\t\tbindingRecords = createBindingRecordsFromConstruct(construct, sourceRecord);\n\t\t\t\tif (bindingRecords === undefined || bindingRecords.length === 0) {\n\t\t\t\t\tnonBindings.push(construct);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (const bindingRecord of bindingRecords) {\n\t\t\t\t\tbindings.push(bindingRecord);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (DEBUG_CONSTRUCTS) {\n\t\t\t\tbindings.length && table(bindings);\n\t\t\t\tnonBindings.length && table(nonBindings);\n\t\t\t\t// console.log(constructList.map(v => `- \\`${v}\\``).join('\\n'));\n\t\t\t}\n\t\t}\n\n\t\treturn sourceRecord;\n\t};\n\n\t/**\n\t * @param {ConstructNode} construct\n\t * @param {SourceRecord} sourceRecord\n\t * @returns {BindingRecord[]}\n\t */\n\tconst createBindingRecordsFromConstruct = (construct, sourceRecord) => {\n\t\tconst record = {};\n\n\t\tconst bindingIntent = (record.bindingIntent = construct.type.startsWith('import')\n\t\t\t? 'import'\n\t\t\t: construct.type.startsWith('export')\n\t\t\t? 'export'\n\t\t\t: undefined);\n\n\t\trecord.declarationText =\n\t\t\tbindingIntent === construct.type || bindingIntent === undefined || construct.type === 'export default'\n\t\t\t\t? construct.type\n\t\t\t\t: construct.type.slice(bindingIntent.length + 1);\n\n\t\trecord.bindingDeclaration = ModuleBinding.DeclarationType[record.declarationText];\n\n\t\tif (record.bindingDeclaration !== undefined) {\n\t\t\treturn initializeDeclarationRecord(construct, record, sourceRecord);\n\t\t\t// declarationRecord\n\t\t\t// return createDeclarationRecord(construct, record, sourceRecord);\n\t\t}\n\t};\n\n\t// * @param {Node} node\n\t/**\n\t * @param {ConstructNode} construct\n\t * @param {*} record\n\t * @param {SourceRecord} sourceRecord\n\t * @returns {BindingRecord[]}\n\t */\n\tconst initializeDeclarationRecord = (construct, record, sourceRecord) => {\n\t\tlet error, declarations, nodes;\n\t\tif (!construct.initializeDeclarationRecord) return;\n\t\t({error, declarations, nodes} = construct.initializeDeclarationRecord(record));\n\t\terror && sourceRecord.error(`${error.type}: ${error.message}`, error);\n\t\tDEBUG_CONSTRUCTS && log(record.bindingDeclaration, {record, construct, declarations, nodes});\n\t\tconst bindingRecords = [];\n\t\tfor (const declaration of declarations) {\n\t\t\tbindingRecords.push(createBindingRecord({...declaration, ...record}));\n\t\t}\n\t\treturn bindingRecords;\n\t\t// return\n\t\t// return createBindingRecord(record);\n\t};\n\n\t/** @param {BindingRecord} record */\n\t/** @returns {BindingRecord} */\n\tconst createBindingRecord = record => new ModuleBinding(record);\n\n\t/** @param {string} sourceText @param {ModuleSource} [sourceRecord] */\n\tconst parseModuleText = (sourceText, sourceRecord) => {\n\t\tsourceRecord\n\t\t\t? (sourceRecord.sourceText = sourceText)\n\t\t\t: (sourceRecord = new ModuleSource({sourceText: sourceText, sourceType: 'module-text'}));\n\t\treturn compileModule(sourceText, sourceRecord);\n\t};\n\n\tconst SourceEvaluatorText = /^[\\s\\n]*module[\\s\\n]*=>[\\s\\n]*void[\\s\\n]*\\([\\s\\n]*\\([\\s\\n]*\\)[\\s\\n]*=>[\\s\\n]*\\{[ \\t]*?\\n?([^]*[\\s\\n]*?)\\s*\\}[\\s\\n]*\\)[\\s\\n]*;?[\\s\\n]*$/;\n\n\t/** @param {Function|string} sourceEvaluator @param {ModuleSource} [sourceRecord] */\n\tconst parseDynamicModuleEvaluator = (sourceEvaluator, sourceRecord) => {\n\t\tconst sourceType = 'evaluator';\n\n\t\t//@ts-ignore\n\t\tconst [, sourceEvaluatorText] = SourceEvaluatorText.exec(sourceEvaluator);\n\n\t\tconst sourceText = esx.rewriteEvaluatorInput(sourceEvaluatorText);\n\n\t\tsourceRecord\n\t\t\t? (sourceRecord.sourceType = sourceType)\n\t\t\t: (sourceRecord = new ModuleSource({sourceEvaluatorText, sourceText, sourceType}));\n\t\tparseModuleText(sourceText, sourceRecord);\n\n\t\tsourceRecord.compiledEvaluatorText = esx.rewriteEvaluatorOutput(sourceRecord.compiledText); // debugger;\n\n\t\tDEBUG_COMPILER\n\t\t\t? environment.process || console !== globalThis.console\n\t\t\t\t? log('%o\\n\\n%o', sourceRecord, sourceText)\n\t\t\t\t: log(\n\t\t\t\t\t\t'%O\\n%c%ssourceEvaluatorText: %s\\nsourceText: %s\\ncompiledText: %s\\ncompiledEvaluatorText: %s',\n\t\t\t\t\t\tsourceRecord,\n\t\t\t\t\t\tsourceEvaluatorText,\n\t\t\t\t\t\tsourceText,\n\t\t\t\t\t\tsourceRecord.compiledText,\n\t\t\t\t\t\tsourceRecord.compiledEvaluatorText,\n\t\t\t\t  )\n\t\t\t: DEBUG_CONSTRUCTS &&\n\t\t\t  (environment.process || console !== globalThis.console\n\t\t\t\t\t? log('%O\\n%s', sourceRecord, sourceText)\n\t\t\t\t\t: log('%O\\n%c%s', sourceRecord, 'whitespace: pre; font:monospace;', sourceText));\n\t\treturn sourceRecord;\n\t};\n\n\treturn {parseModuleText, parseDynamicModuleEvaluator};\n\n\t/** @param {{[name: string]: boolean}} param0 */\n\tfunction getFlags({DEBUG_COMPILER, DEBUG_CONSTRUCTS, DEBUG_NODES} = {}) {\n\t\tif (typeof location === 'object' && 'search' in location) {\n\t\t\tDEBUG_COMPILER = /\\bcompiler\\b/.test(location.search);\n\t\t\tDEBUG_NODES = /\\bnodes\\b/.test(location.search);\n\t\t\tDEBUG_CONSTRUCTS = /\\bconstructs\\b/.test(location.search);\n\t\t} else if (typeof process === 'object' && process.argv) {\n\t\t\tDEBUG_COMPILER = process.argv.includes('--compiler');\n\t\t\tDEBUG_NODES = process.argv.includes('--nodes');\n\t\t\tDEBUG_CONSTRUCTS = process.argv.includes('--constructs');\n\t\t}\n\t\treturn {DEBUG_COMPILER, DEBUG_CONSTRUCTS, DEBUG_NODES};\n\t}\n})();\n\n/** @typedef {import('../collator/nodes.js').Node} Node*/\n\n// /**\n//  * @param {ConstructNode} construct\n//  * @param {*} record\n//  * @param {SourceRecord} sourceRecord\n//  * @returns {BindingRecord}\n//  */\n// const createDeclarationRecord = (construct, record, sourceRecord) => {\n// \tconst {NextTokenNode, BindingClause} = construct.symbols;\n// \t/** @type {Node} */\n// \tlet node = construct[NextTokenNode];\n// \tconst bindingTarget = construct[BindingClause] != null ? construct[BindingClause].text : undefined;\n\n// \tswitch (record.bindingDeclaration) {\n// \t\tcase 'FunctionDeclaration':\n// \t\tcase 'AsyncFunctionDeclaration':\n// \t\tcase 'GeneratorFunctionDeclaration':\n// \t\tcase 'AsyncGeneratorFunctionDeclaration':\n// \t\tcase 'ClassDeclaration':\n// \t\t\tif (node.type !== 'identifier') {\n// \t\t\t\tsourceRecord.error(`ConstructError: ${record.bindingDeclaration} must have a valid identifier`, {\n// \t\t\t\t\tlineNumber: construct.lastToken.lineNumber,\n// \t\t\t\t\tcolumnNumber: construct.lastToken.columnNumber,\n// \t\t\t\t});\n// \t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n// \t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n// \t\t\t}\n// \t\t\trecord.internalIdentifier = bindingTarget;\n// \t\t\trecord.internalType = record.bindingDeclaration === 'ClassDeclaration' ? 'class' : 'function';\n// \t\t\tif (record.bindingIntent === 'export') {\n// \t\t\t\trecord.exportedIdentifier = record.internalIdentifier;\n// \t\t\t\trecord.exportedType = 'readonly';\n// \t\t\t}\n// \t\t\treturn createBindingRecord(record);\n// \t\tcase 'VariableDeclaration':\n// \t\t\trecord.internalType = record.declarationText;\n// \t\t\tif (node.type === '{…}') {\n// \t\t\t\t// TODO: Destructure bindings\n// \t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n// \t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n// \t\t\t} else if (node.type === 'identifier') {\n// \t\t\t\trecord.internalIdentifier = bindingTarget;\n// \t\t\t\tif (record.bindingIntent === 'export') {\n// \t\t\t\t\trecord.exportedIdentifier = record.internalIdentifier;\n// \t\t\t\t\trecord.exportedType = record.internalType === 'const' ? 'constant' : 'readonly';\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\treturn createBindingRecord(record);\n// \t\tcase 'ExportDefaultAssignmentExpression':\n// \t\t\trecord.exportedType = 'constant';\n// \t\t\trecord.internalType = 'void';\n// \t\t\trecord.exportedIdentifier = 'default';\n// \t\t\treturn createBindingRecord(record);\n// \t\tcase 'ImportDeclaration':\n// \t\t\tif (node.text === '*') {\n// \t\t\t\trecord.importedIdentifier = '*';\n// \t\t\t\trecord.internalIdentifier = bindingTarget;\n// \t\t\t} else if (node.type === 'string') {\n// \t\t\t\trecord.externalModuleSpecifier = node.text.slice(1, -1);\n// \t\t\t} else if (node.type === 'identifier') {\n// \t\t\t\trecord.importedIdentifier = 'default';\n// \t\t\t\trecord.internalIdentifier = bindingTarget;\n// \t\t\t\t// TODO: import default, {} // if (trailer.nextToken.text !== ',')\n// \t\t\t} else if (node.type === '{…}') {\n// \t\t\t\t// TODO: import {…}\n// \t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n// \t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n// \t\t\t}\n// \t\t\treturn createBindingRecord(record);\n// \t\tcase 'ExportDeclaration':\n// \t\t\tif (node.text === '*') {\n// \t\t\t\trecord.exportedIdentifier = bindingTarget;\n// \t\t\t} else if (node.type === '{…}') {\n// \t\t\t\t// TODO: export {…}\n// \t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n// \t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n// \t\t\t}\n// \t\t\treturn createBindingRecord(record);\n// \t}\n// \tlog(record.bindingDeclaration, construct, node);\n// };\n\n// /** @param {string} sourceText @param {ModuleSource} [sourceRecord] */\n// const compileModule = (sourceText, sourceRecord) => {\n// \tconst {bindings = (sourceRecord.bindings = /** @type {ModuleSource['bindings']} */ ([]))} =\n// \t\tsourceRecord || (sourceRecord = new ModuleSource({sourceText: sourceText}));\n\n// \t// /** @type {ModuleSource['fragments']} */\n// \t// const fragments = (sourceRecord.fragments = []);\n// \t// /** @type {ModuleSource['bindings']} */\n// \t// const bindings = (sourceRecord.bindings = []);\n\n// \tconst nonBindings = [];\n// \t// const tokens = tokenizeSourceText(sourceText);\n// \t// const collator = new Collator('ECMAScript');\n\n// \t// collator.log = log;\n\n// \t// for (const token of tokens) {\n// \t// \tif (!token || !token.text) continue;\n\n// \t// \tconst node = collator.collate(token, tokens) || undefined;\n// \t// \ttypeof node.text === 'string' && fragments.push(node.text);\n\n// \t// \tif (collator.queuedToken !== undefined) {\n// \t// \t\tconst node = collator.collate(collator.queuedToken, tokens) || undefined;\n// \t// \t\ttypeof node.text === 'string' && fragments.push(node.text);\n// \t// \t}\n// \t// }\n\n// \t// const tokens = tokenizeSourceText(sourceText);\n// \tconst {\n// \t\tcollator: {\n// \t\t\trootNode: {constructs},\n// \t\t},\n// \t} = Collator.collate({sourceRecord, tokens: tokenizeSourceText(sourceText), log});\n\n// \t// const {\n// \t// \trootNode,\n// \t// \trootNode: {constructs},\n// \t// } = collator;\n\n// \t// sourceRecord.rootNode = rootNode;\n// \t// sourceRecord.constructs = constructs;\n// \t// sourceRecord.compiledText = rootNode.text;\n\n// \tif (constructs.length) {\n// \t\tlet bindingRecord;\n// \t\t// /** @type {constructs} */\n// \t\tconst constructList = [];\n\n// \t\tfor (const construct of constructs) {\n// \t\t\tconstructList.push(construct.type);\n// \t\t\tbindingRecord = createBindingRecordFromConstruct(construct, sourceRecord);\n// \t\t\tif (bindingRecord === undefined) {\n// \t\t\t\tnonBindings.push(construct);\n// \t\t\t\tcontinue;\n// \t\t\t}\n// \t\t\tbindings.push(bindingRecord);\n// \t\t}\n\n// \t\tif (DEBUG_CONSTRUCTS) {\n// \t\t\tbindings.length && table(bindings);\n// \t\t\tnonBindings.length && table(nonBindings);\n// \t\t\t// console.log(constructList.map(v => `- \\`${v}\\``).join('\\n'));\n// \t\t}\n// \t}\n\n// \treturn sourceRecord;\n// };\n","import {Exports, Mappings, BindingDeclarations} from './expressions.js';\nimport {freeze} from './helpers.js';\nimport {parseDynamicModuleEvaluator} from './compiler/compiler.js';\n\n/** @type {(init: {source: Function | string, url: string}) => Evaluator} */\nexport const ModuleEvaluator = (() => {\n\tconst evaluate = code => (1, eval)(code);\n\n\tconst rewrite = source =>\n\t\t// TODO: Handle shadows and redudant exports!\n\t\t`${source}`.replace(Exports, (match, guard, mappings) => {\n\t\t\tconst bindings = [];\n\t\t\twhile ((match = Mappings.exec(mappings))) {\n\t\t\t\tlet {1: identifier, 2: binding} = match;\n\t\t\t\tbindings.push(`${binding || '()'} => ${identifier}`);\n\t\t\t}\n\t\t\treturn (bindings.length && `exports(${bindings.join(', ')})`) || '';\n\t\t});\n\n\treturn ({\n\t\tsource,\n\t\tsourceText = `${source}`,\n\t\turl: moduleURL,\n\t\tcompiledText = rewrite(\n\t\t\ttypeof source === 'function' ? parseDynamicModuleEvaluator(source).compiledEvaluatorText : sourceText,\n\t\t),\n\t}) => {\n\t\tlet match;\n\n\t\t/** @type {Evaluator} */\n\t\tconst evaluator = evaluate(\n\t\t\t`(function* (module, exports) { with(module.scope) (function () { \"use strict\";\\n${compiledText}${\n\t\t\t\tmoduleURL ? `//# sourceURL=${`${new URL(moduleURL, 'file:///')}`.replace(/^file:/i, 'virtual:')}\\n` : ''\n\t\t\t}})();})`,\n\t\t);\n\t\tevaluator.sourceText = sourceText;\n\t\tevaluator.compiledText = compiledText;\n\t\tevaluator.moduleURL = moduleURL;\n\t\tconst links = (evaluator.links = {});\n\n\t\twhile ((match = BindingDeclarations.exec(compiledText))) {\n\t\t\tconst [, intent, bindings, binding, , specifier] = match;\n\t\t\tconst mappings = (\n\t\t\t\t(binding && ((binding.startsWith('* ') && binding) || `default as ${binding}`)) ||\n\t\t\t\tbindings ||\n\t\t\t\t''\n\t\t\t).split(/ *, */g);\n\t\t\twhile ((match = Mappings.exec(mappings))) {\n\t\t\t\tconst [, identifier, binding = identifier] = match;\n\t\t\t\tfreeze((links[binding] = {intent, specifier, identifier, binding}));\n\t\t\t}\n\t\t}\n\n\t\tfreeze(links);\n\n\t\treturn evaluator;\n\t};\n})();\n\n/** @typedef {import('./types').modules.Module.Context} Context */\n/** @typedef {import('./types').modules.Module.Exports} Exports */\n/** @typedef {import('./types').modules.Module.Links} Links */\n/** @typedef {import('./types').modules.DynamicModule.Evaluator} Evaluator */\n","import {create, freeze, setPrototypeOf} from './helpers.js';\n\nexport function ModuleNamespace() {}\n{\n\tconst toPrimitive = setPrototypeOf(() => 'ModuleNamespace', null);\n\tconst toString = setPrototypeOf(() => 'class ModuleNamespace {}', null);\n\tconst {toJSON} = {\n\t\ttoJSON() {\n\t\t\treturn Object.getOwnPropertyNames(this);\n\t\t},\n\t};\n\tModuleNamespace.prototype = create(null, {\n\t\t[Symbol.toPrimitive]: {value: toPrimitive, enumerable: false},\n\t\t[Symbol.toStringTag]: {value: 'ModuleNamespace', enumerable: false},\n\t\ttoJSON: {value: toJSON, enumerable: false},\n\t});\n\tfreeze(setPrototypeOf(ModuleNamespace, create(null, {toString: {value: toString}})));\n}\n","import {ModuleNamespace} from './namespace.js';\nimport {Identifier, Specifier} from './expressions.js';\n\nimport {\n\tcreate,\n\tentries,\n\tfreeze,\n\tsetProperty,\n\tbindProperty,\n\tsetPrototypeOf,\n\tcopyProperty,\n\tResolvedPromise,\n\tReflect,\n} from './helpers.js';\n\nexport class ModuleStrapper {\n\t/** @type {import('./namespaces').ModuleNamespaces} */\n\tget map() {\n\t\tif (this !== this.constructor.prototype) return setProperty(this, 'map', create(null));\n\t}\n\n\tthrow(error) {\n\t\tthrow error;\n\t}\n\n\t// async createLinkedBinding(namespaces, linkURL, linkedBinding, bindingRecords, bindingIdentifier) {\n\tasync createLinkedImportBinding(bindingStatus) {\n\t\tlet exportedNamespace;\n\t\tconst {\n\t\t\tnamespaces,\n\t\t\tlinkURL,\n\t\t\tlinkingRecord,\n\t\t\tmoduleURL,\n\t\t\tbindingRecords,\n\t\t\tbindingIdentifier,\n\t\t\tmoduleContext,\n\t\t\ttraceId,\n\t\t\tlinkedNamespace = (bindingStatus.linkedNamespace = namespaces[linkURL] || namespaces.import(linkURL)),\n\t\t} = bindingStatus;\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t\tlinkedNamespace ||\n\t\t\tthis.throw(\n\t\t\t\tnew ReferenceError(\n\t\t\t\t\t`Cannot create linked imported binding against ‹${linkURL}› prior to the creation of its namespace record`,\n\t\t\t\t),\n\t\t\t);\n\t\tbindingIdentifier ||\n\t\t\tthis.throw(new ReferenceError(`Cannot create linked import binding without a binding identifier`));\n\n\t\t// Make a TBD binding\n\t\tbindProperty(bindingRecords, bindingIdentifier, undefined, true, true);\n\n\t\t// Make the actual binding\n\t\tlinkingRecord.identifier !== '*'\n\t\t\t? copyProperty(\n\t\t\t\t\tbindingRecords,\n\t\t\t\t\t(exportedNamespace =\n\t\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t\t\tlinkingRecord.identifier,\n\t\t\t\t\tbindingIdentifier,\n\t\t\t  )\n\t\t\t: ((exportedNamespace =\n\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t  copyProperty(bindingRecords, namespaces, linkURL, bindingIdentifier));\n\t\t// Update linked binding status\n\t\tbindingStatus.isLinked = true;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t}\n\tasync createLinkedExportBinding(bindingStatus) {\n\t\tlet exportedNamespace;\n\t\tconst {\n\t\t\tnamespaces,\n\t\t\tlinkURL,\n\t\t\tlinkingRecord,\n\t\t\tmoduleURL,\n\t\t\tbindingRecords,\n\t\t\tbindingIdentifier,\n\t\t\tmoduleContext,\n\t\t\ttraceId,\n\t\t\tlinkedNamespace = (bindingStatus.linkedNamespace = namespaces[linkURL] || namespaces.import(linkURL)),\n\t\t} = bindingStatus;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\n\t\tlinkedNamespace ||\n\t\t\tthis.throw(\n\t\t\t\tnew ReferenceError(\n\t\t\t\t\t`Cannot create linked export binding against ‹${linkURL}› prior to the creation of its namespace record`,\n\t\t\t\t),\n\t\t\t);\n\n\t\t// Make a TBD binding\n\t\tbindProperty(moduleContext.namespace, bindingIdentifier, undefined, true, true);\n\n\t\t// Make the actual binding\n\t\tlinkingRecord.identifier !== '*'\n\t\t\t? ((exportedNamespace =\n\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t  copyProperty(moduleContext.namespace, exportedNamespace, linkingRecord.identifier, bindingIdentifier))\n\t\t\t: this.throw(\n\t\t\t\t\tnew TypeError(\n\t\t\t\t\t\t`Cannot create linked \"export * as\" binding against ‹${linkURL}› since it is not a valid binding type`,\n\t\t\t\t\t),\n\t\t\t  );\n\n\t\t// Update linked binding status\n\t\tbindingStatus.isLinked = true;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t}\n\n\tlink(module) {\n\t\tlet linkURL, bindingStatus;\n\t\tconst {namespaces, context: moduleContext, bindings: bindingRecords, links, url: moduleURL} = module;\n\n\t\tconst promises = [];\n\n\t\tfor (const [bindingIdentifier, linkingRecord] of entries(links)) {\n\t\t\tif (\n\t\t\t\t!(linkingRecord.intent === 'import' || linkingRecord.intent === 'export') ||\n\t\t\t\t!(linkURL = linkingRecord.url || (linkingRecord.specifier && this.resolve(linkingRecord.specifier, moduleURL)))\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tbindingStatus = {\n\t\t\t\tisLinked: false,\n\t\t\t\tnamespaces,\n\t\t\t\tlinkURL,\n\t\t\t\tlinkingRecord,\n\t\t\t\tmoduleURL,\n\t\t\t\tbindingRecords,\n\t\t\t\tbindingIdentifier,\n\t\t\t\tmoduleContext,\n\t\t\t\t// traceId: `${linkingRecord.intent} ${moduleURL}#${bindingIdentifier} ‹ ${linkURL}#${linkingRecord.identifier}`,\n\t\t\t};\n\n\t\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t\t\tpromises.push(\n\t\t\t\t(bindingStatus.promise = this[\n\t\t\t\t\tlinkingRecord.intent === 'import' ? 'createLinkedImportBinding' : 'createLinkedExportBinding'\n\t\t\t\t](bindingStatus)),\n\t\t\t);\n\t\t}\n\n\t\treturn promises.length ? Promise.all(promises).then(() => {}) : Promise.resolve();\n\t}\n\n\tinstantiate(module) {\n\t\tconst enumerable = false;\n\t\tconst namespace = new ModuleNamespace();\n\t\tconst {context, bindings, namespaces, url, scope} = module;\n\n\t\tcontext.export = (...exports) => void this.bind(namespace, ...exports);\n\n\t\tReflect.defineProperty(context.export, 'default', {\n\t\t\tset: value => void this.bind(namespace, {default: () => value}),\n\t\t});\n\n\t\tfreeze(context.export);\n\n\t\tsetProperty(bindings, 'module', context, false, true);\n\t\tsetProperty(context, 'namespace', namespace);\n\t\tsetProperty(context, 'scope', setPrototypeOf(bindings, scope || null), enumerable, false);\n\t\tsetProperty(context, 'meta', create(null), false, false);\n\t\tsetProperty(context.scope, 'meta', context.meta, false, false);\n\t\tsetProperty(context.meta, 'url', url);\n\n\t\t// TODO: To be used for top-level await\n\t\tlet awaits = void Reflect.defineProperty(context, 'await', {get: () => awaits, set: value => (awaits = value)});\n\n\t\tfreeze(context);\n\t\treturn setProperty(module, 'instance', {namespace, context});\n\t}\n\n\tasync evaluate(module) {\n\t\tconst {bindings, namespace, context} = await module.instantiate();\n\t\ttry {\n\t\t\t// TODO: Ensure single execution\n\t\t\tmodule.evaluator(context, context.export).next();\n\t\t\t!context.await || (await context.await);\n\t\t\treturn setProperty(module, 'namespace', namespace);\n\t\t} catch (exception) {\n\t\t\tconsole.warn(exception);\n\t\t\tsetProperty(module, 'exception', exception);\n\t\t}\n\t}\n\n\tasync import(url) {\n\t\tconst module = this.map[url];\n\t\treturn module.namespace || (await module.evaluate());\n\t}\n\n\tresolve(specifier, referrer) {\n\t\tspecifier = `${(specifier && specifier) || ''}`;\n\t\treferrer = `${(referrer && referrer) || ''}` || '';\n\t\tconst key = `[${referrer}][${specifier}]`;\n\t\tconst cache = this.resolve.cache || (this.resolve.cache = {});\n\t\tlet url = cache[key];\n\t\tif (url) return url.link;\n\t\tconst {schema, domain} = Specifier.parse(specifier);\n\t\tconst origin = (schema && `${schema}${domain || '//'}`) || `file:///`;\n\t\treferrer =\n\t\t\t(!referrer && origin) || (cache[`[${referrer}]`] || (cache[`[${referrer}]`] = new URL(referrer, origin))).href;\n\t\turl = cache[key] = new URL(specifier, referrer);\n\t\treturn (url.link = url.href.replace(/^file:\\/\\/\\//, ''));\n\t}\n\n\tbind(namespace, ...bindings) {\n\t\tfor (const binding of bindings) {\n\t\t\tconst type = typeof binding;\n\t\t\tif (type === 'function') {\n\t\t\t\tconst identifier = (Identifier.exec(binding) || '')[0];\n\t\t\t\tidentifier && bindProperty(namespace, identifier, binding, true);\n\t\t\t} else if (type === 'object') {\n\t\t\t\tfor (const identifier in binding) {\n\t\t\t\t\tidentifier === (Identifier.exec(identifier) || '')[0] &&\n\t\t\t\t\t\tbindProperty(namespace, identifier, binding[identifier], true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n","//@ts-check\n\nimport {ModuleNamespaces} from './namespaces.js';\nimport {ModuleEvaluator} from './evaluator.js';\nimport {ModuleStrapper} from './strapper.js';\nimport {create, setProperty, freeze, setPrototypeOf} from './helpers.js';\nimport {environment} from './environment.js';\n\n/** @augments {Module} */\nexport class DynamicModule {\n\t/** @param {string} url @param {Function} evaluator @param {Scope} scope */\n\tconstructor(url, evaluator, scope) {\n\t\tconst enumerable = false;\n\t\tsetProperty(this, 'url', url, enumerable);\n\t\tsetProperty(this, 'evaluator', (evaluator = ModuleEvaluator({source: evaluator, url})), enumerable);\n\t\tsetProperty(this, 'scope', scope, enumerable);\n\t\t//@ts-ignore\n\t\tsetProperty(this, 'context', create(null, contextuals), enumerable, false);\n\t\tsetProperty(this, 'bindings', create(null), enumerable);\n\t\t//@ts-ignore\n\t\tsetProperty(this, 'links', {...evaluator.links}, enumerable, false);\n\n\t\tthis.namespaces ||\n\t\t\tsetProperty(new.target.prototype, 'namespaces', new ModuleNamespaces(url => new.target.import(url)), false);\n\n\t\tnew.target.map[url] = this;\n\t}\n\n\tlink() {\n\t\tconst promise = DynamicModule.link(this);\n\t\tsetProperty(this, 'link', () => promise);\n\t\treturn promise;\n\t}\n\n\tinstantiate() {\n\t\tconst instance = this.instance || DynamicModule.instantiate(this);\n\t\tconst promise = this.link().then(() => instance);\n\t\tsetProperty(this, 'instantiate', () => promise);\n\t\treturn promise;\n\t}\n\n\tevaluate() {\n\t\tconst promise = DynamicModule.evaluate(this).then(() => this.namespace);\n\t\tsetProperty(this, 'evaluate', () => promise);\n\t\treturn promise;\n\t}\n}\n\n/** Properties injected into every module context */\nconst contextuals = {};\n\nDynamicModule.environment = environment;\n\n// DynamicModule.environment = environment.\n\nDynamicModule.debugging = (() => {\n\tconst debug = (type, ...args) => {\n\t\tconsole.log(type, ...args);\n\t\t// type in debugging && debugging[type] null, args);\n\t};\n\tconst debugging = (debug.debugging = {});\n\tcontextuals.debug = {value: freeze(debug)};\n\treturn debugging;\n})();\n\n{\n\tconst moduleStrapper = new ModuleStrapper();\n\t/** @type {ModuleStrapper['map']} */\n\tDynamicModule.map = moduleStrapper.map;\n\t/** @type {ModuleStrapper['link']} */\n\tDynamicModule.link = moduleStrapper.link;\n\t/** @type {ModuleStrapper['instantiate']} */\n\tDynamicModule.instantiate = moduleStrapper.instantiate;\n\t/** @type {ModuleStrapper['evaluate']} */\n\tDynamicModule.import = moduleStrapper.import;\n\t/** @type {ModuleStrapper['evaluate']} */\n\tDynamicModule.evaluate = moduleStrapper.evaluate;\n\n\tDynamicModule.prototype.evaluator = undefined;\n\t/** @type {Module['url']} */\n\tDynamicModule.prototype.url = undefined;\n\t/** @type {Evaluator} */\n\tDynamicModule.prototype.evaluator = undefined;\n\t/** @type {Module['scope']} */\n\tDynamicModule.prototype.scope = undefined;\n\t/** @type {Module['context']} */\n\tDynamicModule.prototype.context = undefined;\n\t/** @type {Module['bindings']} */\n\tDynamicModule.prototype.bindings = undefined;\n\t/** @type {Module['links']} */\n\tDynamicModule.prototype.links = undefined;\n\t/** @type {Module['instance']} */\n\tDynamicModule.prototype.instance = undefined;\n\t/** @type {Module['namespace']} */\n\tDynamicModule.prototype.namespace = undefined;\n\n\t/** @type {Namespaces} */\n\tDynamicModule.prototype.namespaces = undefined;\n\n\tsetPrototypeOf(DynamicModule, moduleStrapper);\n}\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n/** @typedef {import('./types').modules.Module} Module */\n/** @typedef {import('./types').modules.Module.Scope} Scope */\n/** @typedef {import('./types').modules.DynamicModule.Evaluator} Evaluator */\n","import {ModuleScope, GlobalScope} from './scope.js';\nimport {DynamicModule} from './dynamic-module.js';\nimport {environment} from './environment.js';\n\nGlobalScope.DynamicModules\n\t? 'DynamicModule' in GlobalScope.DynamicModules ||\n\t  ((GlobalScope.DynamicModules.ModuleScope = ModuleScope), (GlobalScope.DynamicModules.DynamicModule = DynamicModule))\n\t: (GlobalScope.DynamicModules = {ModuleScope, GlobalScope});\n"],"names":["Construct","symbols.RootNode","symbols.ParentNode","symbols.NextNode","symbols.PreviousNode","symbols.NextTokenNode","symbols.PreviousTokenNode","symbols.Construct","symbols.Trailer","symbols.LastKeyword","symbols.LastOperator","symbols.LastBreak","symbols.TokenContext","symbols.FunctionConstruct","symbols.FunctionBody","symbols.FunctionArguments","symbols.BindingClause","symbols.ArgumentConstruct","symbols.BlockConstruct","symbols.ClassConstruct","symbols.ClassBody","symbols.VariableConstruct","symbols.BindingConstruct","symbols.ImportConstruct","symbols.FromClause","symbols.ExportConstruct","symbols.ContextNode","symbols.ExtendsClause"],"mappings":"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A;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;AACA;CACA;CACA;AACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA,KAAK;;CC/TL;AACA,CAAO,MAAM,eAAe,GAAG,CAAC,MAAM;CACtC,CAAC,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1C;CACA,CAAC,MAAM,OAAO,GAAG,MAAM;CACvB;CACA,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,KAAK;CAC3D,GAAG,MAAM,QAAQ,GAAG,EAAE,CAAC;CACvB,GAAG,QAAQ,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;CAC7C,IAAI,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC;CAC5C,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;CACzD,IAAI;CACJ,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAA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"}