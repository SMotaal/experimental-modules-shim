{"version":3,"file":"modules.js","sources":["../lib/helpers.js","../lib/scope.js","../lib/namespaces.js","../lib/expressions.js","../lib/compiler/symbols.js","../lib/compiler/tree.js","../lib/compiler/constructs.js","../lib/compiler/collator.js","../lib/compiler/records.js","../../markup/experimental/matcher/matcher.js","../../markup/experimental/es/ranges.js","../../markup/experimental/es/definitions.js","../../markup/packages/tokenizer/lib/core.js","../../markup/experimental/es/helpers.js","../../markup/experimental/es/matcher.js","../../markup/experimental/matcher/helpers.js","../../markup/experimental/es/mode.js","../../markup/experimental/es/standalone.js","../lib/compiler/tokenizer.js","../lib/compiler/rewriters.js","../lib/compiler/compiler.js","../lib/evaluator.js","../lib/namespace.js","../lib/strapper.js","../lib/environment.js","../lib/dynamic-module.js","../lib/modules.js"],"sourcesContent":["export const {\n\tbindProperty,\n\tcopyProperty,\n\tcreate,\n\tentries,\n\tfreeze,\n\tReflect,\n\tResolvedPromise,\n\tsetProperty,\n\tsetPrototypeOf,\n} = (() => {\n\tconst {\n\t\tObject: {create, entries, freeze, setPrototypeOf},\n\t\tReflect: {set, apply, construct, defineProperty, getOwnPropertyDescriptor},\n\t\tPromise,\n\t} = globalThis;\n\tconst noop = () => {};\n\treturn {\n\t\tbindProperty: (target, property, get = noop, enumerable = false, configurable = false) =>\n\t\t\tdefineProperty(target, property, {get, set: noop, configurable, enumerable}),\n\t\tcopyProperty: (target, source, identifier, alias = identifier) =>\n\t\t\tdefineProperty(target, alias, getOwnPropertyDescriptor(source, identifier)),\n\t\tcreate,\n\t\tentries: entries,\n\t\tfreeze,\n\t\tnoop,\n\t\tReflect: freeze(setPrototypeOf({set, apply, construct, defineProperty, getOwnPropertyDescriptor}, null)),\n\t\tResolvedPromise: Promise.resolve(),\n\t\tsetProperty: (target, property, value, enumerable = false, configurable = false) =>\n\t\t\tdefineProperty(target, property, {value, enumerable, configurable}) && value,\n\t\tsetPrototypeOf,\n\t};\n})();\n","import {Reflect, freeze, setPrototypeOf} from './helpers.js';\n\nexport const {GlobalScope, ModuleScope} = (() => {\n\t/** @type {import('./types').modules.GlobalScope} */\n\tconst GlobalScope = globalThis;\n\n\tconst globals = (({eval: $eval}) => ({eval: $eval}))(GlobalScope);\n\n\tconst scope = freeze(setPrototypeOf({...globals}, GlobalScope));\n\n\tconst locals = {};\n\n\tconst {set, apply, construct} = Reflect;\n\n\t/** @type {import('./types').modules.ModuleScope} */\n\tconst ModuleScope = new Proxy(scope, {\n\t\tget(target, property, receiver) {\n\t\t\tif (property in globals) return globals[property];\n\t\t\tconst value = property in GlobalScope && typeof property === 'string' ? GlobalScope[property] : undefined;\n\t\t\tif (value && typeof value === 'function') {\n\t\t\t\tconst local = locals[property];\n\t\t\t\treturn (\n\t\t\t\t\t(local && local.value === value && local) ||\n\t\t\t\t\t((locals[property] = {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tconstruct(target, argArray, newTarget) {\n\t\t\t\t\t\t\treturn newTarget === this.proxy ? construct(value, argArray) : construct(value, argArray, newTarget);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tapply(method, thisArg, argArray) {\n\t\t\t\t\t\t\treturn thisArg == null || thisArg === receiver ? value(...argArray) : apply(value, thisArg, argArray);\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t(locals[property].proxy = new Proxy(value, locals[property])),\n\t\t\t\t\tlocals[property])\n\t\t\t\t).proxy;\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\tset(target, property, value, receiver) {\n\t\t\tif (receiver !== ModuleScope) throw ReferenceError(`${property} is not defined [proxy says]`);\n\t\t\treturn set(GlobalScope, property, value);\n\t\t},\n\t});\n\n\treturn {GlobalScope, ModuleScope};\n})();\n","import {create, setProperty, bindProperty} from './helpers.js';\n\nexport class ModuleNamespaces {\n\tconstructor(importHostModule) {\n\t\tsetProperty(this, '[[importHostModule]]', importHostModule, true);\n\t\tsetProperty(this, '[[imports]]', create(null), true);\n\t\tsetProperty(\n\t\t\tthis,\n\t\t\t'import',\n\t\t\timportHostModule\n\t\t\t\t? url =>\n\t\t\t\t\t\tthis[url] ||\n\t\t\t\t\t\t(this['[[imports]]'][url] ||\n\t\t\t\t\t\t\t(this['[[imports]]'][url] = this['[[importHostModule]]'](url)).then(\n\t\t\t\t\t\t\t\tnamespace => (bindProperty(this, url, () => namespace, true, false), namespace),\n\t\t\t\t\t\t\t))\n\t\t\t\t: this.import,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\t/** @param {string} url @returns {Namespace | Promise<Namespace>} */\n\timport(url) {\n\t\tthrow Error('Unsupported operation: [[importHostModule]] is undefined!');\n\t}\n}\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n/** @typedef {import('./types').modules.Module.Namespace} Namespace */\n","/** ECMAScript quoted strings: `'…'` or `\"…\"`  */\nexport const StringLiteral = /\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g;\n\n/** ECMAScript comments */\nexport const Comments = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n/g;\n\n/** ECMAScript regular expressions  */\nexport const RegExps = /\\/(?=[^\\*\\/\\n][^\\n]*\\/)(?:[^\\\\\\/\\n\\t\\[]+|\\\\\\S|\\[(?:\\\\\\S|[^\\\\\\n\\t\\]]+)+?\\])+?\\/[a-z]*/g;\n\n/** First coherent indent spaces in a string */\n// export const Indent = /(?:^|\\n)([ \\t]+)/;\n\n/** Comma with surrounding whitespace */\nexport const Separator = /[\\s\\n]*,[\\s\\n]*/;\n\n/** Mapped binding: `Identifier as BindingIdentifier` */\nexport const Mappings = /([^\\s,]+)(?: +as +([^\\s,]+))?/g;\n\n/** Quoted export mappings: `export {…}` */\nexport const Exports = /(\\/\\*\\/|`)\\s*export *{([^}`;\\*\\/\\\\()=+&|\\-]*)}\\s*(?:\\1)/gm;\n\n/** Nothing but Identifier Characters */\nexport const Identifier = /[^\\n\\s\\(\\)\\{\\}\\-=+*/%`\"'~!&.:^<>,]+/;\n\nexport const Bindings = /\\b(import|export)\\b +(?:{ *([^}]*?) *}|([*] +as +\\S+|\\S+)|)(?: +from\\b|)(?: +(['\"])(.*?)\\4|(?:const|let|var) +(?:{ *([^}]*?) *}|\\S+)|)/g;\n\nexport const BindingDeclarations = /\\b(import|export)\\b +(?:{ *([^}]*?) *}|([*] +as +\\S+|\\S+)|)(?: +from\\b|)(?: +(['\"])(.*?)\\4|)/g;\n\nexport const Specifier = /^(?:([a-z]+[^/]*?:)\\/{0,2}(\\b[^/]+\\/?)?)(\\.{0,2}\\/)?([^#?]*?)(\\?[^#]*?)?(#.*?)?$/u;\n\nSpecifier.parse = specifier => {\n\tconst [url, schema, domain, root, path, query, fragment] = Specifier.exec(specifier) || '';\n\treturn {url, schema, domain, root, path, query, fragment, specifier};\n};\n","﻿export const Construct = Symbol('Node.construct');\nexport const Trailer = Symbol('Node.trailer');\nexport const NextNode = Symbol('Node.nextNode');\nexport const PreviousNode = Symbol('Node.previousNode');\nexport const NextTokenNode = Symbol('Node.nextTokenNode');\nexport const PreviousTokenNode = Symbol('Node.previousTokenNode');\nexport const ParentNode = Symbol('Node.parentNode');\nexport const RootNode = Symbol('Node.rootNode');\nexport const LastKeyword = Symbol('Node.lastKeyword');\nexport const LastOperator = Symbol('Node.lastOperator');\nexport const LastBreak = Symbol('Node.lastBreak');\nexport const TokenContext = Symbol('Node.tokenContext');\nexport const ContextNode = Symbol('Node.contextNode');\n\nexport const FunctionConstruct = Symbol('Node.functionConstruct');\nexport const ClassConstruct = Symbol('Node.classConstruct');\nexport const VariableConstruct = Symbol('Node.variableConstruct');\nexport const ImportConstruct = Symbol('Node.importConstruct');\nexport const ExportConstruct = Symbol('Node.exportConstruct');\nexport const BindingConstruct = Symbol('Node.bindingConstruct');\n\nexport const ArgumentConstruct = Symbol('Node.argumentConstruct');\nexport const BlockConstruct = Symbol('Node.blockConstruct');\n\nexport const BindingClause = Symbol('Construct.bindingClause');\nexport const ExtendsClause = Symbol('Construct.extendsClause');\nexport const FromClause = Symbol('Construct.fromClause');\nexport const ClassBody = Symbol('Construct.classBody');\nexport const FunctionArguments = Symbol('Construct.functionArguments');\nexport const FunctionBody = Symbol('Construct.functionBody');\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as symbols from './symbols.js';\n\nexport const {Node, Root, Construct, Closure, Template, Text, Token} = (() => {\n\t// const {defineProperty} = Object;\n\tclass Node {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\t/** @type {string} */\n\t\t\tthis.text = undefined;\n\n\t\t\tthis.type = type;\n\n\t\t\tthis[Symbol.toStringTag] = type == null ? new.target.name : `${new.target.name} ⟨${type}⟩`;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.token = undefined;\n\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tthis[Node.tokenContext] = undefined;\n\n\t\t\t/** @type {RootNode} */\n\t\t\tthis[Node.rootNode] = undefined;\n\n\t\t\t/** @type {ParentNode} */\n\t\t\tthis[Node.parentNode] = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis[Node.previousNode] = this[Node.nextNode] = undefined;\n\n\t\t\t/** @type {TokenNode|ParentNode} */\n\t\t\tthis[Node.previousTokenNode] = this[Node.nextTokenNode] = undefined;\n\n\t\t\t/** @type {Node[]} */\n\t\t\tthis.children = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis.firstNode = this.lastNode = undefined;\n\n\t\t\t/** @type {TokenNode} */\n\t\t\tthis.firstTokenNode = this.lastTokenNode = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis[Node.lastKeyword] = this[Node.lastOperator] = this[Node.lastBreak] = undefined;\n\n\t\t\t/** @type {string} */\n\t\t\tthis[Node.construct] = '';\n\n\t\t\t/** @type {Construct[]} */\n\t\t\tthis.constructs = undefined;\n\t\t}\n\t}\n\n\tclass Text extends Node {\n\t\t/** @param {string} text @param {string} type */\n\t\tconstructor(text, type) {\n\t\t\tsuper(type);\n\t\t\tthis.text = text;\n\t\t}\n\t}\n\n\tclass Token extends Node {\n\t\t/** @param {TokenizerToken} token @param {string} [type] */\n\t\tconstructor(token, type) {\n\t\t\tsuper((type == null && token.type) || type);\n\t\t\tthis.text = token.text;\n\t\t\tthis.token = this.firstToken = this.lastToken = token;\n\t\t}\n\t}\n\n\tclass Parent extends Node {\n\t\tset lastToken(lastToken) {}\n\n\t\tget lastToken() {\n\t\t\treturn this.lastTokenNode && this.lastTokenNode.lastToken;\n\t\t}\n\n\t\tset firstToken(firstToken) {}\n\n\t\tget firstToken() {\n\t\t\treturn this.firstTokenNode && this.firstTokenNode.firstToken;\n\t\t}\n\n\t\tset text(text) {}\n\n\t\tget text() {\n\t\t\t/** @type {string[]} */\n\t\t\tlet fragments;\n\t\t\t/** @type {Node} */\n\t\t\tlet node;\n\t\t\tconst {firstNode, lastNode} = this;\n\t\t\tif (firstNode === undefined) return '';\n\t\t\tif (firstNode === lastNode) return firstNode.text;\n\n\t\t\tfragments = [(node = firstNode).text];\n\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) {\n\t\t\t\tfragments.push(node.text || '');\n\t\t\t}\n\t\t\tnode === lastNode && fragments.push(node.text || '');\n\t\t\treturn fragments.join('');\n\t\t}\n\n\t\t/**\n\t\t * @template {Node} T\n\t\t * @param {T} child\n\t\t * @returns T\n\t\t */\n\t\tappendChild(child) {\n\t\t\tchild[Node.previousNode] = this.lastNode;\n\t\t\tthis.children === undefined\n\t\t\t\t? (this.children = [(this.firstNode = child)])\n\t\t\t\t: this.children.push((this.lastNode[Node.nextNode] = child));\n\t\t\t(child[Node.rootNode] = (child[Node.parentNode] = this)[Node.rootNode]).nodeCount++;\n\t\t\tchild[Node.previousTokenNode] = this.lastTokenNode;\n\n\t\t\treturn (this.lastNode = child);\n\t\t}\n\n\t\t/** @param {ParentNode|TokenNode|TextNode} child */\n\t\tappendToken(child) {\n\t\t\tconst {lastTokenNode, lastNode} = this;\n\t\t\tthis.appendChild(child);\n\t\t\t(child[Node.previousTokenNode] = lastTokenNode) === undefined\n\t\t\t\t? (child.firstToken && (this.firstToken = child.token), (this.firstTokenNode = child))\n\t\t\t\t: (child[Node.previousTokenNode][Node.nextTokenNode] = child);\n\t\t\tif (lastTokenNode !== undefined && lastTokenNode !== lastNode) {\n\t\t\t\t/** @type {Node} */\n\t\t\t\tlet node = this.lastTokenNode;\n\t\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) node[Node.nextTokenNode] = child;\n\t\t\t\tnode[Node.nextTokenNode] = child;\n\t\t\t}\n\t\t\tchild.lastToken && (this.lastToken = child.lastToken);\n\t\t\tthis.lastTokenNode = child;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendText(text, type) {\n\t\t\treturn this.appendChild(new Text(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendComment(text, type) {\n\t\t\treturn this.appendChild(new Comment(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendLiteral(text, type) {\n\t\t\treturn this.appendToken(new Literal(text, type));\n\t\t}\n\t}\n\n\tclass Root extends Parent {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\tsuper(type);\n\t\t\tthis[Node.rootNode] = this;\n\t\t\t/** @type {ConstructNode[]} */\n\t\t\tthis.constructs = [];\n\n\t\t\t// Only unique property\n\t\t\tthis.nodeCount = 0;\n\t\t}\n\t}\n\n\tclass Literal extends Text {}\n\tclass Comment extends Text {}\n\tclass Closure extends Parent {}\n\tclass Template extends Parent {}\n\tclass Construct extends Parent {}\n\n\tNode.rootNode = symbols.RootNode;\n\tNode.parentNode = symbols.ParentNode;\n\tNode.nextNode = symbols.NextNode;\n\tNode.previousNode = symbols.PreviousNode;\n\tNode.nextTokenNode = symbols.NextTokenNode;\n\tNode.previousTokenNode = symbols.PreviousTokenNode;\n\tNode.construct = symbols.Construct;\n\tNode.trailer = symbols.Trailer;\n\tNode.lastKeyword = symbols.LastKeyword;\n\tNode.lastOperator = symbols.LastOperator;\n\tNode.lastBreak = symbols.LastBreak;\n\tNode.tokenContext = symbols.TokenContext;\n\n\t/** @type {boolean} */\n\tNode.RETAIN_TOKEN_CONTEXTS = true;\n\n\t((constructor, parentDescriptors, nodeDescriptors) => {\n\t\t({constructor, ...nodeDescriptors} = Object.getOwnPropertyDescriptors(Node.prototype));\n\t\t({constructor, ...parentDescriptors} = {...nodeDescriptors, ...Object.getOwnPropertyDescriptors(Parent.prototype)});\n\t\tfor (const Node of [Root, Closure, Template, Construct, Token, Text, Literal, Comment, Parent]) {\n\t\t\tObject.defineProperties(Node.prototype, Parent.isPrototypeOf(Node) ? parentDescriptors : nodeDescriptors);\n\t\t\tObject.freeze(Object.setPrototypeOf(Node.prototype, null));\n\t\t}\n\t})();\n\n\t// NOTE: Safari/iOS throw with Object.setPrototypeOf(Node, null);\n\tObject.freeze(Node);\n\n\treturn {Node, Root, Construct, Closure, Template, Text, Token};\n})();\n\n/** @typedef {ContentNode|ParentNode} Node */\n/** @typedef {Text|Token} ContentNode */\n/** @typedef {Text} TextNode */\n/** @typedef {Token} TokenNode */\n/** @typedef {Root|Construct|Closure|Template} ParentNode */\n/** @typedef {Root} RootNode */\n/** @typedef {Construct} ConstructNode */\n/** @typedef {Closure} ClosureNode */\n/** @typedef {Template} TemplateNode */\n","﻿import * as symbols from './symbols.js';\n\nexport const constructors = {};\n\n/** @typedef {} Construction */\n\n{\n\tconst {defineProperties} = Object;\n\n\tconst Constructor = (reducer =>\n\t\t/**\n\t\t * @template {symbol} P\n\t\t * @template {symbol[]} Q\n\t\t * @param {P} symbol\n\t\t * @param {Q} symbols\n\t\t * @returns {{<T extends ConstructNode>(node: T): T, symbol: P, symbols: Q}}\n\t\t */\n\t\t(symbol, ...symbols) =>\n\t\t\tdefineProperties(\n\t\t\t\tnode => {\n\t\t\t\t\tif (node[symbol] !== undefined) debugger;\n\t\t\t\t\treturn (node[symbol] = symbols.reduce(reducer, node));\n\t\t\t\t},\n\t\t\t\t{name: {value: symbol['description']}, symbol: {value: symbol}, symbols: {value: symbols}},\n\t\t\t))((construction, symbol) => (symbol in construction || (construction[symbol] = null), construction));\n\n\tconstructors.function = Constructor(\n\t\tsymbols.FunctionConstruct,\n\t\tsymbols.FunctionBody,\n\t\tsymbols.FunctionArguments,\n\t\tsymbols.BindingClause,\n\t\tsymbols.ArgumentConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.class = Constructor(\n\t\tsymbols.ClassConstruct,\n\t\tsymbols.ClassBody,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BlockConstruct,\n\t);\n\n\tconstructors.const = constructors.var = constructors.let = Constructor(\n\t\tsymbols.VariableConstruct,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.import = Constructor(\n\t\tsymbols.ImportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.export = Constructor(\n\t\tsymbols.ExportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n}\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Node, Root, Construct, Closure, Template, Token} from './tree.js';\nimport * as symbols from './symbols.js';\nimport {constructors} from './constructs.js';\n\nexport const Collator = (() => {\n\tconst {RETAIN_TOKEN_CONTEXTS = false} = Root;\n\n\treturn class Collator {\n\t\t/**\n\t\t * Collates tokens into construct-aligned syntax trees (CAST)\n\t\t * @param {string} goal - only ECMAScript (for now)\n\t\t */\n\t\tconstructor(goal) {\n\t\t\tthis.goal = goal;\n\n\t\t\t/** Incremented with every append operation */\n\t\t\tthis.nodeCount = 0;\n\n\t\t\t/** Incremented with every token iteration */\n\t\t\tthis.tokenCount = 0;\n\n\t\t\t// TODO: Keep either rootNode or firstNode, right?\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.rootNode = undefined;\n\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.firstNode = undefined;\n\n\t\t\t/** The edges of the collated tree @type {Node} */\n\t\t\tthis.lastNode = undefined;\n\n\t\t\t/** The edges of the generated tokens @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = this.nextToken = undefined;\n\n\t\t\t/** Back-pressure token passed to next node @type {TokenizerToken} */\n\t\t\tthis.queuedToken = undefined;\n\n\t\t\t/** Tokenizer-provided context state @type {TokenizerContext} */\n\t\t\tthis.firstContext = this.lastContext = undefined;\n\n\t\t\t/** The construct currently being formed @type {Construct} */\n\t\t\tthis.currentConstructNode = undefined;\n\n\t\t\t/** Overridable logger function */\n\t\t\tthis.log = console.log;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\tcollate(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\n\t\t\t/** @type {ConstructNode} */\n\t\t\tlet constructNode;\n\n\t\t\tthis.nextToken = token.state.nextToken;\n\n\t\t\tthis.queuedToken === undefined ||\n\t\t\t\t(token === this.queuedToken\n\t\t\t\t\t? (this.queuedToken = undefined)\n\t\t\t\t\t: this.throw(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Invalid token: expecting queued token  [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ));\n\n\t\t\tthis.lastToken = token;\n\n\t\t\tif (this.node(token) === undefined) {\n\t\t\t\tcurrentNode = this.lastNode;\n\t\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\t\tswitch (token.punctuator) {\n\t\t\t\t\tcase 'pattern':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'pattern');\n\t\t\t\t\tcase 'comment':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'comment');\n\t\t\t\t\tcase 'quote':\n\t\t\t\t\t\tif (token.group.opener === '\"' || token.group.opener === \"'\") {\n\t\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'string');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Template()));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Closure(`${token.group.opener}…${token.group.closer}`)));\n\t\t\t\t\t\tif ((constructNode = currentNode[Node.previousTokenNode]) !== undefined) {\n\t\t\t\t\t\t\tif ('{' === token.text) {\n\t\t\t\t\t\t\t\t// if (constructNode[symbols.BlockConstruct] === null) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.BindingConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingClause] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = currentNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\t\t\t} else if (constructNode[symbols.ClassBody] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ClassBody] = currentNode[symbols.ClassBody] = currentNode;\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct] != null &&\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct][symbols.FunctionBody] === null\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t(constructNode = currentNode[symbols.FunctionConstruct] = constructNode[symbols.FunctionConstruct])[\n\t\t\t\t\t\t\t\t\t\tsymbols.BlockConstruct\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionBody] = (currentNode[symbols.FunctionArguments] =\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct])[symbols.FunctionBody] = currentNode[\n\t\t\t\t\t\t\t\t\t\tsymbols.FunctionBody\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// debugger;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t} else if ('(' === token.text) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.ArgumentConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct] = currentNode;\n\t\t\t\t\t\t\t\t\tif (constructNode[symbols.FunctionArguments] === null) {\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionBody] = currentNode[symbols.BlockConstruct] = null;\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionArguments] = currentNode;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdebugger;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.throw(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Invalid delimiter: ${token.punctuator} [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(this.lastContext = tokenContext)[symbols.ContextNode] = this.lastNode = currentNode;\n\t\t\t}\n\n\t\t\treturn this.emitTokenNode(token, tokens);\n\t\t}\n\n\t\t/** @param {TokenizerToken} token */\n\t\tnode(token) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\tif (this.firstNode === undefined) {\n\t\t\t\tthis.firstToken = token;\n\t\t\t\t(this.firstContext = this.lastContext = tokenContext)[\n\t\t\t\t\tsymbols.ContextNode\n\t\t\t\t] = this.lastNode = currentNode = this.rootNode = this.firstNode = new Root(token.goal.name);\n\t\t\t}\n\t\t\t// Are we building a construct?\n\t\t\telse if (this.currentConstructNode !== undefined) {\n\t\t\t\tcurrentNode = this.currentConstructNode;\n\t\t\t}\n\t\t\t// Are we where we want to be?\n\t\t\telse if (\n\t\t\t\t(this.lastNode = currentNode =\n\t\t\t\t\t(this.lastContext === tokenContext && this.lastNode) || tokenContext[symbols.ContextNode]) !== undefined\n\t\t\t) {\n\t\t\t\tthis.lastContext = tokenContext;\n\t\t\t} else if ((this.lastNode = this.lastContext[symbols.ContextNode]) === undefined) {\n\t\t\t\tthis.throw(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Invalid state: lastContext = ${this.lastContext && this.lastContext.number} [${token.goal.name}:${\n\t\t\t\t\t\t\ttoken.lineNumber\n\t\t\t\t\t\t}:${token.columnNumber}]`,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn currentNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitConstructNode(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {Construct} */\n\t\t\tlet constructNode;\n\n\t\t\tcurrentNode = this.lastNode;\n\t\t\tconstructNode = this.lastNode = this.currentConstructNode = new Construct();\n\n\t\t\tif (token.text in constructors) constructors[token.text](constructNode);\n\t\t\tRETAIN_TOKEN_CONTEXTS && (constructNode[Node.tokenContext] = this.lastContext);\n\t\t\tcurrentNode[Node.rootNode].constructs.push(constructNode);\n\t\t\tcurrentNode.appendToken(constructNode);\n\t\t\tconstructNode[Node.construct] = currentNode[Node.construct];\n\t\t\tcurrentNode[Node.construct] = '';\n\t\t\tconstructNode.appendToken(new Token(token, token.text));\n\n\t\t\tfor (\n\t\t\t\t;\n\t\t\t\tthis.currentConstructNode === constructNode &&\n\t\t\t\t(token = tokens.next().value) !== undefined &&\n\t\t\t\ttoken.isDelimiter !== true;\n\t\t\t\tthis.collate(token, tokens) === undefined ||\n\t\t\t\t((constructNode.type = constructNode[Node.construct]), (token = undefined))\n\t\t\t);\n\n\t\t\tconstructNode[Symbol.toStringTag] = `${constructNode[Symbol.toStringTag]} ⟨${constructNode.type}⟩`;\n\t\t\tconstructNode[Node.construct] = '';\n\t\t\tthis.currentConstructNode = undefined;\n\t\t\tthis.queuedToken = token;\n\t\t\tthis.lastNode = currentNode;\n\n\t\t\treturn constructNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens @param {string} type */\n\t\temitFlatNode(token, tokens, type) {\n\t\t\tconst {contextDepth, state} = token;\n\t\t\tconst fragments = [token.text];\n\t\t\twhile ((this.nextToken = state.nextToken).contextDepth >= contextDepth) {\n\t\t\t\tfragments.push((this.lastToken = tokens.next().value).text);\n\t\t\t}\n\t\t\tconst child =\n\t\t\t\ttype === 'comment'\n\t\t\t\t\t? this.lastNode.appendComment(fragments.join(''), type)\n\t\t\t\t\t: this.lastNode.appendLiteral(fragments.join(''), type);\n\t\t\tchild.firstToken = token;\n\t\t\tchild.lastToken = this.lastToken;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitTokenNode(token, tokens) {\n\t\t\t/** @type {string} */\n\t\t\tlet type;\n\t\t\t/** @type {symbol} */\n\t\t\tlet symbol;\n\t\t\t/** @type {(typeof constructors)[keyof (typeof constructors)]} */\n\t\t\tlet constructor;\n\n\t\t\tlet constructNode;\n\t\t\tconst currentNode = (constructNode = this.lastNode);\n\t\t\tconst currentConstructText = currentNode[Node.construct];\n\n\t\t\tswitch ((type = token.type)) {\n\t\t\t\tcase 'inset':\n\t\t\t\tcase 'whitespace':\n\t\t\t\t\treturn currentNode.appendText(token.text, token.type);\n\t\t\t\tcase 'default':\n\t\t\t\tcase 'identifier':\n\t\t\t\t\tif ((constructNode = currentNode)[symbols.BindingClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.BindingClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((constructNode = currentNode) && constructNode[symbols.ExtendsClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.ExtendsClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t}\n\t\t\t\tcase 'number':\n\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'break':\n\t\t\t\t\tcurrentNode[Node.lastBreak] = token;\n\t\t\t\t\t// TODO: GeneratorMethod\n\t\t\t\t\tif (currentConstructText.endsWith('async')) {\n\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\ttype = 'break';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'operator':\n\t\t\t\t\tcurrentNode[Node.lastOperator] = token;\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tif (currentConstructText.endsWith('function')) {\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] += '*';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '.':\n\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\tcase ':':\n\t\t\t\t\t\tcase ';':\n\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'keyword':\n\t\t\t\t\tcurrentNode[Node.lastKeyword] = token;\n\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\tcase 'import':\n\t\t\t\t\t\t\ttype = currentNode[Node.construct] = token.text;\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'export':\n\t\t\t\t\t\t\ttoken.contextDepth\n\t\t\t\t\t\t\t\t? (currentNode[Node.construct] = '')\n\t\t\t\t\t\t\t\t: (type = currentNode[Node.construct] = token.text);\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'const':\n\t\t\t\t\t\tcase 'var':\n\t\t\t\t\t\tcase 'let':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\tcase 'default':\n\t\t\t\t\t\t\tif (currentConstructText !== 'export') {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'async':\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === 'import' || currentConstructText === 'export'\n\t\t\t\t\t\t\t\t\t? `${currentNode[Node.construct]} ${token.text}`\n\t\t\t\t\t\t\t\t\t: token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'function':\n\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === '' ? token.text : `${currentNode[Node.construct]} ${token.text}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'extends':\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] !== undefined &&\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] === undefined\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] = null;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (constructor !== undefined && constructor.symbol in currentNode) debugger;\n\t\t\tif (currentConstructText !== currentNode[Node.construct]) {\n\t\t\t\tif (this.currentConstructNode === undefined) {\n\t\t\t\t\treturn this.emitConstructNode(token, tokens);\n\t\t\t\t} else if (this.currentConstructNode === currentNode) {\n\t\t\t\t\tif (currentNode[Node.construct] === '') {\n\t\t\t\t\t\tif (symbol) debugger;\n\t\t\t\t\t\treturn (this.currentConstructNode = undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (constructor) constructor(currentNode);\n\t\t\t}\n\n\t\t\tconst tokenNode = currentNode.appendToken(new Token(token, type));\n\n\t\t\tif (symbol !== undefined) {\n\t\t\t\tconstructNode[symbol] = tokenNode;\n\t\t\t\tswitch (symbol) {\n\t\t\t\t\tcase symbols.BindingClause:\n\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tokenNode;\n\t\t}\n\n\t\tthrow(error) {\n\t\t\tthrow error;\n\t\t}\n\t};\n})();\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as symbols from './symbols.js';\n\nexport const {ModuleSource, ModuleBinding, DeclarationType} = (() => {\n\tconst DeclarationType = {\n\t\t['function']: 'FunctionDeclaration',\n\t\t['async function']: 'AsyncFunctionDeclaration',\n\t\t['function*']: 'GeneratorFunctionDeclaration',\n\t\t['async function*']: 'AsyncGeneratorFunctionDeclaration',\n\t\t['class']: 'ClassDeclaration',\n\t\t['const']: 'VariableDeclaration',\n\t\t['let']: 'VariableDeclaration',\n\t\t['var']: 'VariableDeclaration',\n\t\t['import']: 'ImportDeclaration',\n\t\t['export']: 'ExportDeclaration',\n\t\t['export default']: 'ExportDefaultAssignmentExpression',\n\t};\n\n\t/** @param {Partial<ModuleBinding>} [record] */\n\tclass ModuleBinding {\n\t\tconstructor(record) {\n\t\t\tif (record) {\n\t\t\t\t({\n\t\t\t\t\tbindingIntent: this.bindingIntent,\n\t\t\t\t\tbindingDeclaration: this.bindingDeclaration,\n\t\t\t\t\tinternalType: this.internalType,\n\t\t\t\t\texportedType: this.exportedType,\n\t\t\t\t\tinternalIdentifier: this.internalIdentifier,\n\t\t\t\t\texportedIdentifier: this.exportedIdentifier,\n\t\t\t\t\timportedIdentifier: this.importedIdentifier,\n\t\t\t\t\texternalModuleSpecifier: this.externalModuleSpecifier,\n\t\t\t\t} = record);\n\n\t\t\t\t// Object.defineProperty(this, 'bindingDescription', {value: record.bindingDescription, enumerable: false});\n\t\t\t} else {\n\t\t\t\t/** @type {'import'|'export'|undefined} */\n\t\t\t\tthis.bindingIntent = undefined;\n\t\t\t\t/** @type {DeclarationType|undefined} */\n\t\t\t\tthis.bindingDeclaration = undefined;\n\t\t\t\t/** @type {'const'|'let'|'var'|'function'|'class'|'binding'|'void'|undefined} */\n\t\t\t\tthis.internalType = undefined;\n\t\t\t\t/** @type {'constant'|'readonly'|'symbolic'|undefined} */\n\t\t\t\tthis.exportedType = undefined;\n\t\t\t\t/** @type {string|undefined} */\n\t\t\t\tthis.internalIdentifier = this.exportedIdentifier = this.importedIdentifier = undefined;\n\t\t\t\t/** @type {string|undefined} */\n\t\t\t\tthis.externalModuleSpecifier = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tModuleBinding.DeclarationType = DeclarationType;\n\n\tclass ModuleSource {\n\t\t/** @param {Partial<ModuleSource>} [record] */\n\t\tconstructor(record) {\n\t\t\tif (record) {\n\t\t\t\t({\n\t\t\t\t\tcompiledText: this.compiledText,\n\t\t\t\t\tcompiledEvaluatorText: this.compiledEvaluatorText,\n\t\t\t\t\tsourceText: this.sourceText,\n\t\t\t\t\tsourceEvaluatorText: this.sourceEvaluatorText,\n\t\t\t\t\tsourceType: this.sourceType,\n\t\t\t\t\trootNode: this.rootNode,\n\t\t\t\t\tfragments: this.fragments,\n\t\t\t\t\tbindings: this.bindings,\n\t\t\t\t\tconstructs: this.constructs,\n\t\t\t\t\terrors: this.errors,\n\t\t\t\t} = record);\n\t\t\t} else {\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.compiledText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.compiledEvaluatorText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceEvaluatorText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceType = undefined;\n\t\t\t\t/** @type {RootNode} */\n\t\t\t\tthis.rootNode = undefined;\n\t\t\t\t/** @type {string[]} */\n\t\t\t\tthis.fragments = undefined;\n\t\t\t\t/** @type {BindingRecord[]} */\n\t\t\t\tthis.bindings = undefined;\n\t\t\t\t/** @type {ConstructNode[]} */\n\t\t\t\tthis.constructs = undefined;\n\t\t\t\t/** @type {Error[]} */\n\t\t\t\tthis.errors = undefined;\n\t\t\t}\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.compiledText;\n\t\t}\n\n\t\t/** @param {string} message @param {{lineNumber: number, columnNumber: number}} properties */\n\t\terror(message, properties, ErrorClass = Error) {\n\t\t\tconst error = Object.assign(new ErrorClass(message), properties);\n\t\t\tthis.errors === undefined ? (this.errors = [error]) : this.errors.push(error);\n\t\t}\n\t}\n\n\treturn {ModuleSource, ModuleBinding, DeclarationType};\n})();\n\n/** @typedef {ModuleSource} SourceRecord */\n/** @typedef {ModuleBinding} BindingRecord */\n/** @typedef {keyof (typeof DeclarationType)} DeclarationType */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// const trace = /** @type {[function, any[]][]} */ [];\n\nclass Matcher extends RegExp {\n  /**\n   * @template T\n   * @param {Matcher.Pattern} pattern\n   * @param {Matcher.Flags} [flags]\n   * @param {Matcher.Entities} [entities]\n   * @param {T} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    // trace.push([new.target, [...arguments]]);\n    //@ts-ignore\n    super(pattern, flags);\n    // Object.assign(this, RegExp.prototype, new.target.prototype);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    /** @type {T} */\n    this.state = state;\n    this.capture = this.capture;\n    this.exec = this.exec;\n    // this.test = this.test;\n    ({\n      // LOOKAHEAD: this.LOOKAHEAD = Matcher.LOOKAHEAD,\n      // INSET: this.INSET = Matcher.INSET,\n      // OUTSET: this.OUTSET = Matcher.OUTSET,\n      DELIMITER: this.DELIMITER = Matcher.DELIMITER,\n      UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN,\n    } = new.target);\n  }\n\n  /**\n   * @param {string} source\n   * @returns {MatcherMatchResult}\n   */\n  exec(source) {\n    /** @type {MatcherMatchArray} */\n    const match = super.exec(source);\n\n    // @ts-ignore\n    if (match === null) return null;\n\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n    // @ts-ignore\n    return match;\n  }\n\n  /**\n   * @param {Matcher.PatternFactory} factory\n   * @param {Matcher.Flags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    // const pattern = factory(entity => void entities.push(((entity != null || undefined) && entity) || undefined));\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags = '',\n      iterative;\n    for (const source of sources) {\n      if (!source || (typeof source !== 'string' && typeof source.flags !== 'string')) continue;\n      for (const flag of source.flags || source)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    // console.log('%o: ', flags, ...sources);\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        (typeof value !== 'symbol' && `${value}`)) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) =>\n      values\n        .map(sequence.span)\n        .filter(Boolean)\n        .join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n}\n\nexport const {\n  // INSET = (Matcher.INSET = /* Symbol.for */ 'INSET'),\n  // OUTSET = (Matcher.OUTSET = /* Symbol.for */ 'OUTSET'),\n  DELIMITER = (Matcher.DELIMITER = /* Symbol.for */ 'DELIMITER'),\n  UNKNOWN = (Matcher.UNKNOWN = /* Symbol.for */ 'UNKNOWN'),\n  // LOOKAHEAD = (Matcher.LOOKAHEAD = /* Symbol.for */ 'LOOKAHEAD'),\n  escape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n  sequence,\n  matchAll = (Matcher.matchAll =\n    /**\n     * @template {RegExp} T\n     * @type {(string: Matcher.Text, matcher: T) => Matcher.Iterator<T> }\n     */\n    //@ts-ignore\n    (() =>\n      Function.call.bind(\n        // String.prototype.matchAll || // TODO: Uncomment eventually\n        {\n          /**\n           * @this {string}\n           * @param {RegExp | string} pattern\n           */\n          *matchAll() {\n            const matcher =\n              arguments[0] &&\n              (arguments[0] instanceof RegExp\n                ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                : RegExp(arguments[0], 'g'));\n            const string = String(this);\n\n            if (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n            for (\n              let match, lastIndex = -1;\n              lastIndex <\n              ((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n              yield match, matcher.lastIndex = lastIndex\n            );\n          },\n        }.matchAll,\n      ))()),\n} = Matcher;\n\n/** @typedef {MatcherFlags} Matcher.Flags */\n/** @typedef {MatcherText} Matcher.Text */\n/** @typedef {MatcherOperator} Matcher.Operator */\n/** @typedef {MatcherIdentity} Matcher.Identity */\n/** @typedef {MatcherEntity} Matcher.Entity */\n/** @typedef {MatcherCapture} Matcher.Capture */\n/** @typedef {MatcherEntityFactory} Matcher.EntityFactory */\n/** @typedef {MatcherPatternFactory} Matcher.PatternFactory */\n/** @typedef {MatcherPattern} Matcher.Pattern */\n/** @typedef {MatcherEntities} Matcher.Entities */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchArray} Matcher.MatchArray<T> */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchResult} Matcher.MatchResult<T> */\n/** @template {RegExp} T @typedef {MatcherIterator} Matcher.Iterator<T> */\n\nexport {Matcher};\n","﻿export const {\n  ranges,\n  BinaryDigit,\n  DecimalDigit,\n  ControlLetter,\n  HexLetter,\n  HexDigit,\n  GraveAccent,\n  Null,\n  ZeroWidthNonJoiner,\n  ZeroWidthJoiner,\n  ZeroWidthNoBreakSpace,\n  Whitespace,\n  ID_Start,\n  ID_Continue,\n  UnicodeIDStart,\n  UnicodeIDContinue,\n} = (factories => {\n  const {String, RegExp, Symbol, Object} = globalThis;\n  const {raw} = String;\n  const {replace: ReplaceSymbol} = Symbol;\n  const {defineProperty, create} = Object;\n\n  const RegExpClass = /^(?:\\[(?=.*?\\]$)|)((?:\\\\.|[^\\\\\\n\\[\\]]*)*)\\]?$/;\n\n  class RegExpRange extends RegExp {\n    constructor(source, flags) {\n      let range;\n      range =\n        source && typeof source === 'object' && source instanceof RegExp\n          ? (flags === undefined && (flags = source.flags), source.source)\n          : (typeof source === 'string' ? source : (source = `${source || ''}`)).trim() &&\n            (source = RegExpClass[ReplaceSymbol](source, '[$1]'));\n\n      if (!range || !RegExpClass.test(range)) {\n        throw TypeError(`Invalid Regular Expression class range: ${range}`);\n      }\n\n      typeof flags === 'string' || (flags = `${flags || ''}` || '');\n\n      flags.includes('u') || !(source.includes('\\\\p{') || source.includes('\\\\u')) || (flags += 'u');\n      super(source, flags);\n      defineProperty(this, 'range', {value: range.slice(1, -1), enumerable: true, writable: false});\n    }\n\n    toString() {\n      return this.range;\n    }\n\n    static range(strings, ...values) {\n      return new (this || RegExpRange)(raw(strings, ...values));\n    }\n  }\n\n  const safeRange = (strings, ...values) => {\n    try {\n      return RegExpRange.range(strings, ...values).source.slice(1, -1);\n    } catch (exception) {}\n  };\n\n  const descriptors = {\n    ranges: {\n      get() {\n        return ranges;\n      },\n      enumerable: true,\n      configurable: false,\n    },\n  };\n\n  for (const property in factories) {\n    descriptors[property] = {\n      get() {\n        const value = factories[property](safeRange, ranges);\n        defineProperty(ranges, property, {value, enumerable: true, configurable: false});\n        return value;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n  }\n\n  /** @type {Record<keyof factories, string>} */\n  const ranges = create(null, descriptors);\n\n  return ranges;\n})({\n  UnicodeIDStart: (range, {ID_Start}) => range`_$${ID_Start}`,\n  UnicodeIDContinue: (range, {ID_Continue, ZeroWidthNonJoiner, ZeroWidthJoiner, CombiningGraphemeJoiner}) =>\n    range`$${ID_Continue}${ZeroWidthNonJoiner}${ZeroWidthJoiner}${CombiningGraphemeJoiner}`,\n  Null: range => range`\\0`,\n  BinaryDigit: range => range`01`,\n  DecimalDigit: range => range`0-9`,\n  ControlLetter: range => range`a-zA-Z`,\n  HexLetter: range => range`a-fA-F`,\n  HexDigit: (range, {DecimalDigit, HexLetter}) => range`${DecimalDigit}${HexLetter}`,\n  GraveAccent: range => range`${'`'}`,\n  ZeroWidthNonJoiner: range => range`\\u200c`,\n  ZeroWidthJoiner: range => range`\\u200d`,\n  ZeroWidthNoBreakSpace: range => range`\\ufeff`,\n  CombiningGraphemeJoiner: range => range`\\u034f`,\n  Whitespace: (range, {ZeroWidthNoBreakSpace}) => range`\\s${ZeroWidthNoBreakSpace}`,\n  ID_Start: range =>\n    range`\\p{ID_Start}` ||\n    range`A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: range =>\n    range`\\p{ID_Continue}` ||\n    range`0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n});\n","﻿/** Symbol map @type {{ [key: string]: symbol }} */\nconst symbols = {};\n\n/** Unique token records @type {{[symbol: symbol]: }} */\nconst tokens = {};\n\nconst identities = {\n  UnicodeIDStart: 'ECMAScriptUnicodeIDStart',\n  UnicodeIDContinue: 'ECMAScriptUnicodeIDContinue',\n  HexDigits: 'ECMAScriptHexDigits',\n  CodePoint: 'ECMAScriptCodePoint',\n  ControlEscape: 'ECMAScriptControlEscape',\n  ContextualWord: 'ECMAScriptContextualWord',\n  RestrictedWord: 'ECMAScriptRestrictedWord',\n  FutureReservedWord: 'ECMAScriptFutureReservedWord',\n  Keyword: 'ECMAScriptKeyword',\n};\n\nconst goals = {\n  [Symbolic('ECMAScriptGoal')]: {\n    type: undefined,\n    flatten: undefined,\n    fold: undefined,\n    openers: ['{', '(', '[', \"'\", '\"', '`', '/', '/*', '//'],\n    closers: ['}', ')', ']'],\n  },\n  [Symbolic('CommentGoal')]: {type: 'comment', flatten: true, fold: true},\n  [Symbolic('RegExpGoal')]: {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: ['['],\n    closers: [']'],\n    punctuators: ['+', '*', '?', '|', '^', '{', '}', '(', ')'],\n  },\n  [Symbolic('StringGoal')]: {type: 'quote', flatten: true, fold: true},\n  [Symbolic('TemplateLiteralGoal')]: {\n    type: 'quote',\n    flatten: true,\n    fold: false,\n    openers: ['${'],\n  },\n  [Symbolic('FaultGoal')]: {type: 'fault'}, // , groups: {}\n};\n\nconst {\n  [symbols.FaultGoal]: FaultGoal,\n  [symbols.ECMAScriptGoal]: ECMAScriptGoal,\n  [symbols.CommentGoal]: CommentGoal,\n  [symbols.RegExpGoal]: RegExpGoal,\n  [symbols.StringGoal]: StringGoal,\n  [symbols.TemplateLiteralGoal]: TemplateLiteralGoal,\n} = goals;\n\nconst groups = {\n  ['{']: {opener: '{', closer: '}'},\n  ['(']: {opener: '(', closer: ')'},\n  ['[']: {opener: '[', closer: ']'},\n  ['//']: {opener: '//', closer: '\\n', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/*']: {opener: '/*', closer: '*/', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/']: {opener: '/', closer: '/', goal: symbols.RegExpGoal, parentGoal: symbols.ECMAScriptGoal},\n  [\"'\"]: {opener: \"'\", closer: \"'\", goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['\"']: {opener: '\"', closer: '\"', goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['`']: {\n    opener: '`',\n    closer: '`',\n    goal: symbols.TemplateLiteralGoal,\n    parentGoal: symbols.ECMAScriptGoal,\n  },\n  ['${']: {\n    opener: '${',\n    closer: '}',\n    goal: symbols.ECMAScriptGoal,\n    parentGoal: symbols.TemplateLiteralGoal,\n  },\n};\n\n/**  @type {ECMAScript.Keywords} */\nconst keywords = {};\n\n{\n  const {create, freeze, entries, getOwnPropertySymbols, getOwnPropertyNames, setPrototypeOf} = Object;\n\n  const punctuators = create(null);\n\n  for (const opener of getOwnPropertyNames(groups)) {\n    const {[opener]: group} = groups;\n    'goal' in group && (group.goal = goals[group.goal] || FaultGoal);\n    'parentGoal' in group && (group.parentGoal = goals[group.parentGoal] || FaultGoal);\n    freeze(group);\n  }\n\n  for (const symbol of getOwnPropertySymbols(goals)) {\n    // @ts-ignore\n    const {[symbol]: goal} = goals;\n\n    goal.name = (goal.symbol = symbol).description.replace(/Goal$/, '');\n    goal[Symbol.toStringTag] = `«${goal.name}»`;\n    goal.tokens = tokens[symbol] = {};\n    goal.groups = [];\n\n    if (goal.punctuators) {\n      for (const punctuator of (goal.punctuators = [...goal.punctuators]))\n        punctuators[punctuator] = !(goal.punctuators[punctuator] = true);\n      freeze(setPrototypeOf(goal.punctuators, punctuators));\n    }\n\n    if (goal.closers) {\n      for (const closer of (goal.closers = [...goal.closers])) punctuators[closer] = !(goal.closers[closer] = true);\n      freeze(setPrototypeOf(goal.closers, punctuators));\n    }\n\n    if (goal.openers) {\n      for (const opener of (goal.openers = [...goal.openers])) {\n        const group = (goal.groups[opener] = {...groups[opener]});\n        punctuators[opener] = !(goal.openers[opener] = true);\n        GoalSpecificTokenRecord(goal, group.opener, 'opener', {group});\n        GoalSpecificTokenRecord(goal, group.closer, 'closer', {group});\n        group[Symbol.toStringTag] = `‹${group.opener}›`;\n      }\n      freeze(setPrototypeOf(goal.openers, punctuators));\n    }\n\n    freeze(goal.groups);\n    freeze(goal.tokens);\n    freeze(goal);\n  }\n\n  freeze(punctuators);\n  freeze(goals);\n  freeze(groups);\n  freeze(identities);\n  freeze(symbols);\n\n  for (const [identity, list] of entries({\n    [identities.Keyword]:\n      'await break case catch class const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield',\n    [identities.RestrictedWord]: 'interface implements package private protected public',\n    [identities.FutureReservedWord]: 'enum',\n    // NOTE: This is purposely not aligned with the spec\n    [identities.ContextualWord]: 'arguments async as from of static get set',\n  })) {\n    for (const keyword of list.split(/\\s+/)) keywords[keyword] = identity;\n  }\n  keywords[Symbol.iterator] = Array.prototype[Symbol.iterator].bind(Object.getOwnPropertyNames(keywords));\n  freeze(keywords);\n}\n\nexport {\n  identities,\n  goals,\n  groups,\n  symbols,\n  keywords,\n  FaultGoal,\n  ECMAScriptGoal,\n  CommentGoal,\n  RegExpGoal,\n  StringGoal,\n  TemplateLiteralGoal,\n};\n\n/**\n * Creates a symbolically mapped goal-specific token record\n *\n * @template {{}} T\n * @param {goal} goal\n * @param {string} text\n * @param {type} type\n * @param {T} properties\n */\nfunction GoalSpecificTokenRecord(goal, text, type, properties) {\n  const symbol = Symbol(`‹${goal.name} ${text}›`);\n  return (goal.tokens[text] = goal.tokens[symbol] = tokens[symbol] = {symbol, text, type, goal, ...properties});\n}\n\nfunction Symbolic(key, description = key) {\n  return (symbols[key] = Symbol(description));\n}\n\n/** @typedef {typeof goals} goals */\n/** @typedef {goals[keyof goals]} goal */\n/** @typedef {goal['type']} type */\n/** @typedef {{symbol: symbol, text: string, type: type, goal?: goal, group?: group}} token */\n/** @typedef {typeof groups} groups */\n/** @typedef {groups[keyof groups]} group */\n\n/**\n * @typedef {'await'|'break'|'case'|'catch'|'class'|'const'|'continue'|'debugger'|'default'|'delete'|'do'|'else'|'export'|'extends'|'finally'|'for'|'function'|'if'|'import'|'in'|'instanceof'|'new'|'return'|'super'|'switch'|'this'|'throw'|'try'|'typeof'|'var'|'void'|'while'|'with'|'yield'} ECMAScript.Keyword\n * @typedef {'interface'|'implements'|'package'|'private'|'protected'|'public'} ECMAScript.RestrictedWord\n * @typedef {'enum'} ECMAScript.FutureReservedWord\n * @typedef {'arguments'|'async'|'as'|'from'|'of'|'static'} ECMAScript.ContextualKeyword\n * @typedef {Record<ECMAScript.Keyword|ECMAScript.RestrictedWord|ECMAScript.FutureReservedWord|ECMAScript.ContextualKeyword, symbol>} ECMAScript.Keywords\n */\n","﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/** @type {(string: string, sequence: string , index?: number) => number} */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n/** @type {(string: string) => number} */\nexport const countLineBreaks = text => {\n  let lineBreaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) > -1; lineBreaks++);\n  return lineBreaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, lineBreaks: countLineBreaks(pre)});\n        yield {text, lineBreaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Mode} mode @param {ModeOptions} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","﻿//@ts-check\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\n/** @typedef {typeof stats} ContextStats */\nconst stats = {\n  captureCount: 0,\n  contextCount: 0,\n  tokenCount: 0,\n  nestedCaptureCount: 0,\n  nestedContextCount: 0,\n  nestedTokenCount: 0,\n};\n\n/** @param {State} state */\n// TODO: Document initializeState\nexport const initializeState = state => {\n  /** @type {Groups} state */\n  (state.groups = []).closers = [];\n  state.lineOffset = state.lineIndex = 0;\n  state.totalCaptureCount = state.totalTokenCount = 0;\n\n  /** @type {Contexts} */\n  const contexts = (state.contexts = Array(100));\n  const context = initializeContext({\n    id: `«${state.matcher.goal.name}»`,\n    //@ts-ignore\n    number: (contexts.count = state.totalContextCount = 1),\n    depth: 0,\n    parentContext: undefined,\n    goal: state.matcher.goal,\n    group: undefined,\n    state,\n  });\n  state.lastTokenContext = void (state.firstTokenContext = state.nextTokenContext = contexts[\n    -1\n  ] = state.context = state.lastContext = context);\n};\n\n/** @param {State} state */\n// TODO: Document initializeState\nexport const finalizeState = state => {\n  const isValidState =\n    state.firstTokenContext === state.nextTokenContext &&\n    state.nextToken === undefined &&\n    state.nextOffset === undefined;\n\n  const {\n    flags: {debug = false} = {},\n    options: {console: {log = console.log, warn = console.warn} = console} = {},\n    error = (state.error = !isValidState ? 'Unexpected end of tokenizer state' : undefined),\n  } = state;\n\n  // if (!debug && error) throw Error(error);\n\n  // Finalize latent token artifacts\n  state.nextTokenContext = void (state.lastTokenContext = state.nextTokenContext);\n\n  // Finalize tokenization artifacts\n  // NOTE: don't forget to uncomment after debugging\n  state.context = state.contexts = state.groups = undefined;\n\n  // Output to console when necessary\n  debug && (error ? warn : log)(`[tokenizer]: ${error || 'done'} — %O`, state);\n};\n\n/** @param {Match} match @param {State} state */\nexport const createToken = (match, state) => {\n  let currentGoal,\n    // goalName,\n    currentGoalType,\n    contextId,\n    contextNumber,\n    contextDepth,\n    contextGroup,\n    parentContext,\n    tokenReference,\n    tokenContext,\n    nextToken,\n    text,\n    type,\n    fault,\n    punctuator,\n    offset,\n    lineInset,\n    lineBreaks,\n    isDelimiter,\n    isComment,\n    isWhitespace,\n    flatten,\n    fold,\n    columnNumber,\n    lineNumber,\n    tokenNumber,\n    captureNumber,\n    hint;\n\n  const {\n    context: currentContext,\n    nextContext,\n    lineIndex,\n    lineOffset,\n    nextOffset,\n    lastToken,\n    lastTrivia,\n    lastAtom,\n  } = state;\n\n  /* Capture */\n  ({\n    0: text,\n    capture: {inset: lineInset},\n    identity: type,\n    flatten,\n    fault,\n    punctuator,\n    index: offset,\n  } = match);\n\n  if (!text) return;\n\n  ({\n    id: contextId,\n    number: contextNumber,\n    depth: contextDepth,\n    goal: currentGoal,\n    group: contextGroup,\n    parentContext,\n  } = tokenContext = (type === 'opener' && nextContext) || currentContext);\n\n  currentGoalType = currentGoal.type;\n\n  nextOffset &&\n    (state.nextOffset = void (nextOffset > offset && (text = match.input.slice(offset, nextOffset)),\n    (state.matcher.lastIndex = nextOffset)));\n\n  lineBreaks = (text === '\\n' && 1) || countLineBreaks(text);\n  isDelimiter = type === 'closer' || type === 'opener';\n  isWhitespace = !isDelimiter && (type === 'whitespace' || type === 'break' || type === 'inset');\n\n  (isComment = type === 'comment' || punctuator === 'comment')\n    ? (type = 'comment')\n    : type || (type = (!isDelimiter && !fault && currentGoalType) || 'text');\n\n  if (lineBreaks) {\n    state.lineIndex += lineBreaks;\n    state.lineOffset = offset + (text === '\\n' ? 1 : text.lastIndexOf('\\n'));\n  }\n\n  /* Flattening / Token Folding */\n\n  flatten === false || flatten === true || (flatten = !isDelimiter && currentGoal.flatten === true);\n\n  captureNumber = ++tokenContext.captureCount;\n  state.totalCaptureCount++;\n\n  if (\n    (fold = flatten) && // fold only if flatten is allowed\n    lastToken != null &&\n    ((lastToken.contextNumber === contextNumber && lastToken.fold === true) ||\n      (type === 'closer' && flatten === true)) && // never fold across contexts\n    (lastToken.type === type || (currentGoal.fold === true && (lastToken.type = currentGoalType)))\n  ) {\n    lastToken.captureCount++;\n    lastToken.text += text;\n    lineBreaks && (lastToken.lineBreaks += lineBreaks);\n  } else {\n    // The generator retains this new as state.nextToken\n    //   which means tokenContext is state.nextTokenContext\n    //   and the fact that we are returning a token here will\n    //   yield the current state.nextToken so we need to also\n    //   set state.lastTokenContext to match\n    //\n    //   TODO: Add parity tests for tokenizer's token/context states\n    state.lastTokenContext = state.nextTokenContext;\n    state.nextTokenContext = tokenContext;\n\n    /* Token Creation */\n    flatten = false;\n    columnNumber = 1 + (offset - lineOffset || 0);\n    lineNumber = 1 + (lineIndex || 0);\n\n    tokenNumber = ++tokenContext.tokenCount;\n    state.totalTokenCount++;\n\n    // hint = `${(isDelimiter ? type : currentGoalType && `in-${currentGoalType}`) ||\n    hint = `${\n      isDelimiter ? type : currentGoalType ? `in-${currentGoalType}` : ''\n    }\\n\\n${contextId} #${tokenNumber}\\n(${lineNumber}:${columnNumber})`;\n\n    tokenReference = isWhitespace || isComment ? 'lastTrivia' : 'lastAtom';\n\n    nextToken = tokenContext[tokenReference] = state[tokenReference] = tokenContext.lastToken = state.lastToken = {\n      text,\n      type,\n      offset,\n      punctuator,\n      hint,\n      lineOffset,\n      lineBreaks,\n      lineInset,\n      columnNumber,\n      lineNumber,\n      captureNumber,\n      captureCount: 1,\n      tokenNumber,\n      contextNumber,\n      contextDepth,\n\n      isWhitespace, // whitespace:\n      isDelimiter, // delimiter:\n      isComment, // comment:\n\n      // FIXME: Nondescript\n      fault,\n      fold,\n      flatten,\n\n      goal: currentGoal,\n      group: contextGroup,\n      state,\n      context: tokenContext,\n    };\n  }\n  /* Context */\n  !nextContext ||\n    ((state.nextContext = undefined), nextContext === currentContext) ||\n    ((state.lastContext = currentContext),\n    currentContext === nextContext.parentContext\n      ? (state.totalContextCount++,\n        (nextContext.precedingAtom = lastAtom),\n        (nextContext.precedingTrivia = lastTrivia),\n        (nextContext.precedingToken = lastToken))\n      : ((parentContext.nestedContextCount += currentContext.nestedContextCount + currentContext.contextCount),\n        (parentContext.nestedCaptureCount += currentContext.nestedCaptureCount + currentContext.captureCount),\n        (parentContext.nestedTokenCount += currentContext.nestedTokenCount + currentContext.tokenCount)),\n    (state.context = nextContext));\n\n  return nextToken;\n};\n\n/**\n * @param {Partial<Context>} context\n * @returns {Context}\n */\n//@ts-ignore\nexport const initializeContext = context => Object.assign(context, stats);\n\nexport const capture = (identity, match, text) => {\n  match.capture[(match.identity = identity)] = text || match[0];\n  (match.fault = identity === 'fault') && (match.flatten = false);\n  return match;\n};\n\n/**\n * Safely mutates matcher state to open a new context.\n *\n * @param {string} text - Text of the intended { type = \"opener\" } token\n * @param {State} state - Matcher state\n * @returns {undefined | string} - String when context is **not** open\n */\nexport const open = (text, state) => {\n  // const {goal: initialGoal, groups} = state;\n  const {\n    contexts,\n    context: parentContext,\n    context: {depth: index, goal: initialGoal},\n    groups,\n  } = state;\n  const group = initialGoal.groups[text];\n\n  if (!group) return initialGoal.type || 'sequence';\n  groups.splice(index, groups.length, group);\n  groups.closers.splice(index, groups.closers.length, group.closer);\n\n  parentContext.contextCount++;\n\n  const goal = group.goal === undefined ? initialGoal : group.goal;\n\n  state.nextContext = contexts[index] = initializeContext({\n    id: `${parentContext.id} ${\n      goal !== initialGoal ? `\\n${goal[Symbol.toStringTag]} ${group[Symbol.toStringTag]}` : group[Symbol.toStringTag]\n    }`,\n    number: ++contexts.count,\n    depth: index + 1,\n    parentContext,\n    goal,\n    group,\n    state,\n  });\n};\n\n/**\n * Safely mutates matcher state to close the current context.\n *\n * @param {string} text - Text of the intended { type = \"closer\" } token\n * @param {State} state - Matcher state\n * @returns {undefined | string} - String when context is **not** closed\n */\nexport const close = (text, state) => {\n  const groups = state.groups;\n  const index = groups.closers.lastIndexOf(text);\n\n  if (index === -1 || index !== groups.length - 1) return fault(text, state);\n\n  groups.closers.splice(index, groups.closers.length);\n  groups.splice(index, groups.length);\n  state.nextContext = state.context.parentContext;\n};\n\n/**\n * Safely mutates matcher state to skip ahead.\n *\n * TODO: Finish implementing forward helper\n *\n * @param {string | RegExp} search\n * @param {Match} match\n * @param {State} state\n */\nexport const forward = (search, match, state) => {\n  search &&\n    (typeof search === 'object'\n      ? ((search.lastIndex = match.index + match[0].length), (state.nextOffset = match.input.search(search)))\n      : (state.nextOffset = match.input.indexOf(search, match.index + match[0].length)) > match.index ||\n        (() => {\n          throw new Error('Parse Error: Unexpected end of stream');\n        })());\n  // state.nextOffset = match.input.length - 1\n};\n\n/**\n * @returns {'fault'}\n */\nexport const fault = (text, state) => {\n  console.warn(text, {...state});\n  return 'fault';\n};\n\n/** @typedef {import('./types').Match} Match */\n/** @typedef {import('./types').Groups} Groups */\n/** @typedef {import('./types').Context} Context */\n/** @typedef {import('./types').Contexts} Contexts */\n/** @typedef {import('./types').State} State */\n","﻿// import {Matcher} from '../../../modules/matcher/matcher.js';\nimport {Matcher} from '../matcher/matcher.js';\nimport {HexDigit, DecimalDigit, BinaryDigit, ControlLetter, UnicodeIDStart, UnicodeIDContinue} from './ranges.js';\nimport {keywords, ECMAScriptGoal, CommentGoal, RegExpGoal, StringGoal, TemplateLiteralGoal} from './definitions.js';\nimport {capture, forward, fault, open, close} from './helpers.js';\n\nDUMMY: async () => {\n  /* prettier-ignore */ // Make sure this block never lints\n  {\n    let i\\u0032;\n    this.new.target;\n\n    Solidus: {\n      a = b             // Identifiers always divide (never ASI)\n                        /(div)/g.exec(c).map(d);\n\n                        // ExpressionStart never divide\n      ( ([              /([(regexp)])/g / [] ] ) );\n      ( [] /( [         /([(regexp)])/g / [] ] ) );\n      ( ([]) /( [       /([(regexp)])/g / [] ] ) );\n      ( [] /* */ /( [   /([(regexp)])/g / [] ] ) );\n      ( []/( [/*/*//*/*//([(regexp)])/g / [] ] ) );\n                        // Declaration (ASI) then ExpressionStart\n      function ƒ () {}  /(regexp)/g.exec(c).map(d);\n\n                        // Literals always divide (never ASI)\n      ( []              /([(div)])/g / [] );\n      ( ([])            /([(div)])/g / [] );\n      ( []/*/*//**//*/*//([(div)])/g / [] );\n                        // FIXME: ObjectLiteral is \"a literal\"\n      const x = {}      /(div)/g.exec(c).map(d);\n\n                        // FIXME: Function/ClassExpression is \"an expression\"\n      const y = function ƒ () {}\n                        /(div)/g.exec(c).map(d);\n\n                        // Keyword always regexp (regardless of ASI)\n      return await/*/\\*//(regexp)/g.exec(c).map(d);\n\n      // Matt Austin's\n      Function(\"arg=`\", \"/*body`){});({x: this/**/\");\n      (function(arg=`/*``*/){/*body`){});({x: this/**/})\n    }\n\n    Strings: {\n      '@@'            // FIXME: Not a fault\n\n      '\\\n      a\\a'            // quote›‹punctuator, comment\n\n      \"\\\n      \\\\n\\\\b\"/**/     // quote›‹comment, comment\n    }\n\n    Numerals: {\n      0, -0, 1, -1, +1.1, 0.1, 0.1e3\n      0b01, 0x0123456789abcdef\n      // 1_1\n      NaN, Infinity, -Infinity\n    }\n  }\n};\n\nexport const matcher = (ECMAScript =>\n  Matcher.define(\n    // Matcher generator for this matcher instance\n    entity =>\n      Matcher.join(\n        entity(ECMAScript.Break()),\n        entity(ECMAScript.Whitespace()),\n        entity(ECMAScript.Escape()),\n        entity(ECMAScript.Comment()),\n        entity(ECMAScript.StringLiteral()),\n        entity(ECMAScript.TemplateLiteral()),\n        entity(ECMAScript.Opener()),\n        entity(ECMAScript.Closer()),\n        entity(ECMAScript.Solidus()),\n        entity(ECMAScript.Operator()),\n        entity(ECMAScript.Keyword()),\n        entity(ECMAScript.Number()),\n        entity(ECMAScript.Identifier()),\n\n        // Defines how to address non-entity character(s):\n        entity(\n          ECMAScript.Fallthrough({\n            type: 'fault',\n            flatten: true,\n          }),\n        ),\n      ),\n    // RegExp flags for this matcher instance\n    'gu',\n    // Property descriptors for this matcher instance\n    {\n      goal: {value: ECMAScriptGoal, enumerable: true, writable: false},\n    },\n  ))({\n  Fallthrough: ({fallthrough = '.', type, flatten} = {}) =>\n    Matcher.define(\n      (typeof fallthrough === 'string' || (fallthrough = '.'), type && typeof type === 'string')\n        ? entity => Matcher.sequence`(\n            ${fallthrough}\n            ${entity((text, entity, match, state) => {\n              capture(\n                type !== 'fault'\n                  ? type || state.context.goal.type || 'sequence'\n                  : state.context.goal !== ECMAScriptGoal\n                  ? state.context.goal.type || 'sequence'\n                  : fault(text, state),\n                match,\n                text,\n              );\n              typeof flatten === 'boolean' && (match.flatten = flatten);\n            })}\n          )`\n        : entity => `${fallthrough}`,\n    ),\n  Break: ({lf = true, crlf = false} = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${Matcher.join(lf && '\\\\n', crlf && '\\\\r\\\\n')}\n        ${entity((text, entity, match, state) => {\n          // const group = state.context.group;\n          match.format = 'whitespace';\n          capture(\n            state.context.group !== undefined && state.context.group.closer === '\\n'\n              ? close(text, state) || 'closer'\n              : 'break',\n            match,\n            text,\n          );\n          match.flatten = false;\n        })}\n      )`,\n    ),\n  Whitespace: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\s+\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          capture((match.flatten = state.lineOffset !== match.index) ? 'whitespace' : 'inset', match, text);\n        })}\n      )`,\n    ),\n  Escape: ({\n    ECMAScriptUnicodeIDContinue = RegExp(\n      Matcher.sequence`[${UnicodeIDContinue}]+`,\n      UnicodeIDContinue.includes('\\\\p{') ? 'u' : '',\n    ),\n  } = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\\\u[${HexDigit}][${HexDigit}][${HexDigit}][${HexDigit}]\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'escape';\n          capture(\n            state.context.goal.type ||\n              (state.context.goal === ECMAScriptGoal &&\n              state.lastToken != null &&\n              state.lastToken.type === 'identifier' &&\n              ECMAScriptUnicodeIDContinue.test(String.fromCodePoint(parseInt(text.slice(2), 16)))\n                ? ((match.flatten = true), 'identifier')\n                : 'escape'),\n            match,\n            text,\n          );\n        })}\n      )|(\n        \\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\c[${ControlLetter}]\n        |\\\\x[${HexDigit}][${HexDigit}]\n        |\\\\u\\{[${HexDigit}]*\\}\n        |\\\\[^]\n        ${entity((text, entity, match, state) => {\n          capture(state.context.goal.type || 'escape', match, (match.capture[keywords[text]] = text));\n        })}\n      )`,\n    ),\n  Comment: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\/\\/|\\/\\*\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // Safely fast skip to end of comment\n                  (forward(text === '//' ? '\\n' : '*/', match, state),\n                  // No need to track delimiter\n                  (match.punctuator = CommentGoal.type),\n                  'opener')\n              : state.context.goal !== CommentGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? CommentGoal.type\n              : close(text, state) || (match.punctuator = CommentGoal.type),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  StringLiteral: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \"|'\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // TODO: Investigate why regexp forward is slow\n                  // (void forward(text === '\"' ? /(?:[^\"\\\\\\n]+?(?=\\\\.|\")|\\\\.)*?\"/g : /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?'/g, match, state)) ||\n                  ((match.punctuator = StringGoal.type), 'opener')\n              : state.context.goal !== StringGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? StringGoal.type\n              : ((match.flatten = false), close(text, state) || ((match.punctuator = StringGoal.type), 'closer')),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  TemplateLiteral: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${'`'}\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'opener')\n              : state.context.goal !== TemplateLiteralGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? TemplateLiteralGoal.type\n              : close(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'closer'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Opener: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\$\\{|\\{|\\(|\\[\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal.punctuators !== undefined && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.goal.openers &&\n                state.context.goal.openers[text] === true &&\n                (text !== '[' || state.context.goal !== RegExpGoal || state.context.group.opener !== '[')\n              ? open(text, state) || 'opener'\n              : state.context.goal.type || 'sequence',\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Closer: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\}|\\)|\\]\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.goal.closers && state.context.goal.closers[text] === true\n              ? close(text, state) || 'closer'\n              : state.context.goal.type || 'sequence',\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Solidus: () =>\n    // TODO: Refine the necessary criteria for RegExp vs Div\n    // SEE: https://github.com/sweet-js/sweet-core/wiki/design\n    // SEE: https://inimino.org/~inimino/blog/javascript_semicolons\n    // SEE: https://github.com/guybedford/es-module-shims/blob/master/src/lexer.js\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\*\\/|\\/=|\\/\n        ${entity((text, entity, match, state) => {\n          let previousAtom;\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === CommentGoal\n              ? (state.context.group.closer === text && close(text, state)) ||\n                  (match.punctuator = state.context.goal.type)\n              : state.context.goal === RegExpGoal && state.context.group.closer !== ']' // ie /…*/ or /…/\n              ? close('/', state) || ((match.punctuator = state.context.goal.type), 'closer')\n              : state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : text[0] === '*'\n              ? fault(text, state)\n              : // : !(previousAtom = state.lastAtom) ||\n              //   (previousAtom.type === 'operator'\n              //     ? previousAtom.text !== '++' && previousAtom.text !== '--'\n              //     : previousAtom.type === 'closer'\n              //     ? previousAtom.text === '}'\n              //     : previousAtom.type === 'opener' || previousAtom.type === 'keyword')\n              state.lastAtom === undefined ||\n                (state.lastAtom.type === 'operator'\n                  ? state.lastAtom.text !== '++' && state.lastAtom.text !== '--'\n                  : state.lastAtom.type === 'closer'\n                  ? state.lastAtom.text === '}'\n                  : state.lastAtom.type === 'opener' || state.lastAtom.type === 'keyword')\n              ? open(text, state) || ((match.punctuator = 'pattern'), 'opener')\n              : (match.punctuator = 'operator'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Operator: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ,|;|\\.\\.\\.|\\.|:|\\?|=>\n        |\\+\\+|--\n        |\\+=|-=|\\*\\*=|\\*=\n        |&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~\n        |<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>\n        |!==|!=|!|===|==|=\n        |\\+|-|\\*\\*|\\*\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? 'operator'\n              : state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'punctuation')\n              : state.context.goal.type || 'sequence',\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Keyword: () =>\n    // TODO: Handle contextual cases:\n    //  - { get() set() } as Identifiers\n    Matcher.define(\n      entity => Matcher.sequence`\\b(\n        ${Matcher.join(...keywords)}\n        ${entity((text, entity, match, state) => {\n          // let previousAtom, keywordSymbol;\n          match.format = 'identifier';\n          capture(\n            (match.flatten = state.context.goal !== ECMAScriptGoal)\n              ? state.context.goal.type || 'sequence'\n              : // : ((keywordSymbol = keywords[text]), (previousAtom = state.lastAtom)) && previousAtom.text === '.'\n              state.lastAtom !== undefined && state.lastAtom.text === '.'\n              ? 'identifier'\n              : 'keyword',\n            match,\n            text,\n          );\n          // keywordSymbol &&\n          //   ((context.keywords = (context.keywords || 0) + 1),\n          //   (context[`${(match.capture[keywordSymbol] = text)}-keyword-index`] = match.index));\n        })}\n      )\\b(?=[^\\s$_:]|\\s+[^:]|$)`,\n    ),\n  Identifier: ({RegExpFlags = /^[gimsuy]+$/} = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        [${UnicodeIDStart}][${UnicodeIDContinue}]*\n        ${entity((text, entity, match, state) => {\n          // let previousToken;\n          match.format = 'identifier';\n          capture(\n            state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : // : (previousToken = state.lastToken) && previousToken.punctuator === 'pattern' && RegExpFlags.test(text)\n              state.lastToken !== undefined && state.lastToken.punctuator === 'pattern' && RegExpFlags.test(text)\n              ? ((match.flatten = true), (match.punctuator = RegExpGoal.type), 'closer')\n              : ((match.flatten = true), 'identifier'),\n            match,\n            text,\n          );\n        })}\n      )`,\n      `${UnicodeIDStart}${UnicodeIDContinue}`.includes('\\\\p{') ? 'u' : '',\n    ),\n  Number: ({\n    NumericSeparator,\n    Digits = NumericSeparator\n      ? Digit => Matcher.sequence`[${Digit}][${Digit}${Matcher.escape(NumericSeparator)}]*`\n      : Digit => Matcher.sequence`[${Digit}]+`,\n    DecimalDigits = Digits(DecimalDigit),\n    HexDigits = Digits(HexDigit),\n    BinaryDigits = Digits(BinaryDigit),\n  } = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`\\b(\n        ${DecimalDigits}\\.${DecimalDigits}[eE]${DecimalDigits}\n        |\\.${DecimalDigits}[eE]${DecimalDigits}\n        |0[xX]${HexDigits}\n        |0[bB]${BinaryDigits}\n        |${DecimalDigits}\\.${DecimalDigits}\n        |\\.${DecimalDigits}\n        |${DecimalDigits}\n        ${entity((text, entity, match, state) => {\n          match.format = 'number';\n          capture(state.context.goal.type || 'number', match, text);\n        })}\n      )\\b`,\n    ),\n});\n","﻿/// <reference path=\"./types.d.ts\" />\n\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\nexport const {\n  createTokenFromMatch,\n  createMatcherInstance,\n  createString,\n  createMatcherTokenizer,\n  createMatcherMode,\n} = (() => {\n  const {\n    RegExp,\n    Object,\n    Object: {assign, create, freeze, defineProperty, defineProperties, getOwnPropertyNames, setPrototypeOf},\n    String,\n  } = globalThis;\n\n  /** @typedef {RegExpConstructor['prototype']} Matcher */\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  const createMatcherInstance = (matcher, state) =>\n    defineProperty(\n      ((state || (state = create(null))).matcher =\n        (matcher && matcher instanceof RegExp && createMatcherClone(matcher)) || RegExp(matcher, 'g')),\n      'state',\n      {value: state},\n    );\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @type {(matcher: T & V, instance?: U) => U & V}\n   * @param {T} param0\n   * @param {U} [param1]\n   * @returns {U}\n   */\n  const createMatcherClone = ({constructor: {prototype}, source, flags, lastIndex, ...properties}, instance) => (\n    (instance = assign(instance || RegExp(source, flags || 'g'), properties)),\n    prototype && setPrototypeOf(instance, prototype),\n    instance\n  );\n\n  /** @type {(value: any) => string} */\n  const createString = String;\n\n  /**\n   * @type {<M extends MatchArray, T extends {}>(init: MatchResult<M>) => Token<T>}\n   * @param {MatchResult<MatchArray>} param0\n   */\n  const createTokenFromMatch = ({0: text, identity, capture, index}) => ({\n    type: (identity && (identity.description || identity)) || 'text',\n    text,\n    lineBreaks: countLineBreaks(text),\n    lineInset: (capture && capture.inset) || '',\n    offset: index,\n    capture,\n  });\n\n  const tokenizerProperties = Object.getOwnPropertyDescriptors(\n    freeze(\n      class Tokenizer {\n        /** @template {Matcher} T @template {{}} U */\n        *tokenize() {\n          /** @type {Token<U>} */\n          // let next;\n          /** @type {{createToken: typeof createTokenFromMatch, initializeState: <V>(state: V) => V & TokenizerState<T, U>}} */\n          const createToken = (this && this.createToken) || createTokenFromMatch;\n          /** @type {string} */\n          const string = createString(Object.keys({[arguments[0]]: 1})[0]);\n          /** @type {TokenMatcher<U>} */\n          const matcher = createMatcherInstance(this.matcher, assign(arguments[1] || {}, {sourceText: string}));\n          /** @type {TokenizerState<T, U>} */\n          const state = matcher.state;\n          this.initializeState && this.initializeState(state);\n          matcher.exec = matcher.exec;\n\n          for (\n            let match, capturedToken, retainedToken, index = 0;\n            // BAIL on first failed/empty match\n            ((match = matcher.exec(string)) !== null && match[0] !== '') ||\n            //   BUT first yield a nextToken if present\n            (retainedToken !== undefined && (yield retainedToken), (state.nextToken = undefined));\n\n          ) {\n            if ((capturedToken = createToken(match, state)) === undefined) continue;\n\n            // HOLD back one grace token\n            //   until createToken(…) !== undefined (ie new token)\n            //   set the incremental token index for this token\n            //   and keep it referenced directly on the state\n            (state.nextToken = capturedToken).index = index++;\n\n            //   THEN yield a previously held token\n            if (retainedToken !== undefined) yield retainedToken;\n\n            //   THEN finally clear the nextToken reference\n            retainedToken = capturedToken;\n            state.nextToken = undefined;\n          }\n\n          this.finalizeState && this.finalizeState(state);\n\n          // console.log({...state});\n        }\n      }.prototype,\n    ),\n  );\n\n  /**\n   * @type { {<T extends Matcher, U extends {} = {}>(sourceText: string, initialState?: Partial<TokenizerState<undefined, U>): IterableIterator<Token<U>>} }\n   */\n  const createMatcherTokenizer = instance => defineProperties(instance, tokenizerProperties);\n\n  /**\n   * @param {import('/modules/matcher/matcher.js').Matcher} matcher\n   * @param {any} [options]\n   */\n  const createMatcherMode = (matcher, options) => {\n    const tokenizer = createMatcherTokenizer({\n      createToken: createTokenFromMatch,\n      /** @type {(state: {}) =>  void} */\n      initializeState: undefined,\n      finalizeState: undefined,\n      matcher: freeze(createMatcherInstance(matcher)),\n    });\n\n    const mode = {syntax: 'matcher', tokenizer};\n    options &&\n      ({\n        syntax: mode.syntax = mode.syntax,\n        aliases: mode.aliases,\n        preregister: mode.preregister,\n        createToken: tokenizer.createToken = tokenizer.createToken,\n        initializeState: tokenizer.initializeState,\n        finalizeState: tokenizer.finalizeState,\n        ...mode.overrides\n      } = options);\n\n    freeze(tokenizer);\n\n    return mode;\n  };\n\n  return {createTokenFromMatch, createMatcherInstance, createString, createMatcherTokenizer, createMatcherMode};\n})();\n","﻿//@ts-check\n\nimport {matcher} from './matcher.js';\nimport {initializeState, finalizeState, createToken} from './helpers.js';\nimport {createMatcherMode} from '../matcher/helpers.js';\n\nexport const mode = createMatcherMode(matcher, {\n  syntax: 'ecmascript',\n  aliases: ['es', 'js', 'javascript'],\n\n  preregister: parser => {\n    parser.unregister('es');\n    parser.unregister('ecmascript');\n  },\n\n  initializeState,\n  finalizeState,\n  createToken,\n});\n","﻿import {mode} from './mode.js';\n\nexport const {syntax, tokenizer} = mode;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// import {tokenizer} from '../../../markup/dist/tokenizer.es.js';\nimport {tokenizer} from '../../../markup/experimental/es/standalone.js';\n\n/** @param {string} text @returns {TokenizerTokens} */\nexport const tokenizeSourceText = text => tokenizer.tokenize(text, {console});\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from '../../../markup/experimental/matcher/matcher.js';\n\nexport const {esx, Rewriter} = (Rewriter => {\n\tconst {escape, sequence, join} = Matcher;\n\tconst {freeze} = Object;\n\tconst {raw} = String;\n\n\t/**\n\t * @param {TemplateStringsArray} strings\n\t * @param {... string} values\n\t */\n\tconst regex = (strings, ...values) => RegExp(raw(strings, ...values), 'g');\n\n\tconst word = word => sequence`\\b${escape(word)}\\b`;\n\n\tconst MARK = '/*/';\n\tconst MARKS = '/*@*/';\n\tconst STARTS = '/*‹*/';\n\tconst ENDS = '/*›*/';\n\tconst LITERAL = '`([^`]*)`';\n\n\tconst esx = {};\n\n\tesx.input = {\n\t\tMarkedExport: Rewriter(\n\t\t\tregex`${escape(MARK)}export${escape(MARK)}[\\s\\n]*(${'const let var async function class'\n\t\t\t\t.split(' ')\n\t\t\t\t.map(word)\n\t\t\t\t.join('|')})`,\n\t\t\traw` ${MARKS}export $1`,\n\t\t),\n\t\tModuleImport: Rewriter(regex`\\bmodule\\.import\\b${LITERAL}`, raw` ${STARTS} import $1 ${ENDS} `),\n\t\tModuleExport: Rewriter(regex`\\bmodule\\.export\\b${LITERAL}`, raw` ${STARTS} export $1 ${ENDS} `),\n\t\tModuleAwait: Rewriter(regex`\\bmodule\\.await\\b[\\s\\n]*\\(`, raw`module.await = (`),\n\t\tModuleExportDefault: Rewriter(regex`\\bmodule\\.export\\.default\\b[\\s\\n]*=`, ` ${STARTS} export default ${ENDS} `),\n\t};\n\t(esx.output = {\n\t\tUnmarkedExport: Rewriter(regex` ${escape(MARKS)}export `, raw`${MARK}export${MARK} `),\n\t\tWrappedExportDefault: Rewriter(regex` ${escape(STARTS)} export default ${escape(ENDS)} `, raw`exports.default =`),\n\t\tUntaggedExpression: Rewriter(regex` ${escape(STARTS)}([^]*?)${escape(ENDS)} `, raw`${MARK}$1${MARK}`),\n\t}),\n\t\t(esx.rewriteEvaluatorInput = Rewriter.create(\n\t\t\tesx.input.MarkedExport,\n\t\t\tesx.input.ModuleImport,\n\t\t\tesx.input.ModuleExport,\n\t\t\tesx.input.ModuleAwait,\n\t\t\tesx.input.ModuleExportDefault,\n\t\t));\n\tesx.rewriteEvaluatorOutput = Rewriter.create(\n\t\tesx.output.UnmarkedExport,\n\t\tesx.output.WrappedExportDefault,\n\t\tesx.output.UntaggedExpression,\n\t);\n\n\treturn {esx, Rewriter};\n})(\n\t(() => {\n\t\tconst {replace: ReplaceSymbol} = Symbol;\n\t\tconst {freeze, defineProperties} = Object;\n\n\t\t/**\n\t\t * @template {RegExp} T\n\t\t * @template {string|((...args) => string)} U\n\t\t * @template {PropertyDescriptorMap} V\n\t\t * @param {T} expression\n\t\t * @param {U} rewrite\n\t\t * @param {V} [propertyDescriptors]\n\t\t * @returns {T & {readonly rewrite: U} & DescribedType<V>}\n\t\t */\n\t\tconst Rewriter = (expression, rewrite, propertyDescriptors) =>\n\t\t\tdefineProperties(expression, {\n\t\t\t\t...propertyDescriptors,\n\t\t\t\t...Rewriter.descriptors,\n\t\t\t\trewrite: {value: rewrite, writable: false, enumerable: true},\n\t\t\t});\n\n\t\tRewriter.reducer = (string, rewriter) => rewriter[ReplaceSymbol](string);\n\n\t\t/** @type {(... RegExp) => (source: string) => string} */\n\t\tRewriter.create = (...rewriters) => string => rewriters.reduce(Rewriter.reducer, string);\n\n\t\tRewriter.descriptors = Object.getOwnPropertyDescriptors(\n\t\t\tclass Rewriter extends RegExp {\n\t\t\t\t[ReplaceSymbol](string, replacement) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\treturn replacement == null && (({rewrite: replacement} = this), replacement) == null\n\t\t\t\t\t\t? string\n\t\t\t\t\t\t: super[ReplaceSymbol](string, replacement);\n\t\t\t\t}\n\t\t\t}.prototype,\n\t\t);\n\n\t\treturn freeze(Rewriter);\n\t})(),\n);\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// import {tokenizer} from '../../../markup/dist/tokenizer.es.js';\nimport {Collator} from './collator.js';\nimport {ModuleSource, ModuleBinding} from './records.js';\nimport {Node} from './tree.js';\nimport {tokenizeSourceText} from './tokenizer.js';\nimport {esx} from './rewriters.js';\nimport * as symbols from './symbols.js';\n\nexport const {parseModuleText, parseDynamicModuleEvaluator} = (() => {\n\tconst {\n\t\tDEBUG_COMPILER,\n\t\tDEBUG_CONSTRUCTS,\n\t\tDEBUG_NODES,\n\t\tINTERNAL_CONSOLE,\n\t\tFORCE_INCOMPLETE_CONSTRUCTS = true,\n\t} = getFlags();\n\n\t/** @type {Console} */\n\tconst console =\n\t\t(globalThis.console && (INTERNAL_CONSOLE !== false && globalThis.console['internal'])) || globalThis.console;\n\n\tconst {log, warn, group, groupCollapsed, groupEnd, table} = console;\n\n\t/** @param {string} sourceText @param {ModuleSource} [sourceRecord] */\n\tconst compileModule = (sourceText, sourceRecord) => {\n\t\tsourceRecord || (sourceRecord = new ModuleSource({sourceText: sourceText}));\n\n\t\t/** @type {ModuleSource['fragments']} */\n\t\tconst fragments = (sourceRecord.fragments = []);\n\t\t/** @type {ModuleSource['bindings']} */\n\t\tconst bindings = (sourceRecord.bindings = []);\n\n\t\tconst nonBindings = [];\n\t\tconst tokens = tokenizeSourceText(sourceText);\n\t\tconst collator = new Collator('ECMAScript');\n\n\t\tcollator.log = log;\n\n\t\tfor (const token of tokens) {\n\t\t\tif (!token || !token.text) continue;\n\n\t\t\tconst node = collator.collate(token, tokens) || undefined;\n\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\n\t\t\tif (collator.queuedToken !== undefined) {\n\t\t\t\tconst node = collator.collate(collator.queuedToken, tokens) || undefined;\n\t\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\t\t\t}\n\t\t}\n\n\t\tconst {\n\t\t\trootNode,\n\t\t\trootNode: {constructs},\n\t\t} = collator;\n\n\t\tsourceRecord.rootNode = rootNode;\n\t\tsourceRecord.constructs = constructs;\n\t\tsourceRecord.compiledText = rootNode.text;\n\n\t\tif (constructs.length) {\n\t\t\tlet bindingRecord;\n\t\t\tconst constructList = [];\n\n\t\t\tfor (const construct of constructs) {\n\t\t\t\tconstructList.push(construct.type);\n\t\t\t\tbindingRecord = createBindingRecordFromConstruct(construct, sourceRecord);\n\t\t\t\tif (bindingRecord === undefined) {\n\t\t\t\t\tnonBindings.push(construct);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbindings.push(bindingRecord);\n\t\t\t}\n\n\t\t\tif (DEBUG_CONSTRUCTS) {\n\t\t\t\tbindings.length && table(bindings);\n\t\t\t\tnonBindings.length && table(nonBindings);\n\t\t\t\t// console.log(constructList.map(v => `- \\`${v}\\``).join('\\n'));\n\t\t\t}\n\t\t}\n\n\t\treturn sourceRecord;\n\t};\n\n\t/**\n\t * @param {ConstructNode} construct\n\t * @param {SourceRecord} sourceRecord\n\t * @returns {BindingRecord}\n\t */\n\tconst createBindingRecordFromConstruct = (construct, sourceRecord) => {\n\t\tconst record = {};\n\n\t\tconst bindingIntent = (record.bindingIntent = construct.type.startsWith('import')\n\t\t\t? 'import'\n\t\t\t: construct.type.startsWith('export')\n\t\t\t? 'export'\n\t\t\t: undefined);\n\n\t\trecord.declarationText =\n\t\t\tbindingIntent === construct.type || bindingIntent === undefined || construct.type === 'export default'\n\t\t\t\t? construct.type\n\t\t\t\t: construct.type.slice(bindingIntent.length + 1);\n\n\t\trecord.bindingDeclaration = ModuleBinding.DeclarationType[record.declarationText];\n\n\t\tif (record.bindingDeclaration !== undefined) {\n\t\t\treturn createDeclarationRecord(construct, record, sourceRecord);\n\t\t}\n\t};\n\n\t// * @param {Node} node\n\t/**\n\t * @param {ConstructNode} construct\n\t * @param {*} record\n\t * @param {SourceRecord} sourceRecord\n\t * @returns {BindingRecord}\n\t */\n\tconst createDeclarationRecord = (construct, record, sourceRecord) => {\n\t\t/** @type {Node} */\n\t\tlet node = construct[symbols.NextTokenNode];\n\t\tconst bindingTarget = construct[symbols.BindingClause] != null ? construct[symbols.BindingClause].text : undefined;\n\n\t\tswitch (record.bindingDeclaration) {\n\t\t\tcase 'FunctionDeclaration':\n\t\t\tcase 'AsyncFunctionDeclaration':\n\t\t\tcase 'GeneratorFunctionDeclaration':\n\t\t\tcase 'AsyncGeneratorFunctionDeclaration':\n\t\t\tcase 'ClassDeclaration':\n\t\t\t\tif (node.type !== 'identifier') {\n\t\t\t\t\tsourceRecord.error(`ConstructError: ${record.bindingDeclaration} must have a valid identifier`, {\n\t\t\t\t\t\tlineNumber: construct.lastToken.lineNumber,\n\t\t\t\t\t\tcolumnNumber: construct.lastToken.columnNumber,\n\t\t\t\t\t});\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t}\n\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\trecord.internalType = record.bindingDeclaration === 'ClassDeclaration' ? 'class' : 'function';\n\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\trecord.exportedIdentifier = record.internalIdentifier;\n\t\t\t\t\trecord.exportedType = 'readonly';\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'VariableDeclaration':\n\t\t\t\trecord.internalType = record.declarationText;\n\t\t\t\tif (node.type === '{…}') {\n\t\t\t\t\t// TODO: Destructure bindings\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\t\trecord.exportedIdentifier = record.internalIdentifier;\n\t\t\t\t\t\trecord.exportedType = record.internalType === 'const' ? 'constant' : 'readonly';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'ExportDefaultAssignmentExpression':\n\t\t\t\trecord.exportedType = 'constant';\n\t\t\t\trecord.internalType = 'void';\n\t\t\t\trecord.exportedIdentifier = 'default';\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'ImportDeclaration':\n\t\t\t\tif (node.text === '*') {\n\t\t\t\t\trecord.importedIdentifier = '*';\n\t\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\t} else if (node.type === 'string') {\n\t\t\t\t\trecord.externalModuleSpecifier = node.text.slice(1, -1);\n\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\trecord.importedIdentifier = 'default';\n\t\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\t\t// TODO: import default, {} // if (trailer.nextToken.text !== ',')\n\t\t\t\t} else if (node.type === '{…}') {\n\t\t\t\t\t// TODO: import {…}\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'ExportDeclaration':\n\t\t\t\tif (node.text === '*') {\n\t\t\t\t\trecord.exportedIdentifier = bindingTarget;\n\t\t\t\t} else if (node.type === '{…}') {\n\t\t\t\t\t// TODO: export {…}\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t}\n\t\tlog(record.bindingDeclaration, construct, node);\n\t};\n\n\t/** @param {BindingRecord} record */\n\t/** @returns {BindingRecord} */\n\tconst createBindingRecord = record => new ModuleBinding(record);\n\n\t/** @param {string} sourceText @param {ModuleSource} [sourceRecord] */\n\tconst parseModuleText = (sourceText, sourceRecord) => {\n\t\tsourceRecord\n\t\t\t? (sourceRecord.sourceText = sourceText)\n\t\t\t: (sourceRecord = new ModuleSource({sourceText: sourceText, sourceType: 'module-text'}));\n\t\treturn compileModule(sourceText, sourceRecord);\n\t};\n\n\tconst SourceEvaluatorText = /^[\\s\\n]*module[\\s\\n]*=>[\\s\\n]*void[\\s\\n]*\\([\\s\\n]*\\([\\s\\n]*\\)[\\s\\n]*=>[\\s\\n]*\\{[ \\t]*?\\n?([^]*[\\s\\n]*?)\\s*\\}[\\s\\n]*\\)[\\s\\n]*;?[\\s\\n]*$/;\n\n\t/** @param {Function|string} sourceEvaluator @param {ModuleSource} [sourceRecord] */\n\tconst parseDynamicModuleEvaluator = (sourceEvaluator, sourceRecord) => {\n\t\tconst sourceType = 'evaluator';\n\n\t\t//@ts-ignore\n\t\tconst [, sourceEvaluatorText] = SourceEvaluatorText.exec(sourceEvaluator);\n\n\t\tconst sourceText = esx.rewriteEvaluatorInput(sourceEvaluatorText);\n\n\t\tsourceRecord\n\t\t\t? (sourceRecord.sourceType = sourceType)\n\t\t\t: (sourceRecord = new ModuleSource({sourceEvaluatorText, sourceText, sourceType}));\n\t\tparseModuleText(sourceText, sourceRecord);\n\n\t\tsourceRecord.compiledEvaluatorText = esx.rewriteEvaluatorOutput(sourceRecord.compiledText); // debugger;\n\n\t\tDEBUG_COMPILER\n\t\t\t? typeof process === 'object'\n\t\t\t\t? log('%o\\n\\n%o', sourceRecord, sourceText)\n\t\t\t\t: log(\n\t\t\t\t\t\t'%O\\n%c%ssourceEvaluatorText: %s\\nsourceText: %s\\ncompiledText: %s\\ncompiledEvaluatorText: %s',\n\t\t\t\t\t\tsourceRecord,\n\t\t\t\t\t\tsourceEvaluatorText,\n\t\t\t\t\t\tsourceText,\n\t\t\t\t\t\tsourceRecord.compiledText,\n\t\t\t\t\t\tsourceRecord.compiledEvaluatorText,\n\t\t\t\t  )\n\t\t\t: DEBUG_CONSTRUCTS && log('%O\\n%c%s', sourceRecord, 'whitespace: pre; font:monospace;', sourceText);\n\t\treturn sourceRecord;\n\t};\n\n\treturn {parseModuleText, parseDynamicModuleEvaluator};\n\n\t/** @param {{[name: string]: boolean}} param0 */\n\tfunction getFlags({DEBUG_COMPILER, DEBUG_CONSTRUCTS, DEBUG_NODES} = {}) {\n\t\tif (typeof location === 'object' && 'search' in location) {\n\t\t\tDEBUG_COMPILER = /\\bcompiler\\b/.test(location.search);\n\t\t\tDEBUG_NODES = /\\bnodes\\b/.test(location.search);\n\t\t\tDEBUG_CONSTRUCTS = /\\bconstructs\\b/.test(location.search);\n\t\t} else if (typeof process === 'object' && process.argv) {\n\t\t\tDEBUG_COMPILER = process.argv.includes('--compiler');\n\t\t\tDEBUG_NODES = process.argv.includes('--nodes');\n\t\t\tDEBUG_CONSTRUCTS = process.argv.includes('--constructs');\n\t\t}\n\t\treturn {DEBUG_COMPILER, DEBUG_CONSTRUCTS, DEBUG_NODES};\n\t}\n})();\n","import {Exports, Mappings, BindingDeclarations} from './expressions.js';\nimport {freeze} from './helpers.js';\nimport {parseDynamicModuleEvaluator} from './compiler/compiler.js';\n\n/** @type {(init: {source: Function | string, url: string}) => Evaluator} */\nexport const ModuleEvaluator = (() => {\n\tconst evaluate = code => (1, eval)(code);\n\n\tconst rewrite = source =>\n\t\t// TODO: Handle shadows and redudant exports!\n\t\t`${source}`.replace(Exports, (match, guard, mappings) => {\n\t\t\tconst bindings = [];\n\t\t\twhile ((match = Mappings.exec(mappings))) {\n\t\t\t\tlet {1: identifier, 2: binding} = match;\n\t\t\t\tbindings.push(`${binding || '()'} => ${identifier}`);\n\t\t\t}\n\t\t\treturn (bindings.length && `exports(${bindings.join(', ')})`) || '';\n\t\t});\n\n\treturn ({\n\t\tsource,\n\t\tsourceText = `${source}`,\n\t\turl: moduleURL,\n\t\tcompiledText = rewrite(\n\t\t\ttypeof source === 'function' ? parseDynamicModuleEvaluator(source).compiledEvaluatorText : sourceText,\n\t\t),\n\t}) => {\n\t\tlet match;\n\n\t\t/** @type {Evaluator} */\n\t\tconst evaluator = evaluate(\n\t\t\t`(function* (module, exports) { with(module.scope) (function () { \"use strict\";\\n${compiledText}${\n\t\t\t\tmoduleURL ? `//# sourceURL=${`${new URL(moduleURL, 'file:///')}`.replace(/^file:/i, 'virtual:')}\\n` : ''\n\t\t\t}})();})`,\n\t\t);\n\t\tevaluator.sourceText = sourceText;\n\t\tevaluator.compiledText = compiledText;\n\t\tevaluator.moduleURL = moduleURL;\n\t\tconst links = (evaluator.links = {});\n\n\t\twhile ((match = BindingDeclarations.exec(compiledText))) {\n\t\t\tconst [, intent, bindings, binding, , specifier] = match;\n\t\t\tconst mappings = (\n\t\t\t\t(binding && ((binding.startsWith('* ') && binding) || `default as ${binding}`)) ||\n\t\t\t\tbindings ||\n\t\t\t\t''\n\t\t\t).split(/ *, */g);\n\t\t\twhile ((match = Mappings.exec(mappings))) {\n\t\t\t\tconst [, identifier, binding = identifier] = match;\n\t\t\t\tfreeze((links[binding] = {intent, specifier, identifier, binding}));\n\t\t\t}\n\t\t}\n\n\t\tfreeze(links);\n\n\t\treturn evaluator;\n\t};\n})();\n\n/** @typedef {import('./types').modules.Module.Context} Context */\n/** @typedef {import('./types').modules.Module.Exports} Exports */\n/** @typedef {import('./types').modules.Module.Links} Links */\n/** @typedef {import('./types').modules.DynamicModule.Evaluator} Evaluator */\n","import {create, freeze, setPrototypeOf} from './helpers.js';\n\nexport function ModuleNamespace() {}\n{\n\tconst toPrimitive = setPrototypeOf(() => 'ModuleNamespace', null);\n\tconst toString = setPrototypeOf(() => 'class ModuleNamespace {}', null);\n\tconst {toJSON} = {\n\t\ttoJSON() {\n\t\t\treturn Object.getOwnPropertyNames(this);\n\t\t},\n\t};\n\tModuleNamespace.prototype = create(null, {\n\t\t[Symbol.toPrimitive]: {value: toPrimitive, enumerable: false},\n\t\t[Symbol.toStringTag]: {value: 'ModuleNamespace', enumerable: false},\n\t\ttoJSON: {value: toJSON, enumerable: false},\n\t});\n\tfreeze(setPrototypeOf(ModuleNamespace, create(null, {toString: {value: toString}})));\n}\n","import {ModuleNamespace} from './namespace.js';\nimport {Identifier, Specifier} from './expressions.js';\n\nimport {\n\tcreate,\n\tentries,\n\tfreeze,\n\tsetProperty,\n\tbindProperty,\n\tsetPrototypeOf,\n\tcopyProperty,\n\tResolvedPromise,\n\tReflect,\n} from './helpers.js';\n\nexport class ModuleStrapper {\n\t/** @type {import('./namespaces').ModuleNamespaces} */\n\tget map() {\n\t\tif (this !== this.constructor.prototype) return setProperty(this, 'map', create(null));\n\t}\n\n\tthrow(error) {\n\t\tthrow error;\n\t}\n\n\t// async createLinkedBinding(namespaces, linkURL, linkedBinding, bindingRecords, bindingIdentifier) {\n\tasync createLinkedImportBinding(bindingStatus) {\n\t\tlet exportedNamespace;\n\t\tconst {\n\t\t\tnamespaces,\n\t\t\tlinkURL,\n\t\t\tlinkingRecord,\n\t\t\tmoduleURL,\n\t\t\tbindingRecords,\n\t\t\tbindingIdentifier,\n\t\t\tmoduleContext,\n\t\t\ttraceId,\n\t\t\tlinkedNamespace = (bindingStatus.linkedNamespace = namespaces[linkURL] || namespaces.import(linkURL)),\n\t\t} = bindingStatus;\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t\tlinkedNamespace ||\n\t\t\tthis.throw(\n\t\t\t\tnew ReferenceError(\n\t\t\t\t\t`Cannot create linked imported binding against ‹${linkURL}› prior to the creation of its namespace record`,\n\t\t\t\t),\n\t\t\t);\n\t\tbindingIdentifier ||\n\t\t\tthis.throw(new ReferenceError(`Cannot create linked import binding without a binding identifier`));\n\n\t\t// Make a TBD binding\n\t\tbindProperty(bindingRecords, bindingIdentifier, undefined, true, true);\n\n\t\t// Make the actual binding\n\t\tlinkingRecord.identifier !== '*'\n\t\t\t? copyProperty(\n\t\t\t\t\tbindingRecords,\n\t\t\t\t\t(exportedNamespace =\n\t\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t\t\tlinkingRecord.identifier,\n\t\t\t\t\tbindingIdentifier,\n\t\t\t  )\n\t\t\t: ((exportedNamespace =\n\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t  copyProperty(bindingRecords, namespaces, linkURL, bindingIdentifier));\n\t\t// Update linked binding status\n\t\tbindingStatus.isLinked = true;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t}\n\tasync createLinkedExportBinding(bindingStatus) {\n\t\tlet exportedNamespace;\n\t\tconst {\n\t\t\tnamespaces,\n\t\t\tlinkURL,\n\t\t\tlinkingRecord,\n\t\t\tmoduleURL,\n\t\t\tbindingRecords,\n\t\t\tbindingIdentifier,\n\t\t\tmoduleContext,\n\t\t\ttraceId,\n\t\t\tlinkedNamespace = (bindingStatus.linkedNamespace = namespaces[linkURL] || namespaces.import(linkURL)),\n\t\t} = bindingStatus;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\n\t\tlinkedNamespace ||\n\t\t\tthis.throw(\n\t\t\t\tnew ReferenceError(\n\t\t\t\t\t`Cannot create linked export binding against ‹${linkURL}› prior to the creation of its namespace record`,\n\t\t\t\t),\n\t\t\t);\n\n\t\t// Make a TBD binding\n\t\tbindProperty(moduleContext.namespace, bindingIdentifier, undefined, true, true);\n\n\t\t// Make the actual binding\n\t\tlinkingRecord.identifier !== '*'\n\t\t\t? ((exportedNamespace =\n\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t  copyProperty(moduleContext.namespace, exportedNamespace, linkingRecord.identifier, bindingIdentifier))\n\t\t\t: this.throw(\n\t\t\t\t\tnew TypeError(\n\t\t\t\t\t\t`Cannot create linked \"export * as\" binding against ‹${linkURL}› since it is not a valid binding type`,\n\t\t\t\t\t),\n\t\t\t  );\n\n\t\t// Update linked binding status\n\t\tbindingStatus.isLinked = true;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t}\n\n\tlink(module) {\n\t\tlet linkURL, bindingStatus;\n\t\tconst {namespaces, context: moduleContext, bindings: bindingRecords, links, url: moduleURL} = module;\n\n\t\tconst promises = [];\n\n\t\tfor (const [bindingIdentifier, linkingRecord] of entries(links)) {\n\t\t\tif (\n\t\t\t\t!(linkingRecord.intent === 'import' || linkingRecord.intent === 'export') ||\n\t\t\t\t!(linkURL = linkingRecord.url || (linkingRecord.specifier && this.resolve(linkingRecord.specifier, moduleURL)))\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tbindingStatus = {\n\t\t\t\tisLinked: false,\n\t\t\t\tnamespaces,\n\t\t\t\tlinkURL,\n\t\t\t\tlinkingRecord,\n\t\t\t\tmoduleURL,\n\t\t\t\tbindingRecords,\n\t\t\t\tbindingIdentifier,\n\t\t\t\tmoduleContext,\n\t\t\t\t// traceId: `${linkingRecord.intent} ${moduleURL}#${bindingIdentifier} ‹ ${linkURL}#${linkingRecord.identifier}`,\n\t\t\t};\n\n\t\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t\t\tpromises.push(\n\t\t\t\t(bindingStatus.promise = this[\n\t\t\t\t\tlinkingRecord.intent === 'import' ? 'createLinkedImportBinding' : 'createLinkedExportBinding'\n\t\t\t\t](bindingStatus)),\n\t\t\t);\n\t\t}\n\n\t\treturn promises.length ? Promise.all(promises).then(() => {}) : Promise.resolve();\n\t}\n\n\tinstantiate(module) {\n\t\tconst enumerable = false;\n\t\tconst namespace = new ModuleNamespace();\n\t\tconst {context, bindings, namespaces, url, scope} = module;\n\n\t\tcontext.export = (...exports) => void this.bind(namespace, ...exports);\n\n\t\tReflect.defineProperty(context.export, 'default', {\n\t\t\tset: value => void this.bind(namespace, {default: () => value}),\n\t\t});\n\n\t\tfreeze(context.export);\n\n\t\tsetProperty(bindings, 'module', context, false, true);\n\t\tsetProperty(context, 'namespace', namespace);\n\t\tsetProperty(context, 'scope', setPrototypeOf(bindings, scope || null), enumerable, false);\n\t\tsetProperty(context, 'meta', create(null), false, false);\n\t\tsetProperty(context.scope, 'meta', context.meta, false, false);\n\t\tsetProperty(context.meta, 'url', url);\n\n\t\t// TODO: To be used for top-level await\n\t\tlet awaits = void Reflect.defineProperty(context, 'await', {get: () => awaits, set: value => (awaits = value)});\n\n\t\tfreeze(context);\n\t\treturn setProperty(module, 'instance', {namespace, context});\n\t}\n\n\tasync evaluate(module) {\n\t\tconst {bindings, namespace, context} = await module.instantiate();\n\t\ttry {\n\t\t\t// TODO: Ensure single execution\n\t\t\tmodule.evaluator(context, context.export).next();\n\t\t\t!context.await || (await context.await);\n\t\t\treturn setProperty(module, 'namespace', namespace);\n\t\t} catch (exception) {\n\t\t\tconsole.warn(exception);\n\t\t\tsetProperty(module, 'exception', exception);\n\t\t}\n\t}\n\n\tasync import(url) {\n\t\tconst module = this.map[url];\n\t\treturn module.namespace || (await module.evaluate());\n\t}\n\n\tresolve(specifier, referrer) {\n\t\tspecifier = `${(specifier && specifier) || ''}`;\n\t\treferrer = `${(referrer && referrer) || ''}` || '';\n\t\tconst key = `[${referrer}][${specifier}]`;\n\t\tconst cache = this.resolve.cache || (this.resolve.cache = {});\n\t\tlet url = cache[key];\n\t\tif (url) return url.link;\n\t\tconst {schema, domain} = Specifier.parse(specifier);\n\t\tconst origin = (schema && `${schema}${domain || '//'}`) || `file:///`;\n\t\treferrer =\n\t\t\t(!referrer && origin) || (cache[`[${referrer}]`] || (cache[`[${referrer}]`] = new URL(referrer, origin))).href;\n\t\turl = cache[key] = new URL(specifier, referrer);\n\t\treturn (url.link = url.href.replace(/^file:\\/\\/\\//, ''));\n\t}\n\n\tbind(namespace, ...bindings) {\n\t\tfor (const binding of bindings) {\n\t\t\tconst type = typeof binding;\n\t\t\tif (type === 'function') {\n\t\t\t\tconst identifier = (Identifier.exec(binding) || '')[0];\n\t\t\t\tidentifier && bindProperty(namespace, identifier, binding, true);\n\t\t\t} else if (type === 'object') {\n\t\t\t\tfor (const identifier in binding) {\n\t\t\t\t\tidentifier === (Identifier.exec(identifier) || '')[0] &&\n\t\t\t\t\t\tbindProperty(namespace, identifier, binding[identifier], true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n","﻿//@ts-check\n\nexport const environment = (globalThis => {\n\tconst environment = {};\n\n\t/** @type {Set<string>} */\n\tconst warnings = new Set();\n\n\t/** @type {Globals} */\n\t//@ts-ignore\n\tenvironment.globalThis = globalThis;\n\n\tconst warning = message => {\n\t\twarnings.add(message);\n\t};\n\n\tif (environment.globalThis || warning('No valid globalThis object in scope')) {\n\t\tconst {globalThis, warnings} = environment;\n\n\t\tconst globalProperties = ['global', 'window', 'self'];\n\n\t\tfor (const globalProperty of globalProperties)\n\t\t\tglobalProperty in globalThis &&\n\t\t\t\tglobalThis[globalProperty] != null &&\n\t\t\t\ttypeof globalThis[globalProperty] === 'object' &&\n\t\t\t\t(globalThis[globalProperty] === globalThis[globalProperty][globalProperty]\n\t\t\t\t\t? (environment[globalProperty] = globalThis[globalProperty])\n\t\t\t\t\t: warning(`An invalid ${globalProperty} was found in scope`));\n\n\t\tif (\n\t\t\tglobalProperties.findIndex(property => property in environment) > -1 ||\n\t\t\twarning(`No valid ${globalProperties.join(', ')} object(s) in scope`)\n\t\t) {\n\t\t\tconst {global, window, self, process} = environment.globalThis;\n\n\t\t\tif (environment.global !== undefined) {\n\t\t\t\t/** @type {Environment['global']} */\n\t\t\t\tenvironment.global = global;\n\n\t\t\t\tprocess != null ||\n\t\t\t\t\ttypeof process.pid !== 'number' ||\n\t\t\t\t\t/** @type {Environment['process']} */\n\t\t\t\t\t(environment.process = process);\n\t\t\t}\n\t\t\tif (environment.self !== undefined) {\n\t\t\t\t/** @type {Environment['self']} */\n\t\t\t\tenvironment.self = self;\n\n\t\t\t\tif (environment.window !== undefined) {\n\t\t\t\t\t/** @type {Environment['window']} */\n\t\t\t\t\tenvironment.window = window;\n\t\t\t\t\tconst {document} = window;\n\t\t\t\t\tdocument != null && document.defaultView === window && (environment.document = document);\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof self.ServiceWorkerGlobalScope === 'function' &&\n\t\t\t\t\tself instanceof self.ServiceWorkerGlobalScope\n\t\t\t\t) {\n\t\t\t\t\t/** @type {Environment['serviceWorker']} */\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tenvironment.serviceWorker = self;\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof self.DedicatedWorkerGlobalScope === 'function' &&\n\t\t\t\t\tself instanceof self.DedicatedWorkerGlobalScope\n\t\t\t\t) {\n\t\t\t\t\t/** @type {Environment['worker']} */\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tenvironment.worker = self;\n\t\t\t\t}\n\t\t\t}\n\t\t\tenvironment.global !== undefined && (environment.global = global);\n\t\t}\n\t}\n\n\t// warning('Not a warning');\n\n\twarnings.size && console.warn(['Runtime Warnings:', ...warnings].join('\\n\\t'));\n\n\t/** @type {typeof environment & Environment} */\n\treturn environment;\n})(typeof globalThis === 'object' && globalThis !== null && globalThis === globalThis.globalThis && globalThis);\n\n/** @typedef {import('./types').environment.Environment} Environment */\n/** @typedef {import('./types').environment.Globals} Globals */\n","//@ts-check\n\nimport {ModuleNamespaces} from './namespaces.js';\nimport {ModuleEvaluator} from './evaluator.js';\nimport {ModuleStrapper} from './strapper.js';\nimport {create, setProperty, freeze, setPrototypeOf} from './helpers.js';\nimport {environment} from './environment.js';\n\n/** @augments {Module} */\nexport class DynamicModule {\n\t/** @param {string} url @param {Function} evaluator @param {Scope} scope */\n\tconstructor(url, evaluator, scope) {\n\t\tconst enumerable = false;\n\t\tsetProperty(this, 'url', url, enumerable);\n\t\tsetProperty(this, 'evaluator', (evaluator = ModuleEvaluator({source: evaluator, url})), enumerable);\n\t\tsetProperty(this, 'scope', scope, enumerable);\n\t\t//@ts-ignore\n\t\tsetProperty(this, 'context', create(null, contextuals), enumerable, false);\n\t\tsetProperty(this, 'bindings', create(null), enumerable);\n\t\t//@ts-ignore\n\t\tsetProperty(this, 'links', {...evaluator.links}, enumerable, false);\n\n\t\tthis.namespaces ||\n\t\t\tsetProperty(new.target.prototype, 'namespaces', new ModuleNamespaces(url => new.target.import(url)), false);\n\n\t\tnew.target.map[url] = this;\n\t}\n\n\tlink() {\n\t\tconst promise = DynamicModule.link(this);\n\t\tsetProperty(this, 'link', () => promise);\n\t\treturn promise;\n\t}\n\n\tinstantiate() {\n\t\tconst instance = this.instance || DynamicModule.instantiate(this);\n\t\tconst promise = this.link().then(() => instance);\n\t\tsetProperty(this, 'instantiate', () => promise);\n\t\treturn promise;\n\t}\n\n\tevaluate() {\n\t\tconst promise = DynamicModule.evaluate(this).then(() => this.namespace);\n\t\tsetProperty(this, 'evaluate', () => promise);\n\t\treturn promise;\n\t}\n}\n\n/** Properties injected into every module context */\nconst contextuals = {};\n\nDynamicModule.environment = environment;\n\n// DynamicModule.environment = environment.\n\nDynamicModule.debugging = (() => {\n\tconst debug = (type, ...args) => {\n\t\tconsole.log(type, ...args);\n\t\t// type in debugging && debugging[type] null, args);\n\t};\n\tconst debugging = (debug.debugging = {});\n\tcontextuals.debug = {value: freeze(debug)};\n\treturn debugging;\n})();\n\n{\n\tconst moduleStrapper = new ModuleStrapper();\n\t/** @type {ModuleStrapper['map']} */\n\tDynamicModule.map = moduleStrapper.map;\n\t/** @type {ModuleStrapper['link']} */\n\tDynamicModule.link = moduleStrapper.link;\n\t/** @type {ModuleStrapper['instantiate']} */\n\tDynamicModule.instantiate = moduleStrapper.instantiate;\n\t/** @type {ModuleStrapper['evaluate']} */\n\tDynamicModule.import = moduleStrapper.import;\n\t/** @type {ModuleStrapper['evaluate']} */\n\tDynamicModule.evaluate = moduleStrapper.evaluate;\n\n\tDynamicModule.prototype.evaluator = undefined;\n\t/** @type {Module['url']} */\n\tDynamicModule.prototype.url = undefined;\n\t/** @type {Evaluator} */\n\tDynamicModule.prototype.evaluator = undefined;\n\t/** @type {Module['scope']} */\n\tDynamicModule.prototype.scope = undefined;\n\t/** @type {Module['context']} */\n\tDynamicModule.prototype.context = undefined;\n\t/** @type {Module['bindings']} */\n\tDynamicModule.prototype.bindings = undefined;\n\t/** @type {Module['links']} */\n\tDynamicModule.prototype.links = undefined;\n\t/** @type {Module['instance']} */\n\tDynamicModule.prototype.instance = undefined;\n\t/** @type {Module['namespace']} */\n\tDynamicModule.prototype.namespace = undefined;\n\n\t/** @type {Namespaces} */\n\tDynamicModule.prototype.namespaces = undefined;\n\n\tsetPrototypeOf(DynamicModule, moduleStrapper);\n}\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n/** @typedef {import('./types').modules.Module} Module */\n/** @typedef {import('./types').modules.Module.Scope} Scope */\n/** @typedef {import('./types').modules.DynamicModule.Evaluator} Evaluator */\n","import {ModuleScope, GlobalScope} from './scope.js';\nimport {DynamicModule} from './dynamic-module.js';\nimport {environment} from './environment.js';\n\nGlobalScope.DynamicModules\n\t? 'DynamicModule' in GlobalScope.DynamicModules ||\n\t  ((GlobalScope.DynamicModules.ModuleScope = ModuleScope), (GlobalScope.DynamicModules.DynamicModule = DynamicModule))\n\t: (GlobalScope.DynamicModules = {ModuleScope, GlobalScope});\n"],"names":["Construct","symbols.RootNode","symbols.ParentNode","symbols.NextNode","symbols.PreviousNode","symbols.NextTokenNode","symbols.PreviousTokenNode","symbols.Construct","symbols.Trailer","symbols.LastKeyword","symbols.LastOperator","symbols.LastBreak","symbols.TokenContext","symbols.FunctionConstruct","symbols.FunctionBody","symbols.FunctionArguments","symbols.BindingClause","symbols.ArgumentConstruct","symbols.BlockConstruct","symbols.ClassConstruct","symbols.ClassBody","symbols.VariableConstruct","symbols.BindingConstruct","symbols.ImportConstruct","symbols.FromClause","symbols.ExportConstruct","symbols.ContextNode","symbols.ExtendsClause"],"mappings":"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"}