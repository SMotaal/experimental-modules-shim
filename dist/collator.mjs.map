{"version":3,"file":"collator.mjs","sources":["../lib/collator/symbols.js","../lib/collator/nodes.js","../lib/collator/constructs.js","../lib/collator/collator.js"],"sourcesContent":["﻿export const Construct = Symbol('Node.construct');\nexport const Trailer = Symbol('Node.trailer');\nexport const NextNode = Symbol('Node.nextNode');\nexport const PreviousNode = Symbol('Node.previousNode');\nexport const NextTokenNode = Symbol('Node.nextTokenNode');\nexport const PreviousTokenNode = Symbol('Node.previousTokenNode');\nexport const ParentNode = Symbol('Node.parentNode');\nexport const RootNode = Symbol('Node.rootNode');\nexport const LastKeyword = Symbol('Node.lastKeyword');\nexport const LastOperator = Symbol('Node.lastOperator');\nexport const LastBreak = Symbol('Node.lastBreak');\nexport const TokenContext = Symbol('Node.tokenContext');\nexport const ContextNode = Symbol('Node.contextNode');\n\nexport const FunctionConstruct = Symbol('Node.functionConstruct');\nexport const ClassConstruct = Symbol('Node.classConstruct');\nexport const VariableConstruct = Symbol('Node.variableConstruct');\nexport const ImportConstruct = Symbol('Node.importConstruct');\nexport const ExportConstruct = Symbol('Node.exportConstruct');\nexport const BindingConstruct = Symbol('Node.bindingConstruct');\n\nexport const ArgumentConstruct = Symbol('Node.argumentConstruct');\nexport const BlockConstruct = Symbol('Node.blockConstruct');\n\nexport const BindingClause = Symbol('Construct.bindingClause');\nexport const ExtendsClause = Symbol('Construct.extendsClause');\nexport const FromClause = Symbol('Construct.fromClause');\nexport const ClassBody = Symbol('Construct.classBody');\nexport const FunctionArguments = Symbol('Construct.functionArguments');\nexport const FunctionBody = Symbol('Construct.functionBody');\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as symbols from './symbols.js';\nimport {environment} from '../environment.js';\n\nexport const {Node, Root, Construct, Closure, Template, Text, Token} = (() => {\n\tconst FORCE_INCOMPLETE_CONSTRUCTS = true;\n\n\t// const {defineProperty} = Object;\n\tclass Node {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\t/** @type {string} */\n\t\t\tthis.text = undefined;\n\n\t\t\tthis.type = type;\n\n\t\t\tthis[Symbol.toStringTag] = type == null ? new.target.name : `${new.target.name} ⟨${type}⟩`;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.token = undefined;\n\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tthis[Node.tokenContext] = undefined;\n\n\t\t\t/** @type {RootNode} */\n\t\t\tthis[Node.rootNode] = undefined;\n\n\t\t\t/** @type {ParentNode} */\n\t\t\tthis[Node.parentNode] = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis[Node.previousNode] = this[Node.nextNode] = undefined;\n\n\t\t\t/** @type {TokenNode|ParentNode} */\n\t\t\tthis[Node.previousTokenNode] = this[Node.nextTokenNode] = undefined;\n\n\t\t\t/** @type {Node[]} */\n\t\t\tthis.children = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis.firstNode = this.lastNode = undefined;\n\n\t\t\t/** @type {TokenNode} */\n\t\t\tthis.firstTokenNode = this.lastTokenNode = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis[Node.lastKeyword] = this[Node.lastOperator] = this[Node.lastBreak] = undefined;\n\n\t\t\t/** @type {string} */\n\t\t\tthis[Node.construct] = '';\n\n\t\t\t/** @type {Construct[]} */\n\t\t\tthis.constructs = undefined;\n\t\t}\n\t}\n\n\tNode.prototype.symbols = symbols;\n\n\tclass Text extends Node {\n\t\t/** @param {string} text @param {string} type */\n\t\tconstructor(text, type) {\n\t\t\tsuper(type);\n\t\t\tthis.text = text;\n\t\t}\n\t}\n\n\tclass Token extends Node {\n\t\t/** @param {TokenizerToken} token @param {string} [type] */\n\t\tconstructor(token, type) {\n\t\t\tsuper((type == null && token.type) || type);\n\t\t\tthis.text = token.text;\n\t\t\tthis.token = this.firstToken = this.lastToken = token;\n\t\t}\n\t}\n\n\tclass Parent extends Node {\n\t\tset lastToken(lastToken) {}\n\n\t\tget lastToken() {\n\t\t\treturn this.lastTokenNode && this.lastTokenNode.lastToken;\n\t\t}\n\n\t\tset firstToken(firstToken) {}\n\n\t\tget firstToken() {\n\t\t\treturn this.firstTokenNode && this.firstTokenNode.firstToken;\n\t\t}\n\n\t\tset text(text) {}\n\n\t\tget text() {\n\t\t\t/** @type {string[]} */\n\t\t\tlet fragments;\n\t\t\t/** @type {Node} */\n\t\t\tlet node;\n\t\t\tconst {firstNode, lastNode} = this;\n\t\t\tif (firstNode === undefined) return '';\n\t\t\tif (firstNode === lastNode) return firstNode.text;\n\n\t\t\tfragments = [(node = firstNode).text];\n\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) {\n\t\t\t\tfragments.push(node.text || '');\n\t\t\t}\n\t\t\tnode === lastNode && fragments.push(node.text || '');\n\t\t\treturn fragments.join('');\n\t\t}\n\n\t\t/**\n\t\t * @template {Node} T\n\t\t * @param {T} child\n\t\t * @returns T\n\t\t */\n\t\tappendChild(child) {\n\t\t\tchild[Node.previousNode] = this.lastNode;\n\t\t\tthis.children === undefined\n\t\t\t\t? (this.children = [(this.firstNode = child)])\n\t\t\t\t: this.children.push((this.lastNode[Node.nextNode] = child));\n\t\t\t(child[Node.rootNode] = (child[Node.parentNode] = this)[Node.rootNode]).nodeCount++;\n\t\t\tchild[Node.previousTokenNode] = this.lastTokenNode;\n\n\t\t\treturn (this.lastNode = child);\n\t\t}\n\n\t\t/** @param {ParentNode|TokenNode|TextNode} child */\n\t\tappendToken(child) {\n\t\t\tconst {lastTokenNode, lastNode} = this;\n\t\t\tthis.appendChild(child);\n\t\t\t(child[Node.previousTokenNode] = lastTokenNode) === undefined\n\t\t\t\t? (child.firstToken && (this.firstToken = child.token), (this.firstTokenNode = child))\n\t\t\t\t: (child[Node.previousTokenNode][Node.nextTokenNode] = child);\n\t\t\tif (lastTokenNode !== undefined && lastTokenNode !== lastNode) {\n\t\t\t\t/** @type {Node} */\n\t\t\t\tlet node = this.lastTokenNode;\n\t\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) node[Node.nextTokenNode] = child;\n\t\t\t\tnode[Node.nextTokenNode] = child;\n\t\t\t}\n\t\t\tchild.lastToken && (this.lastToken = child.lastToken);\n\t\t\tthis.lastTokenNode = child;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendText(text, type) {\n\t\t\treturn this.appendChild(new Text(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendComment(text, type) {\n\t\t\treturn this.appendChild(new Comment(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendLiteral(text, type) {\n\t\t\treturn this.appendToken(new Literal(text, type));\n\t\t}\n\t}\n\n\tclass Root extends Parent {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\tsuper(type);\n\t\t\tthis[Node.rootNode] = this;\n\t\t\t/** @type {ConstructNode[]} */\n\t\t\tthis.constructs = [];\n\n\t\t\t// Only unique property\n\t\t\tthis.nodeCount = 0;\n\t\t}\n\t}\n\n\tclass Literal extends Text {}\n\tclass Comment extends Text {}\n\tclass Closure extends Parent {}\n\tclass Template extends Parent {}\n\tclass Construct extends Parent {\n\t\t/** @param {*} record */\n\t\tinitializeDeclarationRecord(record) {\n\t\t\tconst construct = this;\n\t\t\tconst {NextTokenNode, BindingClause} = construct.symbols;\n\t\t\t/** @type {ContentNode|ParentNode} */\n\t\t\tlet node;\n\t\t\tnode = construct[NextTokenNode];\n\t\t\t// node = construct.firstTokenNode[NextTokenNode] || construct[NextTokenNode];\n\t\t\t// node = construct.firstTokenNode[NextTokenNode];\n\t\t\tconst bindingTarget = construct[BindingClause] != null ? construct[BindingClause].text : undefined;\n\t\t\tconst nodes = [node];\n\t\t\tconst next = (next = node[NextTokenNode]) => (nodes.push(next), next);\n\t\t\tlet error;\n\t\t\tconst declarations = []; // (record.declarations = []);\n\t\t\tswitch (record.bindingDeclaration) {\n\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\tcase 'AsyncFunctionDeclaration':\n\t\t\t\tcase 'GeneratorFunctionDeclaration':\n\t\t\t\tcase 'AsyncGeneratorFunctionDeclaration':\n\t\t\t\tcase 'ClassDeclaration':\n\t\t\t\t\tconst bindingDeclaration = {};\n\t\t\t\t\tif (node.type !== 'identifier') {\n\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid identifier`,\n\t\t\t\t\t\t\tlineNumber: construct.lastToken.lineNumber,\n\t\t\t\t\t\t\tcolumnNumber: construct.lastToken.columnNumber,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t}\n\t\t\t\t\tbindingDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\tbindingDeclaration.internalType =\n\t\t\t\t\t\tbindingDeclaration.bindingDeclaration === 'ClassDeclaration' ? 'class' : 'function';\n\t\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\t\tbindingDeclaration.exportedIdentifier = bindingDeclaration.internalIdentifier;\n\t\t\t\t\t\tbindingDeclaration.exportedType = 'readonly';\n\t\t\t\t\t}\n\t\t\t\t\tdeclarations.push(bindingDeclaration);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\tconst variableDeclaration = {};\n\t\t\t\t\tvariableDeclaration.internalType = record.declarationText;\n\t\t\t\t\tif (node.type === '{…}') {\n\t\t\t\t\t\t// TODO: Destructure bindings\n\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\t\tvariableDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\t\t\tvariableDeclaration.exportedIdentifier = variableDeclaration.internalIdentifier;\n\t\t\t\t\t\t\tvariableDeclaration.exportedType = variableDeclaration.internalType === 'const' ? 'constant' : 'readonly';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeclarations.push(variableDeclaration);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExportDefaultAssignmentExpression':\n\t\t\t\t\tconst exportDeclaration = {};\n\t\t\t\t\texportDeclaration.exportedType = 'constant';\n\t\t\t\t\texportDeclaration.internalType = 'void';\n\t\t\t\t\texportDeclaration.exportedIdentifier = 'default';\n\t\t\t\t\tdeclarations.push(exportDeclaration);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ImportDeclaration':\n\t\t\t\t\tif (node.type !== 'string') {\n\t\t\t\t\t\tif (node.text === '*') {\n\t\t\t\t\t\t\tconst importDeclaration = {};\n\t\t\t\t\t\t\timportDeclaration.importedIdentifier = '*';\n\t\t\t\t\t\t\timportDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\tif (node.text === 'as' && (node = next()).type === 'identifier') {\n\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = node.text;\n\t\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdeclarations.push(importDeclaration);\n\t\t\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\t\t\tconst importDeclaration = {};\n\t\t\t\t\t\t\timportDeclaration.importedIdentifier = 'default';\n\t\t\t\t\t\t\timportDeclaration.internalIdentifier = bindingTarget;\n\t\t\t\t\t\t\tnode = next();\n\n\t\t\t\t\t\t\tif (node.text !== 'from') {\n\t\t\t\t\t\t\t\tif (node.text === ',' && (node = next()).type === '{…}') {\n\t\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = node.text;\n\t\t\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeclarations.push(importDeclaration);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.type === '{…}') {\n\t\t\t\t\t\t\t// TODO: import {…}\n\t\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t\t\twhile ((node = next())) {\n\t\t\t\t\t\t\t\tif (node.type === 'identifier') {\n\t\t\t\t\t\t\t\t\tconst importDeclaration = {};\n\t\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = importDeclaration.importedIdentifier = node.text;\n\t\t\t\t\t\t\t\t\tnode = next();\n\t\t\t\t\t\t\t\t\tif (node.text !== ',') {\n\t\t\t\t\t\t\t\t\t\tif (node.text === 'as' && (node = next()).type === 'identifier') {\n\t\t\t\t\t\t\t\t\t\t\timportDeclaration.internalIdentifier = node.text;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdeclarations.push(importDeclaration);\n\t\t\t\t\t\t\t\t\tif (node.text === ',') continue;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (node.text !== '}') {\n\t\t\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.text === 'from') node = next();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node.type === 'string') {\n\t\t\t\t\t\trecord.externalModuleSpecifier = node.text.slice(1, -1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\ttype: 'ConstructError',\n\t\t\t\t\t\t\tmessage: `${record.bindingDeclaration} must have a valid bindings`,\n\t\t\t\t\t\t\tlineNumber: node.firstToken.lineNumber,\n\t\t\t\t\t\t\tcolumnNumber: node.firstToken.columnNumber,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log({construct, nodes});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExportDeclaration':\n\t\t\t\t\tif (node.text === '*') {\n\t\t\t\t\t\trecord.exportedIdentifier = bindingTarget;\n\t\t\t\t\t} else if (node.type === '{…}') {\n\t\t\t\t\t\t// TODO: export {…}\n\t\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn {record, error, declarations, nodes};\n\t\t}\n\t}\n\n\tNode.rootNode = symbols.RootNode;\n\tNode.parentNode = symbols.ParentNode;\n\tNode.nextNode = symbols.NextNode;\n\tNode.previousNode = symbols.PreviousNode;\n\tNode.nextTokenNode = symbols.NextTokenNode;\n\tNode.previousTokenNode = symbols.PreviousTokenNode;\n\tNode.construct = symbols.Construct;\n\tNode.trailer = symbols.Trailer;\n\tNode.lastKeyword = symbols.LastKeyword;\n\tNode.lastOperator = symbols.LastOperator;\n\tNode.lastBreak = symbols.LastBreak;\n\tNode.tokenContext = symbols.TokenContext;\n\n\t/** @type {boolean} */\n\tNode.RETAIN_TOKEN_CONTEXTS = true;\n\n\tif (environment.process) {\n\t\tconst inspect = Symbol.for('nodejs.util.inspect.custom');\n\t\tNode.prototype[inspect] = {\n\t\t\t/** @this {Node} @param {number} depth @param {NodeJS.InspectOptions & {stylize: Function}} options*/\n\t\t\t[inspect](depth, {stylize}) {\n\t\t\t\treturn `${stylize(this.constructor.name, 'undefined')} ‹${stylize(this.type, 'special')}›`;\n\t\t\t},\n\t\t}[inspect];\n\n\t\t// console.log(Text.prototype[inspect]);\n\t\t// process.exit();\n\t}\n\n\t((constructor, parentDescriptors, nodeDescriptors) => {\n\t\t({constructor, ...nodeDescriptors} = Object.getOwnPropertyDescriptors(Node.prototype));\n\t\t({constructor, ...parentDescriptors} = {...nodeDescriptors, ...Object.getOwnPropertyDescriptors(Parent.prototype)});\n\t\tfor (const Node of [Root, Closure, Template, Construct, Token, Text, Literal, Comment, Parent]) {\n\t\t\tObject.defineProperties(Node.prototype, Parent.isPrototypeOf(Node) ? parentDescriptors : nodeDescriptors);\n\t\t\tObject.freeze(Object.setPrototypeOf(Node.prototype, null));\n\t\t}\n\t})();\n\n\t// NOTE: Safari/iOS throw with Object.setPrototypeOf(Node, null);\n\tObject.freeze(Node);\n\n\treturn {Node, Root, Construct, Closure, Template, Text, Token};\n})();\n\n/** @typedef {ContentNode|ParentNode} Node */\n/** @typedef {Text|Token} ContentNode */\n/** @typedef {Text} TextNode */\n/** @typedef {Token} TokenNode */\n/** @typedef {Root|Construct|Closure|Template} ParentNode */\n/** @typedef {Root} RootNode */\n/** @typedef {Construct} ConstructNode */\n/** @typedef {Closure} ClosureNode */\n/** @typedef {Template} TemplateNode */\n","﻿import * as symbols from './symbols.js';\n\nexport const constructors = {};\n\n/** @typedef {} Construction */\n\n{\n\tconst {defineProperties} = Object;\n\n\tconst Constructor = (reducer =>\n\t\t/**\n\t\t * @template {symbol} P\n\t\t * @template {symbol[]} Q\n\t\t * @param {P} symbol\n\t\t * @param {Q} symbols\n\t\t * @returns {{<T extends ConstructNode>(node: T): T, symbol: P, symbols: Q}}\n\t\t */\n\t\t(symbol, ...symbols) =>\n\t\t\tdefineProperties(\n\t\t\t\tnode => {\n\t\t\t\t\tif (node[symbol] !== undefined) debugger;\n\t\t\t\t\treturn (node[symbol] = symbols.reduce(reducer, node));\n\t\t\t\t},\n\t\t\t\t{name: {value: symbol['description']}, symbol: {value: symbol}, symbols: {value: symbols}},\n\t\t\t))((construction, symbol) => (symbol in construction || (construction[symbol] = null), construction));\n\n\tconstructors.function = Constructor(\n\t\tsymbols.FunctionConstruct,\n\t\tsymbols.FunctionBody,\n\t\tsymbols.FunctionArguments,\n\t\tsymbols.BindingClause,\n\t\tsymbols.ArgumentConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.class = Constructor(\n\t\tsymbols.ClassConstruct,\n\t\tsymbols.ClassBody,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BlockConstruct,\n\t);\n\n\tconstructors.const = constructors.var = constructors.let = Constructor(\n\t\tsymbols.VariableConstruct,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.import = Constructor(\n\t\tsymbols.ImportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.export = Constructor(\n\t\tsymbols.ExportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n}\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Node, Root, Construct, Closure, Template, Token} from './nodes.js';\nimport * as symbols from './symbols.js';\nimport {constructors} from './constructs.js';\n\nexport const Collator = (() => {\n\tconst {RETAIN_TOKEN_CONTEXTS = false} = Root;\n\n\treturn class Collator {\n\t\t/**\n\t\t * Collates tokens into construct-aligned syntax trees (CAST)\n\t\t * @param {string} goal - only ECMAScript (for now)\n\t\t */\n\t\tconstructor(goal) {\n\t\t\tthis.goal = goal;\n\n\t\t\t/** Incremented with every append operation */\n\t\t\tthis.nodeCount = 0;\n\n\t\t\t/** Incremented with every token iteration */\n\t\t\tthis.tokenCount = 0;\n\n\t\t\t// TODO: Keep either rootNode or firstNode, right?\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.rootNode = undefined;\n\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.firstNode = undefined;\n\n\t\t\t/** The edges of the collated tree @type {Node} */\n\t\t\tthis.lastNode = undefined;\n\n\t\t\t/** The edges of the generated tokens @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = this.nextToken = undefined;\n\n\t\t\t/** Back-pressure token passed to next node @type {TokenizerToken} */\n\t\t\tthis.queuedToken = undefined;\n\n\t\t\t/** Tokenizer-provided context state @type {TokenizerContext} */\n\t\t\tthis.firstContext = this.lastContext = undefined;\n\n\t\t\t/** The construct currently being formed @type {Construct} */\n\t\t\tthis.currentConstructNode = undefined;\n\n\t\t\t/** Overridable logger function */\n\t\t\tthis.log = console.log;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\tcollate(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\n\t\t\t/** @type {ConstructNode} */\n\t\t\tlet constructNode;\n\n\t\t\tthis.nextToken = token.state.nextToken;\n\n\t\t\tthis.queuedToken === undefined ||\n\t\t\t\t(token === this.queuedToken\n\t\t\t\t\t? (this.queuedToken = undefined)\n\t\t\t\t\t: this.throw(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Invalid token: expecting queued token  [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ));\n\n\t\t\tthis.lastToken = token;\n\n\t\t\tif (this.node(token) === undefined) {\n\t\t\t\tcurrentNode = this.lastNode;\n\t\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\t\tswitch (token.punctuator) {\n\t\t\t\t\tcase 'pattern':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'pattern');\n\t\t\t\t\tcase 'comment':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'comment');\n\t\t\t\t\tcase 'quote':\n\t\t\t\t\t\tif (token.group.opener === '\"' || token.group.opener === \"'\") {\n\t\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'string');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Template()));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Closure(`${token.group.opener}…${token.group.closer}`)));\n\t\t\t\t\t\tif ((constructNode = currentNode[Node.previousTokenNode]) !== undefined) {\n\t\t\t\t\t\t\tif ('{' === token.text) {\n\t\t\t\t\t\t\t\t// if (constructNode[symbols.BlockConstruct] === null) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.BindingConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingClause] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = currentNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\t\t\t} else if (constructNode[symbols.ClassBody] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ClassBody] = currentNode[symbols.ClassBody] = currentNode;\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct] != null &&\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct][symbols.FunctionBody] === null\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t(constructNode = currentNode[symbols.FunctionConstruct] = constructNode[symbols.FunctionConstruct])[\n\t\t\t\t\t\t\t\t\t\tsymbols.BlockConstruct\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionBody] = (currentNode[symbols.FunctionArguments] =\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct])[symbols.FunctionBody] = currentNode[\n\t\t\t\t\t\t\t\t\t\tsymbols.FunctionBody\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// debugger;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t} else if ('(' === token.text) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.ArgumentConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct] = currentNode;\n\t\t\t\t\t\t\t\t\tif (constructNode[symbols.FunctionArguments] === null) {\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionBody] = currentNode[symbols.BlockConstruct] = null;\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionArguments] = currentNode;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdebugger;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t(token.punctuator === 'opener' && token.goal.name === this.goal) ||\n\t\t\t\t\t\t\tthis.throw(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`Invalid delimiter: ${token.punctuator} [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(this.lastContext = tokenContext)[symbols.ContextNode] = this.lastNode = currentNode;\n\t\t\t}\n\n\t\t\treturn this.emitTokenNode(token, tokens);\n\t\t}\n\n\t\t/** @param {TokenizerToken} token */\n\t\tnode(token) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\tif (this.firstNode === undefined) {\n\t\t\t\tthis.firstToken = token;\n\t\t\t\t(this.firstContext = this.lastContext = tokenContext)[\n\t\t\t\t\tsymbols.ContextNode\n\t\t\t\t] = this.lastNode = currentNode = this.rootNode = this.firstNode = new Root(token.goal.name);\n\t\t\t}\n\t\t\t// Are we building a construct?\n\t\t\telse if (this.currentConstructNode !== undefined) {\n\t\t\t\tcurrentNode = this.currentConstructNode;\n\t\t\t}\n\t\t\t// Are we where we want to be?\n\t\t\telse if (\n\t\t\t\t(this.lastNode = currentNode =\n\t\t\t\t\t(this.lastContext === tokenContext && this.lastNode) || tokenContext[symbols.ContextNode]) !== undefined\n\t\t\t) {\n\t\t\t\tthis.lastContext = tokenContext;\n\t\t\t} else if ((this.lastNode = this.lastContext[symbols.ContextNode]) === undefined) {\n\t\t\t\tthis.throw(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Invalid state: lastContext = ${this.lastContext && this.lastContext.number} [${token.goal.name}:${\n\t\t\t\t\t\t\ttoken.lineNumber\n\t\t\t\t\t\t}:${token.columnNumber}]`,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn currentNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitConstructNode(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {Construct} */\n\t\t\tlet constructNode;\n\n\t\t\tcurrentNode = this.lastNode;\n\t\t\tconstructNode = this.lastNode = this.currentConstructNode = new Construct();\n\n\t\t\tif (token.text in constructors) constructors[token.text](constructNode);\n\t\t\tRETAIN_TOKEN_CONTEXTS && (constructNode[Node.tokenContext] = this.lastContext);\n\t\t\tcurrentNode[Node.rootNode].constructs.push(constructNode);\n\t\t\tcurrentNode.appendToken(constructNode);\n\t\t\tconstructNode[Node.construct] = currentNode[Node.construct];\n\t\t\tcurrentNode[Node.construct] = '';\n\t\t\tconstructNode.appendToken(new Token(token, token.text));\n\n\t\t\tfor (\n\t\t\t\t;\n\t\t\t\tthis.currentConstructNode === constructNode &&\n\t\t\t\t(token = tokens.next().value) !== undefined &&\n\t\t\t\ttoken.isDelimiter !== true;\n\t\t\t\tthis.collate(token, tokens) === undefined ||\n\t\t\t\t((constructNode.type = constructNode[Node.construct]), (token = undefined))\n\t\t\t);\n\n\t\t\tconstructNode[Symbol.toStringTag] = `${constructNode[Symbol.toStringTag]} ⟨${constructNode.type}⟩`;\n\t\t\tconstructNode[Node.construct] = '';\n\t\t\tthis.currentConstructNode = undefined;\n\t\t\tthis.queuedToken = token;\n\t\t\tthis.lastNode = currentNode;\n\n\t\t\treturn constructNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens @param {string} type */\n\t\temitFlatNode(token, tokens, type) {\n\t\t\tconst {contextDepth, state} = token;\n\t\t\tconst fragments = [token.text];\n\t\t\twhile ((this.nextToken = state.nextToken).contextDepth >= contextDepth) {\n\t\t\t\tfragments.push((this.lastToken = tokens.next().value).text);\n\t\t\t}\n\t\t\tconst child =\n\t\t\t\ttype === 'comment'\n\t\t\t\t\t? this.lastNode.appendComment(fragments.join(''), type)\n\t\t\t\t\t: this.lastNode.appendLiteral(fragments.join(''), type);\n\t\t\tchild.firstToken = token;\n\t\t\tchild.lastToken = this.lastToken;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitTokenNode(token, tokens) {\n\t\t\t/** @type {string} */\n\t\t\tlet type;\n\t\t\t/** @type {symbol} */\n\t\t\tlet symbol;\n\t\t\t/** @type {(typeof constructors)[keyof (typeof constructors)]} */\n\t\t\tlet constructor;\n\n\t\t\tlet constructNode;\n\t\t\tconst currentNode = (constructNode = this.lastNode);\n\t\t\tconst currentConstructText = currentNode[Node.construct];\n\n\t\t\tswitch ((type = token.type)) {\n\t\t\t\tcase 'inset':\n\t\t\t\tcase 'whitespace':\n\t\t\t\t\treturn currentNode.appendText(token.text, token.type);\n\t\t\t\t// case 'default':\n\t\t\t\tcase 'identifier':\n\t\t\t\t\tif ((constructNode = currentNode)[symbols.BindingClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.BindingClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((constructNode = currentNode) && constructNode[symbols.ExtendsClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.ExtendsClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t}\n\t\t\t\tcase 'number':\n\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'break':\n\t\t\t\t\tcurrentNode[Node.lastBreak] = token;\n\t\t\t\t\t// TODO: GeneratorMethod\n\t\t\t\t\tif (currentConstructText.endsWith('async')) {\n\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\ttype = 'break';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'operator':\n\t\t\t\t\tcurrentNode[Node.lastOperator] = token;\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\t// case '*':\n\t\t\t\t\t\t// if (currentConstructText.endsWith('function')) {\n\t\t\t\t\t\t// \tcurrentNode[Node.construct] += '*';\n\t\t\t\t\t\t// \tbreak;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tcase '.':\n\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\tcase ':':\n\t\t\t\t\t\tcase ';':\n\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'keyword':\n\t\t\t\t\tcurrentNode[Node.lastKeyword] = token;\n\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tif (currentConstructText.endsWith('function')) {\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] += '*';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'import':\n\t\t\t\t\t\t\ttype = currentNode[Node.construct] = token.text;\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'export':\n\t\t\t\t\t\t\ttoken.contextDepth\n\t\t\t\t\t\t\t\t? (currentNode[Node.construct] = '')\n\t\t\t\t\t\t\t\t: (type = currentNode[Node.construct] = token.text);\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'const':\n\t\t\t\t\t\tcase 'var':\n\t\t\t\t\t\tcase 'let':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\tcase 'default':\n\t\t\t\t\t\t\tif (currentConstructText !== 'export') {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'async':\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === 'import' || currentConstructText === 'export'\n\t\t\t\t\t\t\t\t\t? `${currentNode[Node.construct]} ${token.text}`\n\t\t\t\t\t\t\t\t\t: token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'function':\n\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === '' ? token.text : `${currentNode[Node.construct]} ${token.text}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'extends':\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] !== undefined &&\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] === undefined\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] = null;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (constructor !== undefined && constructor.symbol in currentNode) debugger;\n\t\t\tif (currentConstructText !== currentNode[Node.construct]) {\n\t\t\t\tif (this.currentConstructNode === undefined) {\n\t\t\t\t\treturn this.emitConstructNode(token, tokens);\n\t\t\t\t} else if (this.currentConstructNode === currentNode) {\n\t\t\t\t\tif (currentNode[Node.construct] === '') {\n\t\t\t\t\t\tif (symbol) debugger;\n\t\t\t\t\t\treturn (this.currentConstructNode = undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (constructor) constructor(currentNode);\n\t\t\t}\n\n\t\t\tconst tokenNode = currentNode.appendToken(new Token(token, type));\n\n\t\t\tif (symbol !== undefined) {\n\t\t\t\tconstructNode[symbol] = tokenNode;\n\t\t\t\tswitch (symbol) {\n\t\t\t\t\tcase symbols.BindingClause:\n\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tokenNode;\n\t\t}\n\n\t\tthrow(error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\t/**\n\t\t * @param {{sourceRecord: ModuleSource, tokens: TokenizerTokens, log?:Collator['log'], collator?: Collator}} state\n\t\t */\n\t\tstatic collate(state) {\n\t\t\tconst collator = (state.collator = new Collator('ECMAScript'));\n\t\t\tconst {\n\t\t\t\tsourceRecord,\n\t\t\t\tsourceRecord: {\n\t\t\t\t\tfragments = (sourceRecord.fragments = /** @type {ModuleSource['fragments']} */ ([])),\n\t\t\t\t\t// bindings = (sourceRecord.bindings = /** @type {ModuleSource['bindings']} */ ([])),\n\t\t\t\t},\n\t\t\t\ttokens,\n\t\t\t\t// collator = (state.collator = new Collator('ECMAScript')),\n\t\t\t\tlog = (state.log = collator.log),\n\t\t\t\t// nonBindings = (state.nonBindings = []),\n\t\t\t} = state;\n\n\t\t\tif (collator.log != log) collator.log = log || undefined;\n\n\t\t\tfor (const token of tokens) {\n\t\t\t\tif (!token || !token.text) continue;\n\n\t\t\t\tconst node = collator.collate(token, tokens) || undefined;\n\t\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\n\t\t\t\tif (collator.queuedToken !== undefined) {\n\t\t\t\t\tconst node = collator.collate(collator.queuedToken, tokens) || undefined;\n\t\t\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\trootNode,\n\t\t\t\trootNode: {constructs},\n\t\t\t} = collator;\n\n\t\t\tsourceRecord.rootNode = rootNode;\n\t\t\tsourceRecord.constructs = constructs;\n\t\t\tsourceRecord.compiledText = rootNode.text;\n\n\t\t\treturn state;\n\t\t}\n\t};\n})();\n\n/** @typedef {import('../compiler/records').ModuleSource} ModuleSource */\n"],"names":["Construct","symbols.RootNode","symbols.ParentNode","symbols.NextNode","symbols.PreviousNode","symbols.NextTokenNode","symbols.PreviousTokenNode","symbols.Construct","symbols.Trailer","symbols.LastKeyword","symbols.LastOperator","symbols.LastBreak","symbols.TokenContext","symbols.FunctionConstruct","symbols.FunctionBody","symbols.FunctionArguments","symbols.BindingClause","symbols.ArgumentConstruct","symbols.BlockConstruct","symbols.ClassConstruct","symbols.ClassBody","symbols.VariableConstruct","symbols.BindingConstruct","symbols.ImportConstruct","symbols.FromClause","symbols.ExportConstruct","symbols.ContextNode","symbols.ExtendsClause"],"mappings":"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"}