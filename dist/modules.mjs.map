{"version":3,"file":"modules.mjs","sources":["../lib/helpers.js","../lib/scope.js","../lib/namespaces.js","../lib/expressions.js","../lib/compiler/symbols.js","../lib/environment.js","../lib/compiler/tree.js","../lib/compiler/constructs.js","../lib/compiler/collator.js","../lib/compiler/records.js","../../markup/experimental/matcher/matcher.js","../../markup/experimental/es/ranges.js","../../markup/packages/tokenizer/lib/core.js","../../markup/experimental/es/helpers.js","../../markup/experimental/es/definitions.js","../../markup/experimental/es/matcher.js","../../markup/experimental/matcher/helpers.js","../../markup/experimental/es/mode.js","../../markup/experimental/es/standalone.js","../lib/compiler/tokenizer.js","../lib/compiler/rewriters.js","../lib/compiler/compiler.js","../lib/evaluator.js","../lib/namespace.js","../lib/strapper.js","../lib/dynamic-module.js","../lib/modules.js"],"sourcesContent":["export const {\n\tbindProperty,\n\tcopyProperty,\n\tcreate,\n\tentries,\n\tfreeze,\n\tReflect,\n\tResolvedPromise,\n\tsetProperty,\n\tsetPrototypeOf,\n} = (() => {\n\tconst {\n\t\tObject: {create, entries, freeze, setPrototypeOf},\n\t\tReflect: {set, apply, construct, defineProperty, getOwnPropertyDescriptor},\n\t\tPromise,\n\t} = globalThis;\n\tconst noop = () => {};\n\treturn {\n\t\tbindProperty: (target, property, get = noop, enumerable = false, configurable = false) =>\n\t\t\tdefineProperty(target, property, {get, set: noop, configurable, enumerable}),\n\t\tcopyProperty: (target, source, identifier, alias = identifier) =>\n\t\t\tdefineProperty(target, alias, getOwnPropertyDescriptor(source, identifier)),\n\t\tcreate,\n\t\tentries: entries,\n\t\tfreeze,\n\t\tnoop,\n\t\tReflect: freeze(setPrototypeOf({set, apply, construct, defineProperty, getOwnPropertyDescriptor}, null)),\n\t\tResolvedPromise: Promise.resolve(),\n\t\tsetProperty: (target, property, value, enumerable = false, configurable = false) =>\n\t\t\tdefineProperty(target, property, {value, enumerable, configurable}) && value,\n\t\tsetPrototypeOf,\n\t};\n})();\n","import {Reflect, freeze, setPrototypeOf} from './helpers.js';\n\nexport const {GlobalScope, ModuleScope} = (() => {\n\t/** @type {import('./types').modules.GlobalScope} */\n\tconst GlobalScope = globalThis;\n\n\tconst globals = (({eval: $eval}) => ({eval: $eval}))(GlobalScope);\n\n\tconst scope = freeze(setPrototypeOf({...globals}, GlobalScope));\n\n\tconst locals = {};\n\n\tconst {set, apply, construct} = Reflect;\n\n\t/** @type {import('./types').modules.ModuleScope} */\n\tconst ModuleScope = new Proxy(scope, {\n\t\tget(target, property, receiver) {\n\t\t\tif (property in globals) return globals[property];\n\t\t\tconst value = property in GlobalScope && typeof property === 'string' ? GlobalScope[property] : undefined;\n\t\t\tif (value && typeof value === 'function') {\n\t\t\t\tconst local = locals[property];\n\t\t\t\treturn (\n\t\t\t\t\t(local && local.value === value && local) ||\n\t\t\t\t\t((locals[property] = {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tconstruct(target, argArray, newTarget) {\n\t\t\t\t\t\t\treturn newTarget === this.proxy ? construct(value, argArray) : construct(value, argArray, newTarget);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tapply(method, thisArg, argArray) {\n\t\t\t\t\t\t\treturn thisArg == null || thisArg === receiver ? value(...argArray) : apply(value, thisArg, argArray);\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t(locals[property].proxy = new Proxy(value, locals[property])),\n\t\t\t\t\tlocals[property])\n\t\t\t\t).proxy;\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\tset(target, property, value, receiver) {\n\t\t\tif (receiver !== ModuleScope) throw ReferenceError(`${property} is not defined [proxy says]`);\n\t\t\treturn set(GlobalScope, property, value);\n\t\t},\n\t});\n\n\treturn {GlobalScope, ModuleScope};\n})();\n","import {create, setProperty, bindProperty} from './helpers.js';\n\nexport class ModuleNamespaces {\n\tconstructor(importHostModule) {\n\t\tsetProperty(this, '[[importHostModule]]', importHostModule, true);\n\t\tsetProperty(this, '[[imports]]', create(null), true);\n\t\tsetProperty(\n\t\t\tthis,\n\t\t\t'import',\n\t\t\timportHostModule\n\t\t\t\t? url =>\n\t\t\t\t\t\tthis[url] ||\n\t\t\t\t\t\t(this['[[imports]]'][url] ||\n\t\t\t\t\t\t\t(this['[[imports]]'][url] = this['[[importHostModule]]'](url)).then(\n\t\t\t\t\t\t\t\tnamespace => (bindProperty(this, url, () => namespace, true, false), namespace),\n\t\t\t\t\t\t\t))\n\t\t\t\t: this.import,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\t/** @param {string} url @returns {Namespace | Promise<Namespace>} */\n\timport(url) {\n\t\tthrow Error('Unsupported operation: [[importHostModule]] is undefined!');\n\t}\n}\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n/** @typedef {import('./types').modules.Module.Namespace} Namespace */\n","/** ECMAScript quoted strings: `'…'` or `\"…\"`  */\nexport const StringLiteral = /\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g;\n\n/** ECMAScript comments */\nexport const Comments = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n/g;\n\n/** ECMAScript regular expressions  */\nexport const RegExps = /\\/(?=[^\\*\\/\\n][^\\n]*\\/)(?:[^\\\\\\/\\n\\t\\[]+|\\\\\\S|\\[(?:\\\\\\S|[^\\\\\\n\\t\\]]+)+?\\])+?\\/[a-z]*/g;\n\n/** First coherent indent spaces in a string */\n// export const Indent = /(?:^|\\n)([ \\t]+)/;\n\n/** Comma with surrounding whitespace */\nexport const Separator = /[\\s\\n]*,[\\s\\n]*/;\n\n/** Mapped binding: `Identifier as BindingIdentifier` */\nexport const Mappings = /([^\\s,]+)(?: +as +([^\\s,]+))?/g;\n\n/** Quoted export mappings: `export {…}` */\nexport const Exports = /(\\/\\*\\/|`)\\s*export *{([^}`;\\*\\/\\\\()=+&|\\-]*)}\\s*(?:\\1)/gm;\n\n/** Nothing but Identifier Characters */\nexport const Identifier = /[^\\n\\s\\(\\)\\{\\}\\-=+*/%`\"'~!&.:^<>,]+/;\n\nexport const Bindings = /\\b(import|export)\\b +(?:{ *([^}]*?) *}|([*] +as +\\S+|\\S+)|)(?: +from\\b|)(?: +(['\"])(.*?)\\4|(?:const|let|var) +(?:{ *([^}]*?) *}|\\S+)|)/g;\n\nexport const BindingDeclarations = /\\b(import|export)\\b +(?:{ *([^}]*?) *}|([*] +as +\\S+|\\S+)|)(?: +from\\b|)(?: +(['\"])(.*?)\\4|)/g;\n\nexport const Specifier = /^(?:([a-z]+[^/]*?:)\\/{0,2}(\\b[^/]+\\/?)?)(\\.{0,2}\\/)?([^#?]*?)(\\?[^#]*?)?(#.*?)?$/u;\n\nSpecifier.parse = specifier => {\n\tconst [url, schema, domain, root, path, query, fragment] = Specifier.exec(specifier) || '';\n\treturn {url, schema, domain, root, path, query, fragment, specifier};\n};\n","﻿export const Construct = Symbol('Node.construct');\nexport const Trailer = Symbol('Node.trailer');\nexport const NextNode = Symbol('Node.nextNode');\nexport const PreviousNode = Symbol('Node.previousNode');\nexport const NextTokenNode = Symbol('Node.nextTokenNode');\nexport const PreviousTokenNode = Symbol('Node.previousTokenNode');\nexport const ParentNode = Symbol('Node.parentNode');\nexport const RootNode = Symbol('Node.rootNode');\nexport const LastKeyword = Symbol('Node.lastKeyword');\nexport const LastOperator = Symbol('Node.lastOperator');\nexport const LastBreak = Symbol('Node.lastBreak');\nexport const TokenContext = Symbol('Node.tokenContext');\nexport const ContextNode = Symbol('Node.contextNode');\n\nexport const FunctionConstruct = Symbol('Node.functionConstruct');\nexport const ClassConstruct = Symbol('Node.classConstruct');\nexport const VariableConstruct = Symbol('Node.variableConstruct');\nexport const ImportConstruct = Symbol('Node.importConstruct');\nexport const ExportConstruct = Symbol('Node.exportConstruct');\nexport const BindingConstruct = Symbol('Node.bindingConstruct');\n\nexport const ArgumentConstruct = Symbol('Node.argumentConstruct');\nexport const BlockConstruct = Symbol('Node.blockConstruct');\n\nexport const BindingClause = Symbol('Construct.bindingClause');\nexport const ExtendsClause = Symbol('Construct.extendsClause');\nexport const FromClause = Symbol('Construct.fromClause');\nexport const ClassBody = Symbol('Construct.classBody');\nexport const FunctionArguments = Symbol('Construct.functionArguments');\nexport const FunctionBody = Symbol('Construct.functionBody');\n","﻿//@ts-check\n\nexport const environment = (globalThis => {\n\tconst environment = {};\n\n\t/** @type {Set<string>} */\n\tconst warnings = new Set();\n\n\t/** @type {Globals} */\n\t//@ts-ignore\n\tenvironment.globalThis = globalThis;\n\n\tconst warning = message => {\n\t\twarnings.add(message);\n\t};\n\n\tif (environment.globalThis || warning('No valid globalThis object in scope')) {\n\t\tconst {globalThis, warnings} = environment;\n\n\t\tconst globalProperties = ['global', 'window', 'self'];\n\n\t\tfor (const globalProperty of globalProperties)\n\t\t\tglobalProperty in globalThis &&\n\t\t\t\tglobalThis[globalProperty] != null &&\n\t\t\t\ttypeof globalThis[globalProperty] === 'object' &&\n\t\t\t\t(globalThis[globalProperty] === globalThis[globalProperty][globalProperty]\n\t\t\t\t\t? (environment[globalProperty] = globalThis[globalProperty])\n\t\t\t\t\t: warning(`An invalid ${globalProperty} was found in scope`));\n\n\t\tif (\n\t\t\tglobalProperties.findIndex(property => property in environment) > -1 ||\n\t\t\twarning(`No valid ${globalProperties.join(', ')} object(s) in scope`)\n\t\t) {\n\t\t\tconst {global, window, self, process} = environment.globalThis;\n\n\t\t\tif (environment.global !== undefined) {\n\t\t\t\t/** @type {Environment['global']} */\n\t\t\t\tenvironment.global = global;\n\n\t\t\t\tprocess == null ||\n\t\t\t\t\ttypeof process.pid !== 'number' ||\n\t\t\t\t\t/** @type {Environment['process']} */\n\t\t\t\t\t(environment.process = process);\n\t\t\t}\n\t\t\tif (environment.self !== undefined) {\n\t\t\t\t/** @type {Environment['self']} */\n\t\t\t\tenvironment.self = self;\n\n\t\t\t\tif (environment.window !== undefined) {\n\t\t\t\t\t/** @type {Environment['window']} */\n\t\t\t\t\tenvironment.window = window;\n\t\t\t\t\tconst {document} = window;\n\t\t\t\t\tdocument != null && document.defaultView === window && (environment.document = document);\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof self.ServiceWorkerGlobalScope === 'function' &&\n\t\t\t\t\tself instanceof self.ServiceWorkerGlobalScope\n\t\t\t\t) {\n\t\t\t\t\t/** @type {Environment['serviceWorker']} */\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tenvironment.serviceWorker = self;\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof self.DedicatedWorkerGlobalScope === 'function' &&\n\t\t\t\t\tself instanceof self.DedicatedWorkerGlobalScope\n\t\t\t\t) {\n\t\t\t\t\t/** @type {Environment['worker']} */\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tenvironment.worker = self;\n\t\t\t\t}\n\t\t\t}\n\t\t\tenvironment.global !== undefined && (environment.global = global);\n\t\t}\n\t}\n\n\t// warning('Not a warning');\n\n\twarnings.size && console.warn(['Runtime Warnings:', ...warnings].join('\\n\\t'));\n\n\t/** @type {typeof environment & Environment} */\n\treturn environment;\n})(typeof globalThis === 'object' && globalThis !== null && globalThis === globalThis.globalThis && globalThis);\n\n/** @typedef {import('./types').environment.Environment} Environment */\n/** @typedef {import('./types').environment.Globals} Globals */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as symbols from './symbols.js';\nimport {environment} from '../environment.js';\n\nexport const {Node, Root, Construct, Closure, Template, Text, Token} = (() => {\n\t// const {defineProperty} = Object;\n\tclass Node {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\t/** @type {string} */\n\t\t\tthis.text = undefined;\n\n\t\t\tthis.type = type;\n\n\t\t\tthis[Symbol.toStringTag] = type == null ? new.target.name : `${new.target.name} ⟨${type}⟩`;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.token = undefined;\n\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tthis[Node.tokenContext] = undefined;\n\n\t\t\t/** @type {RootNode} */\n\t\t\tthis[Node.rootNode] = undefined;\n\n\t\t\t/** @type {ParentNode} */\n\t\t\tthis[Node.parentNode] = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis[Node.previousNode] = this[Node.nextNode] = undefined;\n\n\t\t\t/** @type {TokenNode|ParentNode} */\n\t\t\tthis[Node.previousTokenNode] = this[Node.nextTokenNode] = undefined;\n\n\t\t\t/** @type {Node[]} */\n\t\t\tthis.children = undefined;\n\n\t\t\t/** @type {Node} */\n\t\t\tthis.firstNode = this.lastNode = undefined;\n\n\t\t\t/** @type {TokenNode} */\n\t\t\tthis.firstTokenNode = this.lastTokenNode = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = undefined;\n\n\t\t\t/** @type {TokenizerToken} */\n\t\t\tthis[Node.lastKeyword] = this[Node.lastOperator] = this[Node.lastBreak] = undefined;\n\n\t\t\t/** @type {string} */\n\t\t\tthis[Node.construct] = '';\n\n\t\t\t/** @type {Construct[]} */\n\t\t\tthis.constructs = undefined;\n\t\t}\n\t}\n\n\tclass Text extends Node {\n\t\t/** @param {string} text @param {string} type */\n\t\tconstructor(text, type) {\n\t\t\tsuper(type);\n\t\t\tthis.text = text;\n\t\t}\n\t}\n\n\tclass Token extends Node {\n\t\t/** @param {TokenizerToken} token @param {string} [type] */\n\t\tconstructor(token, type) {\n\t\t\tsuper((type == null && token.type) || type);\n\t\t\tthis.text = token.text;\n\t\t\tthis.token = this.firstToken = this.lastToken = token;\n\t\t}\n\t}\n\n\tclass Parent extends Node {\n\t\tset lastToken(lastToken) {}\n\n\t\tget lastToken() {\n\t\t\treturn this.lastTokenNode && this.lastTokenNode.lastToken;\n\t\t}\n\n\t\tset firstToken(firstToken) {}\n\n\t\tget firstToken() {\n\t\t\treturn this.firstTokenNode && this.firstTokenNode.firstToken;\n\t\t}\n\n\t\tset text(text) {}\n\n\t\tget text() {\n\t\t\t/** @type {string[]} */\n\t\t\tlet fragments;\n\t\t\t/** @type {Node} */\n\t\t\tlet node;\n\t\t\tconst {firstNode, lastNode} = this;\n\t\t\tif (firstNode === undefined) return '';\n\t\t\tif (firstNode === lastNode) return firstNode.text;\n\n\t\t\tfragments = [(node = firstNode).text];\n\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) {\n\t\t\t\tfragments.push(node.text || '');\n\t\t\t}\n\t\t\tnode === lastNode && fragments.push(node.text || '');\n\t\t\treturn fragments.join('');\n\t\t}\n\n\t\t/**\n\t\t * @template {Node} T\n\t\t * @param {T} child\n\t\t * @returns T\n\t\t */\n\t\tappendChild(child) {\n\t\t\tchild[Node.previousNode] = this.lastNode;\n\t\t\tthis.children === undefined\n\t\t\t\t? (this.children = [(this.firstNode = child)])\n\t\t\t\t: this.children.push((this.lastNode[Node.nextNode] = child));\n\t\t\t(child[Node.rootNode] = (child[Node.parentNode] = this)[Node.rootNode]).nodeCount++;\n\t\t\tchild[Node.previousTokenNode] = this.lastTokenNode;\n\n\t\t\treturn (this.lastNode = child);\n\t\t}\n\n\t\t/** @param {ParentNode|TokenNode|TextNode} child */\n\t\tappendToken(child) {\n\t\t\tconst {lastTokenNode, lastNode} = this;\n\t\t\tthis.appendChild(child);\n\t\t\t(child[Node.previousTokenNode] = lastTokenNode) === undefined\n\t\t\t\t? (child.firstToken && (this.firstToken = child.token), (this.firstTokenNode = child))\n\t\t\t\t: (child[Node.previousTokenNode][Node.nextTokenNode] = child);\n\t\t\tif (lastTokenNode !== undefined && lastTokenNode !== lastNode) {\n\t\t\t\t/** @type {Node} */\n\t\t\t\tlet node = this.lastTokenNode;\n\t\t\t\twhile ((node = node[Node.nextNode]) !== lastNode) node[Node.nextTokenNode] = child;\n\t\t\t\tnode[Node.nextTokenNode] = child;\n\t\t\t}\n\t\t\tchild.lastToken && (this.lastToken = child.lastToken);\n\t\t\tthis.lastTokenNode = child;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendText(text, type) {\n\t\t\treturn this.appendChild(new Text(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendComment(text, type) {\n\t\t\treturn this.appendChild(new Comment(text, type));\n\t\t}\n\n\t\t/** @param {string} text @param {string} type */\n\t\tappendLiteral(text, type) {\n\t\t\treturn this.appendToken(new Literal(text, type));\n\t\t}\n\t}\n\n\tclass Root extends Parent {\n\t\t/** @param {string} [type] */\n\t\tconstructor(type) {\n\t\t\tsuper(type);\n\t\t\tthis[Node.rootNode] = this;\n\t\t\t/** @type {ConstructNode[]} */\n\t\t\tthis.constructs = [];\n\n\t\t\t// Only unique property\n\t\t\tthis.nodeCount = 0;\n\t\t}\n\t}\n\n\tclass Literal extends Text {}\n\tclass Comment extends Text {}\n\tclass Closure extends Parent {}\n\tclass Template extends Parent {}\n\tclass Construct extends Parent {}\n\n\tNode.rootNode = symbols.RootNode;\n\tNode.parentNode = symbols.ParentNode;\n\tNode.nextNode = symbols.NextNode;\n\tNode.previousNode = symbols.PreviousNode;\n\tNode.nextTokenNode = symbols.NextTokenNode;\n\tNode.previousTokenNode = symbols.PreviousTokenNode;\n\tNode.construct = symbols.Construct;\n\tNode.trailer = symbols.Trailer;\n\tNode.lastKeyword = symbols.LastKeyword;\n\tNode.lastOperator = symbols.LastOperator;\n\tNode.lastBreak = symbols.LastBreak;\n\tNode.tokenContext = symbols.TokenContext;\n\n\t/** @type {boolean} */\n\tNode.RETAIN_TOKEN_CONTEXTS = true;\n\n\tif (environment.process) {\n\t\tconst inspect = Symbol.for('nodejs.util.inspect.custom');\n\t\tNode.prototype[inspect] = {\n\t\t\t/** @this {Node} @param {number} depth @param {NodeJS.InspectOptions & {stylize: Function}} options*/\n\t\t\t[inspect](depth, {stylize}) {\n\t\t\t\treturn `${stylize(this.constructor.name, 'undefined')} ‹${stylize(this.type, 'special')}›`;\n\t\t\t},\n\t\t}[inspect];\n\n\t\t// console.log(Text.prototype[inspect]);\n\t\t// process.exit();\n\t}\n\n\t((constructor, parentDescriptors, nodeDescriptors) => {\n\t\t({constructor, ...nodeDescriptors} = Object.getOwnPropertyDescriptors(Node.prototype));\n\t\t({constructor, ...parentDescriptors} = {...nodeDescriptors, ...Object.getOwnPropertyDescriptors(Parent.prototype)});\n\t\tfor (const Node of [Root, Closure, Template, Construct, Token, Text, Literal, Comment, Parent]) {\n\t\t\tObject.defineProperties(Node.prototype, Parent.isPrototypeOf(Node) ? parentDescriptors : nodeDescriptors);\n\t\t\tObject.freeze(Object.setPrototypeOf(Node.prototype, null));\n\t\t}\n\t})();\n\n\t// NOTE: Safari/iOS throw with Object.setPrototypeOf(Node, null);\n\tObject.freeze(Node);\n\n\treturn {Node, Root, Construct, Closure, Template, Text, Token};\n})();\n\n/** @typedef {ContentNode|ParentNode} Node */\n/** @typedef {Text|Token} ContentNode */\n/** @typedef {Text} TextNode */\n/** @typedef {Token} TokenNode */\n/** @typedef {Root|Construct|Closure|Template} ParentNode */\n/** @typedef {Root} RootNode */\n/** @typedef {Construct} ConstructNode */\n/** @typedef {Closure} ClosureNode */\n/** @typedef {Template} TemplateNode */\n","﻿import * as symbols from './symbols.js';\n\nexport const constructors = {};\n\n/** @typedef {} Construction */\n\n{\n\tconst {defineProperties} = Object;\n\n\tconst Constructor = (reducer =>\n\t\t/**\n\t\t * @template {symbol} P\n\t\t * @template {symbol[]} Q\n\t\t * @param {P} symbol\n\t\t * @param {Q} symbols\n\t\t * @returns {{<T extends ConstructNode>(node: T): T, symbol: P, symbols: Q}}\n\t\t */\n\t\t(symbol, ...symbols) =>\n\t\t\tdefineProperties(\n\t\t\t\tnode => {\n\t\t\t\t\tif (node[symbol] !== undefined) debugger;\n\t\t\t\t\treturn (node[symbol] = symbols.reduce(reducer, node));\n\t\t\t\t},\n\t\t\t\t{name: {value: symbol['description']}, symbol: {value: symbol}, symbols: {value: symbols}},\n\t\t\t))((construction, symbol) => (symbol in construction || (construction[symbol] = null), construction));\n\n\tconstructors.function = Constructor(\n\t\tsymbols.FunctionConstruct,\n\t\tsymbols.FunctionBody,\n\t\tsymbols.FunctionArguments,\n\t\tsymbols.BindingClause,\n\t\tsymbols.ArgumentConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.class = Constructor(\n\t\tsymbols.ClassConstruct,\n\t\tsymbols.ClassBody,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BlockConstruct,\n\t);\n\n\tconstructors.const = constructors.var = constructors.let = Constructor(\n\t\tsymbols.VariableConstruct,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.import = Constructor(\n\t\tsymbols.ImportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n\tconstructors.export = Constructor(\n\t\tsymbols.ExportConstruct,\n\t\tsymbols.FromClause,\n\t\tsymbols.BindingClause,\n\t\tsymbols.BindingConstruct,\n\t\tsymbols.BlockConstruct,\n\t);\n}\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Node, Root, Construct, Closure, Template, Token} from './tree.js';\nimport * as symbols from './symbols.js';\nimport {constructors} from './constructs.js';\n\nexport const Collator = (() => {\n\tconst {RETAIN_TOKEN_CONTEXTS = false} = Root;\n\n\treturn class Collator {\n\t\t/**\n\t\t * Collates tokens into construct-aligned syntax trees (CAST)\n\t\t * @param {string} goal - only ECMAScript (for now)\n\t\t */\n\t\tconstructor(goal) {\n\t\t\tthis.goal = goal;\n\n\t\t\t/** Incremented with every append operation */\n\t\t\tthis.nodeCount = 0;\n\n\t\t\t/** Incremented with every token iteration */\n\t\t\tthis.tokenCount = 0;\n\n\t\t\t// TODO: Keep either rootNode or firstNode, right?\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.rootNode = undefined;\n\n\t\t\t/** The top-level node retained for the full parse @type {Root} */\n\t\t\tthis.firstNode = undefined;\n\n\t\t\t/** The edges of the collated tree @type {Node} */\n\t\t\tthis.lastNode = undefined;\n\n\t\t\t/** The edges of the generated tokens @type {TokenizerToken} */\n\t\t\tthis.firstToken = this.lastToken = this.nextToken = undefined;\n\n\t\t\t/** Back-pressure token passed to next node @type {TokenizerToken} */\n\t\t\tthis.queuedToken = undefined;\n\n\t\t\t/** Tokenizer-provided context state @type {TokenizerContext} */\n\t\t\tthis.firstContext = this.lastContext = undefined;\n\n\t\t\t/** The construct currently being formed @type {Construct} */\n\t\t\tthis.currentConstructNode = undefined;\n\n\t\t\t/** Overridable logger function */\n\t\t\tthis.log = console.log;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\tcollate(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\n\t\t\t/** @type {ConstructNode} */\n\t\t\tlet constructNode;\n\n\t\t\tthis.nextToken = token.state.nextToken;\n\n\t\t\tthis.queuedToken === undefined ||\n\t\t\t\t(token === this.queuedToken\n\t\t\t\t\t? (this.queuedToken = undefined)\n\t\t\t\t\t: this.throw(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Invalid token: expecting queued token  [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ));\n\n\t\t\tthis.lastToken = token;\n\n\t\t\tif (this.node(token) === undefined) {\n\t\t\t\tcurrentNode = this.lastNode;\n\t\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\t\tswitch (token.punctuator) {\n\t\t\t\t\tcase 'pattern':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'pattern');\n\t\t\t\t\tcase 'comment':\n\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'comment');\n\t\t\t\t\tcase 'quote':\n\t\t\t\t\t\tif (token.group.opener === '\"' || token.group.opener === \"'\") {\n\t\t\t\t\t\t\treturn this.emitFlatNode(token, tokens, 'string');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Template()));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tcurrentNode.appendToken((currentNode = new Closure(`${token.group.opener}…${token.group.closer}`)));\n\t\t\t\t\t\tif ((constructNode = currentNode[Node.previousTokenNode]) !== undefined) {\n\t\t\t\t\t\t\tif ('{' === token.text) {\n\t\t\t\t\t\t\t\t// if (constructNode[symbols.BlockConstruct] === null) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.BindingConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingClause] = currentNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = currentNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\t\t\t} else if (constructNode[symbols.ClassBody] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.BlockConstruct] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ClassBody] = currentNode[symbols.ClassBody] = currentNode;\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct] != null &&\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionConstruct][symbols.FunctionBody] === null\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t(constructNode = currentNode[symbols.FunctionConstruct] = constructNode[symbols.FunctionConstruct])[\n\t\t\t\t\t\t\t\t\t\tsymbols.BlockConstruct\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\n\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionBody] = (currentNode[symbols.FunctionArguments] =\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct])[symbols.FunctionBody] = currentNode[\n\t\t\t\t\t\t\t\t\t\tsymbols.FunctionBody\n\t\t\t\t\t\t\t\t\t] = currentNode;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// debugger;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t} else if ('(' === token.text) {\n\t\t\t\t\t\t\t\tif (constructNode[symbols.ArgumentConstruct] === null) {\n\t\t\t\t\t\t\t\t\tconstructNode[symbols.ArgumentConstruct] = currentNode;\n\t\t\t\t\t\t\t\t\tif (constructNode[symbols.FunctionArguments] === null) {\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionConstruct] = constructNode;\n\t\t\t\t\t\t\t\t\t\tcurrentNode[symbols.FunctionBody] = currentNode[symbols.BlockConstruct] = null;\n\t\t\t\t\t\t\t\t\t\tconstructNode[symbols.FunctionArguments] = currentNode;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdebugger;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.throw(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Invalid delimiter: ${token.punctuator} [${token.goal.name}:${token.lineNumber}:${token.columnNumber}]`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(this.lastContext = tokenContext)[symbols.ContextNode] = this.lastNode = currentNode;\n\t\t\t}\n\n\t\t\treturn this.emitTokenNode(token, tokens);\n\t\t}\n\n\t\t/** @param {TokenizerToken} token */\n\t\tnode(token) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {TokenizerContext} */\n\t\t\tlet tokenContext;\n\t\t\ttokenContext = token.context || token.state.lastTokenContext;\n\n\t\t\tif (this.firstNode === undefined) {\n\t\t\t\tthis.firstToken = token;\n\t\t\t\t(this.firstContext = this.lastContext = tokenContext)[\n\t\t\t\t\tsymbols.ContextNode\n\t\t\t\t] = this.lastNode = currentNode = this.rootNode = this.firstNode = new Root(token.goal.name);\n\t\t\t}\n\t\t\t// Are we building a construct?\n\t\t\telse if (this.currentConstructNode !== undefined) {\n\t\t\t\tcurrentNode = this.currentConstructNode;\n\t\t\t}\n\t\t\t// Are we where we want to be?\n\t\t\telse if (\n\t\t\t\t(this.lastNode = currentNode =\n\t\t\t\t\t(this.lastContext === tokenContext && this.lastNode) || tokenContext[symbols.ContextNode]) !== undefined\n\t\t\t) {\n\t\t\t\tthis.lastContext = tokenContext;\n\t\t\t} else if ((this.lastNode = this.lastContext[symbols.ContextNode]) === undefined) {\n\t\t\t\tthis.throw(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Invalid state: lastContext = ${this.lastContext && this.lastContext.number} [${token.goal.name}:${\n\t\t\t\t\t\t\ttoken.lineNumber\n\t\t\t\t\t\t}:${token.columnNumber}]`,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn currentNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitConstructNode(token, tokens) {\n\t\t\t/** @type {Root | Closure} */\n\t\t\tlet currentNode;\n\t\t\t/** @type {Construct} */\n\t\t\tlet constructNode;\n\n\t\t\tcurrentNode = this.lastNode;\n\t\t\tconstructNode = this.lastNode = this.currentConstructNode = new Construct();\n\n\t\t\tif (token.text in constructors) constructors[token.text](constructNode);\n\t\t\tRETAIN_TOKEN_CONTEXTS && (constructNode[Node.tokenContext] = this.lastContext);\n\t\t\tcurrentNode[Node.rootNode].constructs.push(constructNode);\n\t\t\tcurrentNode.appendToken(constructNode);\n\t\t\tconstructNode[Node.construct] = currentNode[Node.construct];\n\t\t\tcurrentNode[Node.construct] = '';\n\t\t\tconstructNode.appendToken(new Token(token, token.text));\n\n\t\t\tfor (\n\t\t\t\t;\n\t\t\t\tthis.currentConstructNode === constructNode &&\n\t\t\t\t(token = tokens.next().value) !== undefined &&\n\t\t\t\ttoken.isDelimiter !== true;\n\t\t\t\tthis.collate(token, tokens) === undefined ||\n\t\t\t\t((constructNode.type = constructNode[Node.construct]), (token = undefined))\n\t\t\t);\n\n\t\t\tconstructNode[Symbol.toStringTag] = `${constructNode[Symbol.toStringTag]} ⟨${constructNode.type}⟩`;\n\t\t\tconstructNode[Node.construct] = '';\n\t\t\tthis.currentConstructNode = undefined;\n\t\t\tthis.queuedToken = token;\n\t\t\tthis.lastNode = currentNode;\n\n\t\t\treturn constructNode;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens @param {string} type */\n\t\temitFlatNode(token, tokens, type) {\n\t\t\tconst {contextDepth, state} = token;\n\t\t\tconst fragments = [token.text];\n\t\t\twhile ((this.nextToken = state.nextToken).contextDepth >= contextDepth) {\n\t\t\t\tfragments.push((this.lastToken = tokens.next().value).text);\n\t\t\t}\n\t\t\tconst child =\n\t\t\t\ttype === 'comment'\n\t\t\t\t\t? this.lastNode.appendComment(fragments.join(''), type)\n\t\t\t\t\t: this.lastNode.appendLiteral(fragments.join(''), type);\n\t\t\tchild.firstToken = token;\n\t\t\tchild.lastToken = this.lastToken;\n\t\t\treturn child;\n\t\t}\n\n\t\t/** @param {TokenizerToken} token @param {TokenizerTokens} tokens */\n\t\temitTokenNode(token, tokens) {\n\t\t\t/** @type {string} */\n\t\t\tlet type;\n\t\t\t/** @type {symbol} */\n\t\t\tlet symbol;\n\t\t\t/** @type {(typeof constructors)[keyof (typeof constructors)]} */\n\t\t\tlet constructor;\n\n\t\t\tlet constructNode;\n\t\t\tconst currentNode = (constructNode = this.lastNode);\n\t\t\tconst currentConstructText = currentNode[Node.construct];\n\n\t\t\tswitch ((type = token.type)) {\n\t\t\t\tcase 'inset':\n\t\t\t\tcase 'whitespace':\n\t\t\t\t\treturn currentNode.appendText(token.text, token.type);\n\t\t\t\tcase 'default':\n\t\t\t\tcase 'identifier':\n\t\t\t\t\tif ((constructNode = currentNode)[symbols.BindingClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.BindingClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((constructNode = currentNode) && constructNode[symbols.ExtendsClause] === null) {\n\t\t\t\t\t\tsymbol = symbols.ExtendsClause;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t}\n\t\t\t\tcase 'number':\n\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'break':\n\t\t\t\t\tcurrentNode[Node.lastBreak] = token;\n\t\t\t\t\t// TODO: GeneratorMethod\n\t\t\t\t\tif (currentConstructText.endsWith('async')) {\n\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\ttype = 'break';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'operator':\n\t\t\t\t\tcurrentNode[Node.lastOperator] = token;\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tif (currentConstructText.endsWith('function')) {\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] += '*';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '.':\n\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\tcase ':':\n\t\t\t\t\t\tcase ';':\n\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'keyword':\n\t\t\t\t\tcurrentNode[Node.lastKeyword] = token;\n\n\t\t\t\t\tswitch (token.text) {\n\t\t\t\t\t\tcase 'import':\n\t\t\t\t\t\t\ttype = currentNode[Node.construct] = token.text;\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'export':\n\t\t\t\t\t\t\ttoken.contextDepth\n\t\t\t\t\t\t\t\t? (currentNode[Node.construct] = '')\n\t\t\t\t\t\t\t\t: (type = currentNode[Node.construct] = token.text);\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'const':\n\t\t\t\t\t\tcase 'var':\n\t\t\t\t\t\tcase 'let':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\tcase 'default':\n\t\t\t\t\t\t\tif (currentConstructText !== 'export') {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'async':\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === 'import' || currentConstructText === 'export'\n\t\t\t\t\t\t\t\t\t? `${currentNode[Node.construct]} ${token.text}`\n\t\t\t\t\t\t\t\t\t: token.text;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'function':\n\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tconstructor = constructors[token.text];\n\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\tcurrentNode[Node.construct] =\n\t\t\t\t\t\t\t\tcurrentConstructText === '' ? token.text : `${currentNode[Node.construct]} ${token.text}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'extends':\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ClassConstruct] !== undefined &&\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] === undefined\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\ttype = token.text;\n\t\t\t\t\t\t\t\tcurrentNode[symbols.ExtendsClause] = null;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcurrentNode[Node.construct] = '';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (constructor !== undefined && constructor.symbol in currentNode) debugger;\n\t\t\tif (currentConstructText !== currentNode[Node.construct]) {\n\t\t\t\tif (this.currentConstructNode === undefined) {\n\t\t\t\t\treturn this.emitConstructNode(token, tokens);\n\t\t\t\t} else if (this.currentConstructNode === currentNode) {\n\t\t\t\t\tif (currentNode[Node.construct] === '') {\n\t\t\t\t\t\tif (symbol) debugger;\n\t\t\t\t\t\treturn (this.currentConstructNode = undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (constructor) constructor(currentNode);\n\t\t\t}\n\n\t\t\tconst tokenNode = currentNode.appendToken(new Token(token, type));\n\n\t\t\tif (symbol !== undefined) {\n\t\t\t\tconstructNode[symbol] = tokenNode;\n\t\t\t\tswitch (symbol) {\n\t\t\t\t\tcase symbols.BindingClause:\n\t\t\t\t\t\tconstructNode[symbols.BindingConstruct] = constructNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tokenNode;\n\t\t}\n\n\t\tthrow(error) {\n\t\t\tthrow error;\n\t\t}\n\t};\n})();\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {environment} from '../environment.js';\n\nexport const {ModuleSource, ModuleBinding, DeclarationType} = (() => {\n\tconst DeclarationType = {\n\t\t['function']: 'FunctionDeclaration',\n\t\t['async function']: 'AsyncFunctionDeclaration',\n\t\t['function*']: 'GeneratorFunctionDeclaration',\n\t\t['async function*']: 'AsyncGeneratorFunctionDeclaration',\n\t\t['class']: 'ClassDeclaration',\n\t\t['const']: 'VariableDeclaration',\n\t\t['let']: 'VariableDeclaration',\n\t\t['var']: 'VariableDeclaration',\n\t\t['import']: 'ImportDeclaration',\n\t\t['export']: 'ExportDeclaration',\n\t\t['export default']: 'ExportDefaultAssignmentExpression',\n\t};\n\n\t/** @param {Partial<ModuleBinding>} [record] */\n\tclass ModuleBinding {\n\t\tconstructor(record) {\n\t\t\tif (record) {\n\t\t\t\t({\n\t\t\t\t\tbindingIntent: this.bindingIntent,\n\t\t\t\t\tbindingDeclaration: this.bindingDeclaration,\n\t\t\t\t\tinternalType: this.internalType,\n\t\t\t\t\texportedType: this.exportedType,\n\t\t\t\t\tinternalIdentifier: this.internalIdentifier,\n\t\t\t\t\texportedIdentifier: this.exportedIdentifier,\n\t\t\t\t\timportedIdentifier: this.importedIdentifier,\n\t\t\t\t\texternalModuleSpecifier: this.externalModuleSpecifier,\n\t\t\t\t} = record);\n\n\t\t\t\t// Object.defineProperty(this, 'bindingDescription', {value: record.bindingDescription, enumerable: false});\n\t\t\t} else {\n\t\t\t\t/** @type {'import'|'export'|undefined} */\n\t\t\t\tthis.bindingIntent = undefined;\n\t\t\t\t/** @type {DeclarationType|undefined} */\n\t\t\t\tthis.bindingDeclaration = undefined;\n\t\t\t\t/** @type {'const'|'let'|'var'|'function'|'class'|'binding'|'void'|undefined} */\n\t\t\t\tthis.internalType = undefined;\n\t\t\t\t/** @type {'constant'|'readonly'|'symbolic'|undefined} */\n\t\t\t\tthis.exportedType = undefined;\n\t\t\t\t/** @type {string|undefined} */\n\t\t\t\tthis.internalIdentifier = this.exportedIdentifier = this.importedIdentifier = undefined;\n\t\t\t\t/** @type {string|undefined} */\n\t\t\t\tthis.externalModuleSpecifier = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tModuleBinding.DeclarationType = DeclarationType;\n\n\tclass ModuleSource {\n\t\t/** @param {Partial<ModuleSource>} [record] */\n\t\tconstructor(record) {\n\t\t\tif (record) {\n\t\t\t\t({\n\t\t\t\t\tcompiledText: this.compiledText,\n\t\t\t\t\tcompiledEvaluatorText: this.compiledEvaluatorText,\n\t\t\t\t\tsourceText: this.sourceText,\n\t\t\t\t\tsourceEvaluatorText: this.sourceEvaluatorText,\n\t\t\t\t\tsourceType: this.sourceType,\n\t\t\t\t\trootNode: this.rootNode,\n\t\t\t\t\tfragments: this.fragments,\n\t\t\t\t\tbindings: this.bindings,\n\t\t\t\t\tconstructs: this.constructs,\n\t\t\t\t\terrors: this.errors,\n\t\t\t\t} = record);\n\t\t\t} else {\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.compiledText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.compiledEvaluatorText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceEvaluatorText = undefined;\n\t\t\t\t/** @type {string} */\n\t\t\t\tthis.sourceType = undefined;\n\t\t\t\t/** @type {RootNode} */\n\t\t\t\tthis.rootNode = undefined;\n\t\t\t\t/** @type {string[]} */\n\t\t\t\tthis.fragments = undefined;\n\t\t\t\t/** @type {BindingRecord[]} */\n\t\t\t\tthis.bindings = undefined;\n\t\t\t\t/** @type {ConstructNode[]} */\n\t\t\t\tthis.constructs = undefined;\n\t\t\t\t/** @type {Error[]} */\n\t\t\t\tthis.errors = undefined;\n\t\t\t}\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.compiledText;\n\t\t}\n\n\t\t/** @param {string} message @param {{lineNumber: number, columnNumber: number}} properties */\n\t\terror(message, properties, ErrorClass = Error) {\n\t\t\tconst error = Object.assign(new ErrorClass(message), properties);\n\t\t\tthis.errors === undefined ? (this.errors = [error]) : this.errors.push(error);\n\t\t}\n\t}\n\n\tif (environment.process) {\n\t\tconst inspect = Symbol.for('nodejs.util.inspect.custom');\n\t\tModuleSource.prototype[inspect] = ModuleBinding.prototype[inspect] = {\n\t\t\t/** @this {Node} @param {number} depth @param {NodeJS.InspectOptions & {stylize: Function}} options*/\n\t\t\t[inspect](depth, {stylize}) {\n\t\t\t\treturn `${stylize(this.constructor.name, 'undefined')} ‹${stylize(\n\t\t\t\t\t`${this.sourceText.length} chars`,\n\t\t\t\t\t'number',\n\t\t\t\t)}›`;\n\t\t\t},\n\t\t}[inspect];\n\t\t// ModuleBinding.prototype[inspect] = {\n\t\t// \t/** @this {Node} @param {number} depth @param {NodeJS.InspectOptions & {stylize: Function}} options*/\n\t\t// \t[inspect](depth, {stylize}) {\n\t\t// \t\treturn `${stylize(this.constructor.name, 'undefined')} ‹${stylize(this.sourceText, 'special')}›`;\n\t\t// \t},\n\t\t// }[inspect];\n\t}\n\n\treturn {ModuleSource, ModuleBinding, DeclarationType};\n})();\n\n/** @typedef {ModuleSource} SourceRecord */\n/** @typedef {ModuleBinding} BindingRecord */\n/** @typedef {keyof (typeof DeclarationType)} DeclarationType */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// const trace = /** @type {[function, any[]][]} */ [];\n\nclass Matcher extends RegExp {\n  /**\n   * @template T\n   * @param {Matcher.Pattern} pattern\n   * @param {Matcher.Flags} [flags]\n   * @param {Matcher.Entities} [entities]\n   * @param {T} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    // trace.push([new.target, [...arguments]]);\n    //@ts-ignore\n    super(pattern, flags);\n    // Object.assign(this, RegExp.prototype, new.target.prototype);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    /** @type {T} */\n    this.state = state;\n    this.capture = this.capture;\n    this.exec = this.exec;\n    // this.test = this.test;\n    ({\n      // LOOKAHEAD: this.LOOKAHEAD = Matcher.LOOKAHEAD,\n      // INSET: this.INSET = Matcher.INSET,\n      // OUTSET: this.OUTSET = Matcher.OUTSET,\n      DELIMITER: this.DELIMITER = Matcher.DELIMITER,\n      UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN,\n    } = new.target);\n  }\n\n  /**\n   * @param {string} source\n   * @returns {MatcherMatchResult}\n   */\n  exec(source) {\n    /** @type {MatcherMatchArray} */\n    const match = super.exec(source);\n\n    // @ts-ignore\n    if (match === null) return null;\n\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n    // @ts-ignore\n    return match;\n  }\n\n  /**\n   * @param {Matcher.PatternFactory} factory\n   * @param {Matcher.Flags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    // const pattern = factory(entity => void entities.push(((entity != null || undefined) && entity) || undefined));\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags = '',\n      iterative;\n    for (const source of sources) {\n      if (!source || (typeof source !== 'string' && typeof source.flags !== 'string')) continue;\n      for (const flag of source.flags || source)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    // console.log('%o: ', flags, ...sources);\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        (typeof value !== 'symbol' && `${value}`)) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) =>\n      values\n        .map(sequence.span)\n        .filter(Boolean)\n        .join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n}\n\nexport const {\n  // INSET = (Matcher.INSET = /* Symbol.for */ 'INSET'),\n  // OUTSET = (Matcher.OUTSET = /* Symbol.for */ 'OUTSET'),\n  DELIMITER = (Matcher.DELIMITER = /* Symbol.for */ 'DELIMITER'),\n  UNKNOWN = (Matcher.UNKNOWN = /* Symbol.for */ 'UNKNOWN'),\n  // LOOKAHEAD = (Matcher.LOOKAHEAD = /* Symbol.for */ 'LOOKAHEAD'),\n  escape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n  sequence,\n  matchAll = (Matcher.matchAll =\n    /**\n     * @template {RegExp} T\n     * @type {(string: Matcher.Text, matcher: T) => Matcher.Iterator<T> }\n     */\n    //@ts-ignore\n    (() =>\n      Function.call.bind(\n        // String.prototype.matchAll || // TODO: Uncomment eventually\n        {\n          /**\n           * @this {string}\n           * @param {RegExp | string} pattern\n           */\n          *matchAll() {\n            const matcher =\n              arguments[0] &&\n              (arguments[0] instanceof RegExp\n                ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                : RegExp(arguments[0], 'g'));\n            const string = String(this);\n\n            if (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n            for (\n              let match, lastIndex = -1;\n              lastIndex <\n              ((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n              yield match, matcher.lastIndex = lastIndex\n            );\n          },\n        }.matchAll,\n      ))()),\n} = Matcher;\n\n/** @typedef {MatcherFlags} Matcher.Flags */\n/** @typedef {MatcherText} Matcher.Text */\n/** @typedef {MatcherOperator} Matcher.Operator */\n/** @typedef {MatcherIdentity} Matcher.Identity */\n/** @typedef {MatcherEntity} Matcher.Entity */\n/** @typedef {MatcherCapture} Matcher.Capture */\n/** @typedef {MatcherEntityFactory} Matcher.EntityFactory */\n/** @typedef {MatcherPatternFactory} Matcher.PatternFactory */\n/** @typedef {MatcherPattern} Matcher.Pattern */\n/** @typedef {MatcherEntities} Matcher.Entities */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchArray} Matcher.MatchArray<T> */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchResult} Matcher.MatchResult<T> */\n/** @template {RegExp} T @typedef {MatcherIterator} Matcher.Iterator<T> */\n\nexport {Matcher};\n","﻿export const {\n  ranges,\n  BinaryDigit,\n  DecimalDigit,\n  ControlLetter,\n  HexLetter,\n  HexDigit,\n  GraveAccent,\n  Null,\n  ZeroWidthNonJoiner,\n  ZeroWidthJoiner,\n  ZeroWidthNoBreakSpace,\n  Whitespace,\n  ID_Start,\n  ID_Continue,\n  UnicodeIDStart,\n  UnicodeIDContinue,\n} = (factories => {\n  const {String, RegExp, Symbol, Object} = globalThis;\n  const {raw} = String;\n  const {replace: ReplaceSymbol} = Symbol;\n  const {defineProperty, create} = Object;\n\n  const RegExpClass = /^(?:\\[(?=.*?\\]$)|)((?:\\\\.|[^\\\\\\n\\[\\]]*)*)\\]?$/;\n\n  class RegExpRange extends RegExp {\n    constructor(source, flags) {\n      let range;\n      range =\n        source && typeof source === 'object' && source instanceof RegExp\n          ? (flags === undefined && (flags = source.flags), source.source)\n          : (typeof source === 'string' ? source : (source = `${source || ''}`)).trim() &&\n            (source = RegExpClass[ReplaceSymbol](source, '[$1]'));\n\n      if (!range || !RegExpClass.test(range)) {\n        throw TypeError(`Invalid Regular Expression class range: ${range}`);\n      }\n\n      typeof flags === 'string' || (flags = `${flags || ''}` || '');\n\n      flags.includes('u') || !(source.includes('\\\\p{') || source.includes('\\\\u')) || (flags += 'u');\n      super(source, flags);\n      defineProperty(this, 'range', {value: range.slice(1, -1), enumerable: true, writable: false});\n    }\n\n    toString() {\n      return this.range;\n    }\n\n    static range(strings, ...values) {\n      return new (this || RegExpRange)(raw(strings, ...values));\n    }\n  }\n\n  const safeRange = (strings, ...values) => {\n    try {\n      return RegExpRange.range(strings, ...values).source.slice(1, -1);\n    } catch (exception) {}\n  };\n\n  const descriptors = {\n    ranges: {\n      get() {\n        return ranges;\n      },\n      enumerable: true,\n      configurable: false,\n    },\n  };\n\n  for (const property in factories) {\n    descriptors[property] = {\n      get() {\n        const value = factories[property](safeRange, ranges);\n        defineProperty(ranges, property, {value, enumerable: true, configurable: false});\n        return value;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n  }\n\n  /** @type {Record<keyof factories, string>} */\n  const ranges = create(null, descriptors);\n\n  return ranges;\n})({\n  UnicodeIDStart: (range, {ID_Start}) => range`_$${ID_Start}`,\n  UnicodeIDContinue: (range, {ID_Continue, ZeroWidthNonJoiner, ZeroWidthJoiner, CombiningGraphemeJoiner}) =>\n    range`$${ID_Continue}${ZeroWidthNonJoiner}${ZeroWidthJoiner}${CombiningGraphemeJoiner}`,\n  Null: range => range`\\0`,\n  BinaryDigit: range => range`01`,\n  DecimalDigit: range => range`0-9`,\n  ControlLetter: range => range`a-zA-Z`,\n  HexLetter: range => range`a-fA-F`,\n  HexDigit: (range, {DecimalDigit, HexLetter}) => range`${DecimalDigit}${HexLetter}`,\n  GraveAccent: range => range`${'`'}`,\n  ZeroWidthNonJoiner: range => range`\\u200c`,\n  ZeroWidthJoiner: range => range`\\u200d`,\n  ZeroWidthNoBreakSpace: range => range`\\ufeff`,\n  CombiningGraphemeJoiner: range => range`\\u034f`,\n  Whitespace: (range, {ZeroWidthNoBreakSpace}) => range`\\s${ZeroWidthNoBreakSpace}`,\n  ID_Start: range =>\n    range`\\p{ID_Start}` ||\n    range`A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n  ID_Continue: range =>\n    range`\\p{ID_Continue}` ||\n    range`0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc`,\n});\n","﻿export const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nconst EmptyTokenArray = (EmptyTokenArray =>\n  Object.freeze(\n    new (Object.freeze(Object.freeze(Object.setPrototypeOf(EmptyTokenArray.prototype, null)).constructor, null))(),\n  ))(\n  class EmptyTokenArray {\n    *[Symbol.iterator]() {}\n  },\n);\n\n/** @type {(string: string, sequence: string , index?: number) => number} */\nexport const indexOf = Function.call.bind(String.prototype.indexOf);\n/** @type {(string: string) => number} */\nexport const countLineBreaks = text => {\n  let lineBreaks = 0;\n  for (let index = -1; (index = indexOf(text, '\\n', index + 1)) > -1; lineBreaks++);\n  return lineBreaks;\n};\n\nexport const createBaselineTokenizer = () => {\n  return class Tokenizer {\n    *tokenize(sourceText) {\n      let match, lastIndex;\n      const matcher = RegExp(none.matcher);\n      const string = String(sourceText || '');\n\n      lastIndex = 0;\n      while ((match = matcher.exec(string))) {\n        const {0: text, index} = match;\n        const pre = lastIndex < index && string.slice(lastIndex, index);\n        lastIndex = matcher.lastIndex;\n        pre && (yield {text: pre, lineBreaks: countLineBreaks(pre)});\n        yield {text, lineBreaks: countLineBreaks(text)};\n      }\n    }\n  };\n};\n\n/** @param {typeof import('./tokenizer.js')['Tokenizer']} [Tokenizer] */\nexport const createParser = (Tokenizer = createBaselineTokenizer()) =>\n  class Parser {\n    constructor(options) {\n      if (options) {\n        const {mode, tokenizer, url, modes} = options;\n        if (mode) {\n          this.register((this.mode = mode));\n          tokenizer && this[TOKENIZERS].set(mode, tokenizer);\n        }\n        if (modes) for (const id in modes) this.register(modes[id]);\n        url && (this.MODULE_URL = url);\n      }\n    }\n\n    /**\n     * @param source {string}\n     * @param state {{sourceType?: string}}\n     */\n    tokenize(source, state = {}) {\n      const {\n        options: {\n          sourceType,\n          mode = (state.options.mode = (sourceType && this.get(sourceType)) || this.mode || none),\n        } = (state.options = {}),\n      } = state;\n      let tokenizer = mode && this[TOKENIZERS].get(mode);\n      if (!source || !mode) return EmptyTokenArray;\n      if (!tokenizer) {\n        if (typeof Tokenizer !== 'function') {\n          throw TypeError(\n            `Parse factory expected the first argument to be a Tokenizer constructor (not ${typeof Tokenizer}) — either define a tokenizer mapping for \"${sourceType ||\n              mode.syntax ||\n              'markup'}\" or pass the a constructor to the factory.`,\n          );\n        }\n        this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n      }\n      state.parser = this;\n      state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n      return tokenizer.tokenize(source, state);\n    }\n\n    get [TOKENIZERS]() {\n      return define(this, TOKENIZERS, new WeakMap());\n    }\n    get [MAPPINGS]() {\n      return define(this, MAPPINGS, Object.create(null));\n    }\n\n    get [MODES]() {\n      return define(this, MODES, Object.create(null));\n    }\n\n    get(id = 'default') {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) return modes[id];\n      let mapping = mappings[id];\n      !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n      if (mapping) {\n        const {syntax, mode, factory, options} = mapping;\n        if (mode) {\n          return (modes[id] = mode);\n        }\n        if (factory) {\n          if (options.requires && options.requires.length > 0) {\n            const list = [];\n            for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n            if (list.length) {\n              list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n              throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n            }\n          }\n          return (mapping.mode = modes[id] = factory(options, modes));\n        }\n      }\n    }\n\n    /** @param {ModeFactory | Mode} mode @param {ModeOptions} [options] */\n    register(mode, options) {\n      if (!this[MAPPINGS]) return;\n\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      const factory = typeof mode === 'function' && mode;\n      const {syntax, aliases = (options.aliases = []), preregister, tokenizer} = ({\n        syntax: options.syntax = mode.syntax,\n      } = options = {\n        syntax: undefined,\n        ...(factory ? factory.defaults : mode),\n        ...options,\n      });\n\n      if (!syntax || typeof syntax !== 'string') {\n        throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n      }\n\n      if (preregister) preregister(this);\n\n      if (mappings[syntax]) {\n        if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n        throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n      }\n\n      const ids = [syntax];\n\n      if (aliases && aliases.length > 0) {\n        for (const alias of aliases) {\n          const mapping = mappings[alias];\n          if (!alias || typeof alias !== 'string') {\n            throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n          }\n\n          if (alias in modes || (mapping && (mapping.syntax === alias || mapping.syntax[0] === alias[0]))) {\n            continue;\n          }\n\n          if (mapping) {\n            Object.defineProperty(mappings, alias, {writable: true, configurable: true});\n            delete mappings[alias];\n            ids.push(alias);\n          }\n\n          ids.push(alias);\n        }\n      }\n\n      const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n      const descriptor = {value: mapping, writable: false, configurable: true};\n\n      for (const id of ids) Object.defineProperty(mappings, id, descriptor);\n\n      if (tokenizer) this[TOKENIZERS].set(mode, tokenizer);\n    }\n\n    unregister(id) {\n      const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n      if (id in modes) {\n        throw ReferenceError(`Cannot unregister \"${id}\" since it's already been bootstrapped for use.`);\n      }\n      Object.defineProperty(mappings, id, {writable: true, configurable: true});\n      delete mappings[id];\n    }\n\n    /** @param {string} mode @param {string[]} requires */\n    requires(mode, requires) {\n      const missing = [];\n      for (const mode of requires) {\n        mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n      }\n      if (!missing.length) return;\n      throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n    }\n  };\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n","﻿//@ts-check\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\n/** @typedef {typeof stats} ContextStats */\nconst stats = {\n  captureCount: 0,\n  contextCount: 0,\n  tokenCount: 0,\n  nestedCaptureCount: 0,\n  nestedContextCount: 0,\n  nestedTokenCount: 0,\n};\n\n/** @param {State} state */\n// TODO: Document initializeState\nexport const initializeState = state => {\n  /** @type {Groups} state */\n  (state.groups = []).closers = [];\n  state.lineOffset = state.lineIndex = 0;\n  state.totalCaptureCount = state.totalTokenCount = 0;\n\n  /** @type {Contexts} */\n  const contexts = (state.contexts = Array(100));\n  const context = initializeContext({\n    id: `«${state.matcher.goal.name}»`,\n    //@ts-ignore\n    number: (contexts.count = state.totalContextCount = 1),\n    depth: 0,\n    parentContext: undefined,\n    goal: state.matcher.goal,\n    group: undefined,\n    state,\n  });\n  state.lastTokenContext = void (state.firstTokenContext = state.nextTokenContext = contexts[\n    -1\n  ] = state.context = state.lastContext = context);\n};\n\n/** @param {State} state */\n// TODO: Document initializeState\nexport const finalizeState = state => {\n  const isValidState =\n    state.firstTokenContext === state.nextTokenContext &&\n    state.nextToken === undefined &&\n    state.nextOffset === undefined;\n\n  const {\n    flags: {debug = false} = {},\n    options: {console: {log = console.log, warn = console.warn} = console} = {},\n    error = (state.error = !isValidState ? 'Unexpected end of tokenizer state' : undefined),\n  } = state;\n\n  // if (!debug && error) throw Error(error);\n\n  // Finalize latent token artifacts\n  state.nextTokenContext = void (state.lastTokenContext = state.nextTokenContext);\n\n  // Finalize tokenization artifacts\n  // NOTE: don't forget to uncomment after debugging\n  state.context = state.contexts = state.groups = undefined;\n\n  // Output to console when necessary\n  debug && (error ? warn : log)(`[tokenizer]: ${error || 'done'} — %O`, state);\n};\n\n/** @param {Match} match @param {State} state */\nexport const createToken = (match, state) => {\n  let currentGoal,\n    // goalName,\n    currentGoalType,\n    contextId,\n    contextNumber,\n    contextDepth,\n    contextGroup,\n    parentContext,\n    tokenReference,\n    tokenContext,\n    nextToken,\n    text,\n    type,\n    fault,\n    punctuator,\n    offset,\n    lineInset,\n    lineBreaks,\n    isDelimiter,\n    isComment,\n    isWhitespace,\n    flatten,\n    fold,\n    columnNumber,\n    lineNumber,\n    tokenNumber,\n    captureNumber,\n    hint;\n\n  const {\n    context: currentContext,\n    nextContext,\n    lineIndex,\n    lineOffset,\n    nextOffset,\n    lastToken,\n    lastTrivia,\n    lastAtom,\n  } = state;\n\n  /* Capture */\n  ({\n    0: text,\n    capture: {inset: lineInset},\n    identity: type,\n    flatten,\n    fault,\n    punctuator,\n    index: offset,\n  } = match);\n\n  if (!text) return;\n\n  ({\n    id: contextId,\n    number: contextNumber,\n    depth: contextDepth,\n    goal: currentGoal,\n    group: contextGroup,\n    parentContext,\n  } = tokenContext = (type === 'opener' && nextContext) || currentContext);\n\n  currentGoalType = currentGoal.type;\n\n  nextOffset &&\n    (state.nextOffset = void (nextOffset > offset && (text = match.input.slice(offset, nextOffset)),\n    (state.matcher.lastIndex = nextOffset)));\n\n  lineBreaks = (text === '\\n' && 1) || countLineBreaks(text);\n  isDelimiter = type === 'closer' || type === 'opener';\n  isWhitespace = !isDelimiter && (type === 'whitespace' || type === 'break' || type === 'inset');\n\n  (isComment = type === 'comment' || punctuator === 'comment')\n    ? (type = 'comment')\n    : type || (type = (!isDelimiter && !fault && currentGoalType) || 'text');\n\n  if (lineBreaks) {\n    state.lineIndex += lineBreaks;\n    state.lineOffset = offset + (text === '\\n' ? 1 : text.lastIndexOf('\\n'));\n  }\n\n  /* Flattening / Token Folding */\n\n  flatten === false || flatten === true || (flatten = !isDelimiter && currentGoal.flatten === true);\n\n  captureNumber = ++tokenContext.captureCount;\n  state.totalCaptureCount++;\n\n  if (\n    (fold = flatten) && // fold only if flatten is allowed\n    lastToken != null &&\n    ((lastToken.contextNumber === contextNumber && lastToken.fold === true) ||\n      (type === 'closer' && flatten === true)) && // never fold across contexts\n    (lastToken.type === type || (currentGoal.fold === true && (lastToken.type = currentGoalType)))\n  ) {\n    lastToken.captureCount++;\n    lastToken.text += text;\n    lineBreaks && (lastToken.lineBreaks += lineBreaks);\n  } else {\n    // The generator retains this new as state.nextToken\n    //   which means tokenContext is state.nextTokenContext\n    //   and the fact that we are returning a token here will\n    //   yield the current state.nextToken so we need to also\n    //   set state.lastTokenContext to match\n    //\n    //   TODO: Add parity tests for tokenizer's token/context states\n    state.lastTokenContext = state.nextTokenContext;\n    state.nextTokenContext = tokenContext;\n\n    /* Token Creation */\n    flatten = false;\n    columnNumber = 1 + (offset - lineOffset || 0);\n    lineNumber = 1 + (lineIndex || 0);\n\n    tokenNumber = ++tokenContext.tokenCount;\n    state.totalTokenCount++;\n\n    // hint = `${(isDelimiter ? type : currentGoalType && `in-${currentGoalType}`) ||\n    hint = `${\n      currentGoalType\n        ? isDelimiter && currentGoal.opener === text\n          ? `${type}`\n          : `in-${currentGoalType}`\n        : isDelimiter\n        ? type\n        : ''\n    }\\n\\n${contextId} #${tokenNumber}\\n(${lineNumber}:${columnNumber})`;\n\n    tokenReference = isWhitespace || isComment ? 'lastTrivia' : 'lastAtom';\n\n    nextToken = tokenContext[tokenReference] = state[tokenReference] = tokenContext.lastToken = state.lastToken = {\n      text,\n      type,\n      offset,\n      punctuator,\n      hint,\n      lineOffset,\n      lineBreaks,\n      lineInset,\n      columnNumber,\n      lineNumber,\n      captureNumber,\n      captureCount: 1,\n      tokenNumber,\n      contextNumber,\n      contextDepth,\n\n      isWhitespace, // whitespace:\n      isDelimiter, // delimiter:\n      isComment, // comment:\n\n      // FIXME: Nondescript\n      fault,\n      fold,\n      flatten,\n\n      goal: currentGoal,\n      group: contextGroup,\n      state,\n      context: tokenContext,\n    };\n  }\n  /* Context */\n  !nextContext ||\n    ((state.nextContext = undefined), nextContext === currentContext) ||\n    ((state.lastContext = currentContext),\n    currentContext === nextContext.parentContext\n      ? (state.totalContextCount++,\n        (nextContext.precedingAtom = lastAtom),\n        (nextContext.precedingTrivia = lastTrivia),\n        (nextContext.precedingToken = lastToken))\n      : ((parentContext.nestedContextCount += currentContext.nestedContextCount + currentContext.contextCount),\n        (parentContext.nestedCaptureCount += currentContext.nestedCaptureCount + currentContext.captureCount),\n        (parentContext.nestedTokenCount += currentContext.nestedTokenCount + currentContext.tokenCount)),\n    (state.context = nextContext));\n\n  return nextToken;\n};\n\n/**\n * @template {{}} T\n * @param {Partial<Context>} context\n * @param {T} [properties]\n * @returns {Context & T}\n */\n//@ts-ignore\nexport const initializeContext = (context, properties) => {\n  Object.assign(context, stats, properties);\n  //@ts-ignore\n  context.goal && context.goal.initializeContext && context.goal.initializeContext(context);\n  //@ts-ignore\n  return context;\n};\n\nexport const capture = (identity, match, text) => {\n  match.capture[(match.identity = identity)] = text || match[0];\n  (match.fault = identity === 'fault') && (match.flatten = false);\n  return match;\n};\n\n/**\n * Safely mutates matcher state to open a new context.\n *\n * @template {{}} T\n * @param {string} text - Text of the intended { type = \"opener\" } token\n * @param {State} state - Matcher state\n * @param {T} [properties]\n * @returns {undefined | string} - String when context is **not** open\n */\nexport const open = (text, state, properties) => {\n  // const {goal: initialGoal, groups} = state;\n  const {\n    contexts,\n    context: parentContext,\n    context: {depth: index, goal: initialGoal},\n    groups,\n  } = state;\n  const group = initialGoal.groups[text];\n\n  if (!group) return initialGoal.type || 'sequence';\n  groups.splice(index, groups.length, group);\n  groups.closers.splice(index, groups.closers.length, group.closer);\n\n  parentContext.contextCount++;\n\n  const goal = group.goal === undefined ? initialGoal : group.goal;\n\n  state.nextContext = contexts[index] = initializeContext({\n    id: `${parentContext.id} ${\n      goal !== initialGoal ? `\\n${goal[Symbol.toStringTag]} ${group[Symbol.toStringTag]}` : group[Symbol.toStringTag]\n    }`,\n    number: ++contexts.count,\n    depth: index + 1,\n    parentContext,\n    goal,\n    group,\n    state,\n  });\n};\n\n/**\n * Safely mutates matcher state to close the current context.\n *\n * @param {string} text - Text of the intended { type = \"closer\" } token\n * @param {State} state - Matcher state\n * @returns {undefined | string} - String when context is **not** closed\n */\nexport const close = (text, state) => {\n  const groups = state.groups;\n  const index = groups.closers.lastIndexOf(text);\n\n  if (index === -1 || index !== groups.length - 1) return fault(text, state);\n\n  groups.closers.splice(index, groups.closers.length);\n  groups.splice(index, groups.length);\n  state.nextContext = state.context.parentContext;\n};\n\n/**\n * Safely mutates matcher state to skip ahead.\n *\n * TODO: Finish implementing forward helper\n *\n * @param {string | RegExp} search\n * @param {Match} match\n * @param {State} state\n */\nexport const forward = (search, match, state) => {\n  search &&\n    (typeof search === 'object'\n      ? ((search.lastIndex = match.index + match[0].length), (state.nextOffset = match.input.search(search)))\n      : (state.nextOffset = match.input.indexOf(search, match.index + match[0].length)) > match.index ||\n        (() => {\n          throw new Error('Parse Error: Unexpected end of stream');\n        })());\n  // state.nextOffset = match.input.length - 1\n};\n\n/**\n * @returns {'fault'}\n */\nexport const fault = (text, state) => {\n  console.warn(text, {...state});\n  return 'fault';\n};\n\n/** @param {string[]} keys */\nexport const Symbols = (...keys) => {\n  const symbols = {};\n  for (const key of keys) symbols[key] = Symbol(key);\n  return symbols;\n};\n\nexport const generateDefinitions = ({groups, goals, identities, symbols, keywords, tokens}) => {\n  const {[symbols.FaultGoal]: FaultGoal} = goals;\n\n  const {create, freeze, entries, getOwnPropertySymbols, getOwnPropertyNames, setPrototypeOf} = Object;\n\n  const punctuators = create(null);\n\n  for (const opener of getOwnPropertyNames(groups)) {\n    const {[opener]: group} = groups;\n    'goal' in group && (group.goal = goals[group.goal] || FaultGoal);\n    'parentGoal' in group && (group.parentGoal = goals[group.parentGoal] || FaultGoal);\n    freeze(group);\n  }\n\n  for (const symbol of getOwnPropertySymbols(goals)) {\n    // @ts-ignore\n    const {[symbol]: goal} = goals;\n\n    goal.name = (goal.symbol = symbol).description.replace(/Goal$/, '');\n    goal[Symbol.toStringTag] = `«${goal.name}»`;\n    goal.tokens = tokens[symbol] = {};\n    goal.groups = [];\n\n    if (goal.punctuators) {\n      for (const punctuator of (goal.punctuators = [...goal.punctuators]))\n        punctuators[punctuator] = !(goal.punctuators[punctuator] = true);\n      freeze(setPrototypeOf(goal.punctuators, punctuators));\n    }\n\n    if (goal.closers) {\n      for (const closer of (goal.closers = [...goal.closers])) punctuators[closer] = !(goal.closers[closer] = true);\n      freeze(setPrototypeOf(goal.closers, punctuators));\n    }\n\n    if (goal.openers) {\n      for (const opener of (goal.openers = [...goal.openers])) {\n        const group = (goal.groups[opener] = {...groups[opener]});\n        punctuators[opener] = !(goal.openers[opener] = true);\n        GoalSpecificTokenRecord(goal, group.opener, 'opener', {group});\n        GoalSpecificTokenRecord(goal, group.closer, 'closer', {group});\n        group[Symbol.toStringTag] = `‹${group.opener}›`;\n      }\n      freeze(setPrototypeOf(goal.openers, punctuators));\n    }\n\n    freeze(goal.groups);\n    freeze(goal.tokens);\n    freeze(goal);\n  }\n\n  freeze(punctuators);\n  freeze(goals);\n  freeze(groups);\n  freeze(identities);\n  freeze(symbols);\n\n  for (const [identity, list] of entries({})) {\n    for (const keyword of list.split(/\\s+/)) keywords[keyword] = identity;\n  }\n  keywords[Symbol.iterator] = Array.prototype[Symbol.iterator].bind(Object.getOwnPropertyNames(keywords));\n  freeze(keywords);\n\n  /**\n   * Creates a symbolically mapped goal-specific token record\n   *\n   * @template {{}} T\n   * @param {Goal} goal\n   * @param {string} text\n   * @param {type} type\n   * @param {T} properties\n   */\n  function GoalSpecificTokenRecord(goal, text, type, properties) {\n    const symbol = Symbol(`‹${goal.name} ${text}›`);\n    return (goal.tokens[text] = goal.tokens[symbol] = tokens[symbol] = {symbol, text, type, goal, ...properties});\n  }\n};\n\n/**\n * @template {string} K\n * @template {string} I\n * @param {{[i in I]: K[]}} mappings\n */\nexport const Keywords = mappings => {\n  /** @type {{[k in K]: I}} */\n  //@ts-ignore\n  const keywords = {};\n\n  for (const identity in mappings) {\n    for (const keyword of mappings[identity]) {\n      keywords[keyword] = identity;\n    }\n  }\n  return keywords;\n};\n\n/** @typedef {import('./types').Match} Match */\n/** @typedef {import('./types').Groups} Groups */\n/** @typedef {import('./types').Group} Group */\n/** @typedef {import('./types').Goal} Goal */\n/** @typedef {import('./types').Context} Context */\n/** @typedef {import('./types').Contexts} Contexts */\n/** @typedef {import('./types').State} State */\n\n// /** @typedef {typeof goals} goals */\n// /** @typedef {goals[keyof goals]} Goal */\n/** @typedef {Goal['type']} type */\n/** @typedef {{symbol: symbol, text: string, type: type, goal?: Goal, group?: Group}} token */\n// /** @typedef {typeof groups} groups */\n// /** @typedef {groups[keyof groups]} Group */\n","﻿//@ts-check\nimport {generateDefinitions, Keywords, Symbols} from './helpers.js';\n\nconst symbols = Symbols(\n  'ECMAScriptGoal',\n  'CommentGoal',\n  'RegExpGoal',\n  'StringGoal',\n  'TemplateLiteralGoal',\n  'FaultGoal',\n);\n\n/** Unique token records @type {{[symbol: symbol]: }} */\nconst tokens = {};\n\nconst identities = {\n  UnicodeIDStart: 'ECMAScriptUnicodeIDStart',\n  UnicodeIDContinue: 'ECMAScriptUnicodeIDContinue',\n  HexDigits: 'ECMAScriptHexDigits',\n  CodePoint: 'ECMAScriptCodePoint',\n  ControlEscape: 'ECMAScriptControlEscape',\n  ContextualWord: 'ECMAScriptContextualWord',\n  RestrictedWord: 'ECMAScriptRestrictedWord',\n  FutureReservedWord: 'ECMAScriptFutureReservedWord',\n  Keyword: 'ECMAScriptKeyword',\n  // MetaProperty: 'ECMAScriptMetaProperty',\n};\n\nconst goals = {\n  [symbols.ECMAScriptGoal]: {\n    type: undefined,\n    flatten: undefined,\n    fold: undefined,\n    openers: ['{', '(', '[', \"'\", '\"', '`', '/', '/*', '//'],\n    closers: ['}', ')', ']'],\n  },\n  [symbols.CommentGoal]: {type: 'comment', flatten: true, fold: true},\n  [symbols.RegExpGoal]: {\n    type: 'pattern',\n    flatten: undefined,\n    fold: undefined,\n    openers: ['[', '(', '{'],\n    closers: [']', ')', '}'],\n    opener: '/',\n    closer: '/',\n    // punctuators: ['+', '*', '?', '|', '^', '{', '}', '(', ')'],\n    punctuators: ['+', '*', '?', '|', '^'],\n  },\n  [symbols.StringGoal]: {type: 'quote', flatten: true, fold: true},\n  [symbols.TemplateLiteralGoal]: {\n    type: 'quote',\n    flatten: true,\n    fold: false,\n    openers: ['${'],\n    opener: '`',\n    closer: '`',\n  },\n  [symbols.FaultGoal]: {type: 'fault'}, // , groups: {}\n};\n\nconst {\n  [symbols.FaultGoal]: FaultGoal,\n  [symbols.ECMAScriptGoal]: ECMAScriptGoal,\n  [symbols.CommentGoal]: CommentGoal,\n  [symbols.RegExpGoal]: RegExpGoal,\n  [symbols.StringGoal]: StringGoal,\n  [symbols.TemplateLiteralGoal]: TemplateLiteralGoal,\n} = goals;\n\nconst groups = {\n  ['{']: {opener: '{', closer: '}'},\n  ['(']: {opener: '(', closer: ')'},\n  ['[']: {opener: '[', closer: ']'},\n  ['//']: {opener: '//', closer: '\\n', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/*']: {opener: '/*', closer: '*/', goal: symbols.CommentGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['/']: {opener: '/', closer: '/', goal: symbols.RegExpGoal, parentGoal: symbols.ECMAScriptGoal},\n  [\"'\"]: {opener: \"'\", closer: \"'\", goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['\"']: {opener: '\"', closer: '\"', goal: symbols.StringGoal, parentGoal: symbols.ECMAScriptGoal},\n  ['`']: {\n    opener: '`',\n    closer: '`',\n    goal: symbols.TemplateLiteralGoal,\n    parentGoal: symbols.ECMAScriptGoal,\n  },\n  ['${']: {\n    opener: '${',\n    closer: '}',\n    goal: symbols.ECMAScriptGoal,\n    parentGoal: symbols.TemplateLiteralGoal,\n  },\n};\n\n/** @type {ECMAScript.Keywords} */\n// @ts-ignore\nconst keywords = Keywords({\n  // TODO: Let's make those constructs (this.new.target borks)\n  // [identities.MetaProperty]: 'new.target import.meta',\n  [identities.Keyword]: [\n    ...['await', 'break', 'case', 'catch', 'class', 'const', 'continue'],\n    ...['debugger', 'default', 'delete', 'do', 'else', 'export', 'extends'],\n    ...['finally', 'for', 'function', 'if', 'import', 'in', 'instanceof'],\n    ...['let', 'new', 'return', 'super', 'switch', 'this', 'throw', 'try'],\n    ...['typeof', 'var', 'void', 'while', 'with', 'yield'],\n  ],\n  [identities.RestrictedWord]: ['interface', 'implements', 'package', 'private', 'protected', 'public'],\n  [identities.FutureReservedWord]: ['enum'],\n  // NOTE: This is purposely not aligned with the spec\n  [identities.ContextualWord]: ['arguments', 'async', 'as', 'from', 'of', 'static', 'get', 'set'],\n});\n\n{\n  const operativeKeywords = new Set('await delete typeof void yield'.split(' '));\n  const declarativeKeywords = new Set('export import default async function class const let var'.split(' '));\n  const constructiveKeywords = new Set('await async function class await delete typeof void yield this new'.split(' '));\n\n  /**\n   * Determines if the capture is a valid keyword, identifier or undefined\n   * based on matcher state (ie lastAtom, context, intent) and subset\n   * of ECMAScript keyword rules of significant.\n   *\n   * TODO: Refactor or extensively test captureKeyword\n   * TODO: Document subset of ECMAScript keyword rules of significant\n   *\n   * @param {string} text - Matched by /\\b(‹text›)\\b(?=[^\\s$_:]|\\s+[^:]|$)\n   * @param {State} state\n   * @param {string} [intent]\n   */\n  const captureKeyword = (text, {lastAtom: pre, lineIndex, context}, intent) => {\n    //                              (a) WILL BE ‹fault› UNLESS  …\n    switch (intent || (intent = context.intent)) {\n      //  DESTRUCTURING INTENT  (ie Variable/Class/Function declarations)\n      case 'destructuring':\n      //  DECLARATION INTENT  (ie Variable/Class/Function declarations)\n      case 'declaration':\n        return (\n          //                        (b)   WILL BE ‹idenfitier›\n          //                              AFTER ‹.›  (as ‹operator›)\n          (pre !== undefined && pre.text === '.' && 'identifier') ||\n          //                        (c)   WILL BE ‹keyword›\n          //                              IF DECLARATIVE AND …\n          (declarativeKeywords.has(text) &&\n            //                      (c1)  NOT AFTER ‹keyword› …\n            (pre === undefined ||\n              pre.type !== 'keyword' ||\n              //                          UNLESS IS DIFFERENT\n              (pre.text !== text &&\n                //                        AND NOT ‹export› NOR ‹import›\n                !(text === 'export' || text === 'import') &&\n                //                  (c2)  FOLLOWS ‹export› OR ‹default›\n                (pre.text === 'export' ||\n                  pre.text === 'default' ||\n                  //                (c3)  IS ‹function› AFTER ‹async›\n                  (pre.text === 'async' && text === 'function')))) &&\n            'keyword')\n        );\n      default:\n        return (\n          //                        (b)   WILL BE ‹idenfitier› …\n          (((pre !== undefined &&\n            //                      (b1)  AFTER ‹.›  (as ‹operator›)\n            pre.text === '.') ||\n            //                      (b2)  OR ‹await› (not as ‹keyword›)\n            (text === 'await' && context.awaits === false) ||\n            //                      (b3)  OR ‹yield› (not as ‹keyword›)\n            (text === 'yield' && context.yields === false)) &&\n            'identifier') ||\n          //                        (c)   WILL BE ‹keyword› …\n          ((pre === undefined ||\n            //                      (c1)  NOT AFTER ‹keyword›\n            pre.type !== 'keyword' ||\n            //                      (c2)  UNLESS OPERATIVE\n            operativeKeywords.has(pre.text) ||\n            //                      (c3)  OR ‹if› AFTER ‹else›\n            (text === 'if' && pre.text === 'else') ||\n            //                      (c4)  OR ‹default› AFTER ‹export›\n            (text === 'default' && pre.text === 'export') ||\n            //                      (c5)  NOT AFTER ‹async›\n            //                            EXCEPT ‹function›\n            ((pre.text !== 'async' || text === 'function') &&\n              //                    (c6)  AND NOT AFTER ‹class›\n              //                          EXCEPT ‹extends›\n              (pre.text !== 'class' || text === 'extends') &&\n              //                    (c7)  AND NOT AFTER ‹for›\n              //                          EXCEPT ‹await› (as ‹keyword›)\n              (pre.text !== 'for' || text === 'await') &&\n              //                    (c6)  NOT AFTER ‹return›\n              //                          AND IS DIFFERENT\n              //                          AND IS NOT ‹return›\n              (pre.text !== 'return'\n                ? pre.text !== text\n                : text !== 'return'\n                ? //                (c7)  OR AFTER ‹return›\n                  //                      AND IS CONSTRUCTIVE\n                  constructiveKeywords.has(text)\n                : //                (c8)  OR AFTER ‹return›\n                  //                      AND IS ‹return›\n                  //                      WHEN ON NEXT LINE\n                  pre.lineNumber < 1 + lineIndex))) &&\n            'keyword')\n        );\n    }\n  };\n\n  /** @param {Context} context */\n  goals[symbols.ECMAScriptGoal].initializeContext = context => {\n    Object.assign(context, {captureKeyword});\n  };\n}\n\ngenerateDefinitions({groups, goals, identities, symbols, keywords, tokens});\n\nexport {\n  identities,\n  goals,\n  groups,\n  symbols,\n  keywords,\n  FaultGoal,\n  ECMAScriptGoal,\n  CommentGoal,\n  RegExpGoal,\n  StringGoal,\n  TemplateLiteralGoal,\n};\n\n/** @typedef {import('./types').State} State */\n/** @typedef {import('./types').Context} Context */\n\n/**\n * @typedef {'await'|'break'|'case'|'catch'|'class'|'const'|'continue'|'debugger'|'default'|'delete'|'do'|'else'|'export'|'extends'|'finally'|'for'|'function'|'if'|'import'|'in'|'instanceof'|'new'|'return'|'super'|'switch'|'this'|'throw'|'try'|'typeof'|'var'|'void'|'while'|'with'|'yield'} ECMAScript.Keyword\n * @typedef {'interface'|'implements'|'package'|'private'|'protected'|'public'} ECMAScript.RestrictedWord\n * @typedef {'enum'} ECMAScript.FutureReservedWord\n * @typedef {'arguments'|'async'|'as'|'from'|'of'|'static'} ECMAScript.ContextualKeyword\n * @typedef {Record<ECMAScript.Keyword|ECMAScript.RestrictedWord|ECMAScript.FutureReservedWord|ECMAScript.ContextualKeyword, symbol>} ECMAScript.Keywords\n */\n\n// //@ts-ignore\n// const keywords = {};\n\n// function Symbolic(key, description = key) {\n//   return (symbols[key] = Symbol(description));\n// }\n","﻿// import {Matcher} from '../../../modules/matcher/matcher.js';\nimport {Matcher} from '../matcher/matcher.js';\nimport {HexDigit, DecimalDigit, BinaryDigit, ControlLetter, UnicodeIDStart, UnicodeIDContinue} from './ranges.js';\nimport {keywords, ECMAScriptGoal, CommentGoal, RegExpGoal, StringGoal, TemplateLiteralGoal} from './definitions.js';\nimport {capture, forward, fault, open, close} from './helpers.js';\n\nDUMMY: async () => {\n  /* prettier-ignore */ // Make sure this block never lints\n  {\n    Identifiers: {\n      $\\u0032; \\u0024\\u0032; this.new.target;\n    }\n\n    Solidus: {\n                        // ExpressionStart never divide\n      ( ([              /([(regexp)])/g / [] ] ) );\n      ( [] /( [         /([(regexp)])/g / [] ] ) );\n      ( ([]) /( [       /([(regexp)])/g / [] ] ) );\n      ( [] /* */ /( [   /([(regexp)])/g / [] ] ) );\n      ( []/( [/*/*//*/*//([(regexp)])/g / [] ] ) );\n\n                        // Literals always divide (never ASI)\n      ( []              /([(div)])/g / [] );\n      ( ([])            /([(div)])/g / [] );\n      ( []/*/*//**//*/*//([(div)])/g / [] );\n\n      a = b             // Identifiers always divide (never ASI)\n                        /(div)/g.exec(c).map(d);\n\n                        // Declaration (ASI) then ExpressionStart\n      function ƒ () {}  /(regexp)/g.exec(c).map(d);\n\n\n      async () => {}    // Curly+LineBreak is ASI\n                        /(regexp)/g.exec(c).map(d);\n      async () => {}\n                        /(regexp)/g.exec(c).map(d);\n\n      async () => ({})  //\n                        /(div)/g.exec(c).map(d);\n\n                        // Function calls always in Expression\n      async ()          /(div)/g.exec(c).map(d);\n\n                        // FIXME: ObjectLiteral is \"a literal\"\n      const x = {}      /(div)/g.exec(c).map(d);\n\n                        // FIXME: Function/ClassExpression is \"an expression\"\n      const y = function ƒ () {}\n                        /(div)/g.exec(c).map(d);\n\n                        // Keyword always regexp (regardless of ASI)\n      return await/*/\\*//(regexp)/g.exec(c).map(d);\n\n      (async function* () {\n\n                        // Recursively operative Keywords\n                        yield   yield\n                        void    void\n                        typeof  typeof\n                        delete  delete\n                        await   await\n                        ('')\n\n                        await   new     class {}\n                        return  new     class {}\n                        yield   async   function () {}\n                        return\n                        return\n                        return  async   function () {}\n\n                        // FIXME: Non-Keywords\n                        async\n                        async   ('')\n      });\n\n      // Matt Austin's\n      Function(\"arg=`\", \"/*body`){});({x: this/**/\");\n      (function(arg=`/*``*/){/*body`){});({x: this/**/})\n    }\n\n    Strings: {\n      '@@'            // FIXME: Not a fault\n\n      '\\\n      a\\a'            // quote›‹punctuator, comment\n\n      \"\\\n      \\\\n\\\\b\"/**/     // quote›‹comment, comment\n    }\n\n    Numerals: {\n      0, -0, 1, -1, +1.1, 0.1, 0.1e3\n      0b01, 0x0123456789abcdef\n      // 1_1\n      NaN, Infinity, -Infinity\n    }\n  }\n};\n\nexport const matcher = (ECMAScript =>\n  Matcher.define(\n    // Matcher generator for this matcher instance\n    entity =>\n      Matcher.join(\n        entity(ECMAScript.Break()),\n        entity(ECMAScript.Whitespace()),\n        entity(ECMAScript.Escape()),\n        entity(ECMAScript.Comment()),\n        entity(ECMAScript.StringLiteral()),\n        entity(ECMAScript.TemplateLiteral()),\n        entity(ECMAScript.Opener()),\n        entity(ECMAScript.Closer()),\n        entity(ECMAScript.Solidus()),\n        entity(ECMAScript.Operator()),\n        entity(ECMAScript.Keyword()),\n        entity(ECMAScript.Number()),\n        entity(ECMAScript.Identifier()),\n\n        // Defines how to address non-entity character(s):\n        entity(\n          ECMAScript.Fallthrough({\n            type: 'fault',\n            flatten: true,\n          }),\n        ),\n      ),\n    // RegExp flags for this matcher instance\n    'gu',\n    // Property descriptors for this matcher instance\n    {\n      goal: {value: ECMAScriptGoal, enumerable: true, writable: false},\n    },\n  ))({\n  Fallthrough: ({fallthrough = '.', type, flatten} = {}) =>\n    Matcher.define(\n      (typeof fallthrough === 'string' || (fallthrough = '.'), type && typeof type === 'string')\n        ? entity => Matcher.sequence`(\n            ${fallthrough}\n            ${entity((text, entity, match, state) => {\n              capture(\n                type !== 'fault'\n                  ? type || state.context.goal.type || 'sequence'\n                  : state.context.goal !== ECMAScriptGoal\n                  ? state.context.goal.type || 'sequence'\n                  : fault(text, state),\n                match,\n                text,\n              );\n              typeof flatten === 'boolean' && (match.flatten = flatten);\n            })}\n          )`\n        : entity => `${fallthrough}`,\n    ),\n  Break: ({lf = true, crlf = false} = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${Matcher.join(lf && '\\\\n', crlf && '\\\\r\\\\n')}\n        ${entity((text, entity, match, state) => {\n          // const group = state.context.group;\n          match.format = 'whitespace';\n          capture(\n            state.context.group !== undefined && state.context.group.closer === '\\n'\n              ? close(text, state) || (state.context.goal === CommentGoal ? 'break' : 'closer')\n              : 'break',\n            match,\n            text,\n          );\n          match.flatten = false;\n        })}\n      )`,\n    ),\n  Whitespace: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\s+\n        ${entity((text, entity, match, state) => {\n          match.format = 'whitespace';\n          capture((match.flatten = state.lineOffset !== match.index) ? 'whitespace' : 'inset', match, text);\n        })}\n      )`,\n    ),\n  Escape: ({\n    ECMAScriptUnicodeIDStart = RegExp(\n      Matcher.sequence`[${UnicodeIDStart}]+`,\n      UnicodeIDContinue.includes('\\\\p{') ? 'u' : '',\n    ),\n    ECMAScriptUnicodeIDContinue = RegExp(\n      Matcher.sequence`[${UnicodeIDContinue}]+`,\n      UnicodeIDContinue.includes('\\\\p{') ? 'u' : '',\n    ),\n  } = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\\\u[${HexDigit}][${HexDigit}][${HexDigit}][${HexDigit}]\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          let character;\n          match.format = 'escape';\n          capture(\n            state.context.goal.type ||\n              (state.context.goal === ECMAScriptGoal &&\n              state.lastToken != null &&\n              (state.lastToken.type === 'identifier'\n                ? ECMAScriptUnicodeIDContinue.test(String.fromCodePoint(parseInt(text.slice(2), 16)))\n                : ECMAScriptUnicodeIDStart.test(String.fromCodePoint(parseInt(text.slice(2), 16))))\n                ? ((match.flatten = true), 'identifier')\n                : 'escape'),\n            match,\n            text,\n          );\n        })}\n      )|(\n        \\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\c[${ControlLetter}]\n        |\\\\x[${HexDigit}][${HexDigit}]\n        |\\\\u\\{[${HexDigit}]*\\}\n        |\\\\[^]\n        ${entity((text, entity, match, state) => {\n          capture(state.context.goal.type || 'escape', match, (match.capture[keywords[text]] = text));\n        })}\n      )`,\n    ),\n  Comment: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\/\\/|\\/\\*\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // Safely fast skip to end of comment\n                  (forward(text === '//' ? '\\n' : '*/', match, state),\n                  // No need to track delimiter\n                  (match.punctuator = CommentGoal.type),\n                  'opener')\n              : state.context.goal !== CommentGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? CommentGoal.type\n              : close(text, state) || (match.punctuator = CommentGoal.type),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  StringLiteral: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \"|'\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) ||\n                  // TODO: Investigate why regexp forward is slow\n                  // (void forward(text === '\"' ? /(?:[^\"\\\\\\n]+?(?=\\\\.|\")|\\\\.)*?\"/g : /(?:[^'\\\\\\n]+?(?=\\\\.|')|\\\\.)*?'/g, match, state)) ||\n                  ((match.punctuator = StringGoal.type), 'opener')\n              : state.context.goal !== StringGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? StringGoal.type\n              : ((match.flatten = false), close(text, state) || ((match.punctuator = StringGoal.type), 'closer')),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  TemplateLiteral: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ${'`'}\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? open(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'opener')\n              : state.context.goal !== TemplateLiteralGoal\n              ? state.context.goal.type || 'sequence'\n              : state.context.group.closer !== text\n              ? TemplateLiteralGoal.type\n              : close(text, state) || ((match.punctuator = TemplateLiteralGoal.type), 'closer'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Opener: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\$\\{|\\{|\\(|\\[\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal.punctuators !== undefined && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.goal.openers &&\n                state.context.goal.openers[text] === true &&\n                // (text !== '[' || state.context.goal !== RegExpGoal || state.context.group.opener !== '[')\n                (state.context.goal !== RegExpGoal || state.context.group.opener !== '[')\n              ? open(text, state) || 'opener'\n              : state.context.goal.type || 'sequence',\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Closer: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\}|\\)|\\]\n        ${entity((text, entity, match, state) => {\n          match.format = 'punctuation';\n          capture(\n            state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'combinator')\n              : state.context.goal.closers &&\n                state.context.goal.closers[text] === true &&\n                (state.context.goal !== RegExpGoal ||\n                  (state.context.group.opener !== '[' || text === state.context.group.closer))\n              ? close(text, state) || 'closer'\n              : state.context.goal.type || 'sequence',\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Solidus: () =>\n    // TODO: Refine the necessary criteria for RegExp vs Div\n    // SEE: https://github.com/sweet-js/sweet-core/wiki/design\n    // SEE: https://inimino.org/~inimino/blog/javascript_semicolons\n    // SEE: https://github.com/guybedford/es-module-shims/blob/master/src/lexer.js\n    Matcher.define(\n      entity => Matcher.sequence`(\n        \\*\\/|\\/=|\\/\n        ${entity((text, entity, match, state) => {\n          let previousAtom;\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === CommentGoal\n              ? (state.context.group.closer === text && close(text, state)) ||\n                  (match.punctuator = state.context.goal.type)\n              : state.context.goal === RegExpGoal && state.context.group.closer !== ']' // ie /…*/ or /…/\n              ? close('/', state) || ((match.punctuator = state.context.goal.type), 'closer')\n              : state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : text[0] === '*'\n              ? fault(text, state)\n              : state.lastAtom === undefined ||\n                (state.lastAtom.type === 'operator'\n                  ? state.lastAtom.text !== '++' && state.lastAtom.text !== '--'\n                  : state.lastAtom.type === 'closer'\n                  ? state.lastAtom.text === '}'\n                  : state.lastAtom.type === 'opener' || state.lastAtom.type === 'keyword')\n              ? open(text, state) || ((match.punctuator = 'pattern'), 'opener')\n              : (match.punctuator = 'operator'),\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Operator: () =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        ,|;|\\.\\.\\.|\\.|:|\\?|=>\n        |\\+\\+|--\n        |\\+=|-=|\\*\\*=|\\*=\n        |&&|&=|&|\\|\\||\\|=|\\||%=|%|\\^=|\\^|~=|~\n        |<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>\n        |!==|!=|!|===|==|=\n        |\\+|-|\\*\\*|\\*\n        ${entity((text, entity, match, state) => {\n          // const context = state.context;\n          match.format = 'punctuation';\n          capture(\n            state.context.goal === ECMAScriptGoal\n              ? 'operator'\n              : state.context.goal.punctuators && state.context.goal.punctuators[text] === true\n              ? (match.punctuator = 'punctuation')\n              : state.context.goal.type || 'sequence',\n            match,\n            text,\n          );\n        })}\n      )`,\n    ),\n  Keyword: () =>\n    // TODO: Handle contextual cases:\n    //  - { get() set() } as Identifiers\n    Matcher.define(\n      entity => Matcher.sequence`\\b(\n        ${Matcher.join(...keywords).replace(/\\./g, '\\\\.')}\n        ${entity((text, entity, match, state) => {\n          match.format = 'identifier';\n          capture(\n            (match.flatten = state.context.goal !== ECMAScriptGoal)\n              ? state.context.goal.type || 'sequence'\n              : state.lastAtom !== undefined && state.lastAtom.text === '.'\n              ? 'identifier'\n              : state.context.captureKeyword === undefined\n              ? 'keyword'\n              : state.context.captureKeyword(text, state) || fault(text, state),\n            match,\n            text,\n          );\n\n          // : ((keywordSymbol = keywords[text]), (previousAtom = state.lastAtom)) && previousAtom.text === '.'\n          // keywordSymbol &&\n          //   ((context.keywords = (context.keywords || 0) + 1),\n          //   (context[`${(match.capture[keywordSymbol] = text)}-keyword-index`] = match.index));\n        })}\n      )\\b(?=[^\\s$_:]|\\s+[^:]|$)`,\n    ),\n  Identifier: ({RegExpFlags = /^[gimsuy]+$/} = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`(\n        [${UnicodeIDStart}][${UnicodeIDContinue}]*\n        ${entity((text, entity, match, state) => {\n          // let previousToken;\n          match.format = 'identifier';\n          capture(\n            state.context.goal !== ECMAScriptGoal\n              ? state.context.goal.type || 'sequence'\n              : // : (previousToken = state.lastToken) && previousToken.punctuator === 'pattern' && RegExpFlags.test(text)\n              state.lastToken !== undefined && state.lastToken.punctuator === 'pattern' && RegExpFlags.test(text)\n              ? ((match.flatten = true), (match.punctuator = RegExpGoal.type), 'closer')\n              : ((match.flatten = true), 'identifier'),\n            match,\n            text,\n          );\n        })}\n      )`,\n      `${UnicodeIDStart}${UnicodeIDContinue}`.includes('\\\\p{') ? 'u' : '',\n    ),\n  Number: ({\n    NumericSeparator,\n    Digits = NumericSeparator\n      ? Digit => Matcher.sequence`[${Digit}][${Digit}${Matcher.escape(NumericSeparator)}]*`\n      : Digit => Matcher.sequence`[${Digit}]+`,\n    DecimalDigits = Digits(DecimalDigit),\n    HexDigits = Digits(HexDigit),\n    BinaryDigits = Digits(BinaryDigit),\n  } = {}) =>\n    Matcher.define(\n      entity => Matcher.sequence`\\b(\n        ${DecimalDigits}\\.${DecimalDigits}[eE]${DecimalDigits}\n        |\\.${DecimalDigits}[eE]${DecimalDigits}\n        |0[xX]${HexDigits}\n        |0[bB]${BinaryDigits}\n        |${DecimalDigits}\\.${DecimalDigits}\n        |\\.${DecimalDigits}\n        |${DecimalDigits}\n        ${entity((text, entity, match, state) => {\n          match.format = 'number';\n          capture(state.context.goal.type || 'number', match, text);\n        })}\n      )\\b`,\n    ),\n});\n","﻿/// <reference path=\"./types.d.ts\" />\n\nimport {countLineBreaks} from '../../packages/tokenizer/lib/core.js';\n\nexport const {\n  createTokenFromMatch,\n  createMatcherInstance,\n  createString,\n  createMatcherTokenizer,\n  createMatcherMode,\n} = (() => {\n  const {\n    RegExp,\n    Object,\n    Object: {assign, create, freeze, defineProperty, defineProperties, getOwnPropertyNames, setPrototypeOf},\n    String,\n  } = globalThis;\n\n  /** @typedef {RegExpConstructor['prototype']} Matcher */\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  const createMatcherInstance = (matcher, state) =>\n    defineProperty(\n      ((state || (state = create(null))).matcher =\n        (matcher && matcher instanceof RegExp && createMatcherClone(matcher)) || RegExp(matcher, 'g')),\n      'state',\n      {value: state},\n    );\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @type {(matcher: T & V, instance?: U) => U & V}\n   * @param {T} param0\n   * @param {U} [param1]\n   * @returns {U}\n   */\n  const createMatcherClone = ({constructor: {prototype}, source, flags, lastIndex, ...properties}, instance) => (\n    (instance = assign(instance || RegExp(source, flags || 'g'), properties)),\n    prototype && setPrototypeOf(instance, prototype),\n    instance\n  );\n\n  /** @type {(value: any) => string} */\n  const createString = String;\n\n  /**\n   * @type {<M extends MatchArray, T extends {}>(init: MatchResult<M>) => Token<T>}\n   * @param {MatchResult<MatchArray>} param0\n   */\n  const createTokenFromMatch = ({0: text, identity, capture, index}) => ({\n    type: (identity && (identity.description || identity)) || 'text',\n    text,\n    lineBreaks: countLineBreaks(text),\n    lineInset: (capture && capture.inset) || '',\n    offset: index,\n    capture,\n  });\n\n  const tokenizerProperties = Object.getOwnPropertyDescriptors(\n    freeze(\n      class Tokenizer {\n        /** @template {Matcher} T @template {{}} U */\n        *tokenize() {\n          /** @type {Token<U>} */\n          // let next;\n          /** @type {{createToken: typeof createTokenFromMatch, initializeState: <V>(state: V) => V & TokenizerState<T, U>}} */\n          const createToken = (this && this.createToken) || createTokenFromMatch;\n          /** @type {string} */\n          const string = createString(Object.keys({[arguments[0]]: 1})[0]);\n          /** @type {TokenMatcher<U>} */\n          const matcher = createMatcherInstance(this.matcher, assign(arguments[1] || {}, {sourceText: string}));\n          /** @type {TokenizerState<T, U>} */\n          const state = matcher.state;\n          this.initializeState && this.initializeState(state);\n          matcher.exec = matcher.exec;\n\n          for (\n            let match, capturedToken, retainedToken, index = 0;\n            // BAIL on first failed/empty match\n            ((match = matcher.exec(string)) !== null && match[0] !== '') ||\n            //   BUT first yield a nextToken if present\n            (retainedToken !== undefined && (yield retainedToken), (state.nextToken = undefined));\n\n          ) {\n            if ((capturedToken = createToken(match, state)) === undefined) continue;\n\n            // HOLD back one grace token\n            //   until createToken(…) !== undefined (ie new token)\n            //   set the incremental token index for this token\n            //   and keep it referenced directly on the state\n            (state.nextToken = capturedToken).index = index++;\n\n            //   THEN yield a previously held token\n            if (retainedToken !== undefined) yield retainedToken;\n\n            //   THEN finally clear the nextToken reference\n            retainedToken = capturedToken;\n            state.nextToken = undefined;\n          }\n\n          this.finalizeState && this.finalizeState(state);\n\n          // console.log({...state});\n        }\n      }.prototype,\n    ),\n  );\n\n  /**\n   * @type { {<T extends Matcher, U extends {} = {}>(sourceText: string, initialState?: Partial<TokenizerState<undefined, U>): IterableIterator<Token<U>>} }\n   */\n  const createMatcherTokenizer = instance => defineProperties(instance, tokenizerProperties);\n\n  /**\n   * @param {import('/modules/matcher/matcher.js').Matcher} matcher\n   * @param {any} [options]\n   */\n  const createMatcherMode = (matcher, options) => {\n    const tokenizer = createMatcherTokenizer({\n      createToken: createTokenFromMatch,\n      /** @type {(state: {}) =>  void} */\n      initializeState: undefined,\n      finalizeState: undefined,\n      matcher: freeze(createMatcherInstance(matcher)),\n    });\n\n    const mode = {syntax: 'matcher', tokenizer};\n    options &&\n      ({\n        syntax: mode.syntax = mode.syntax,\n        aliases: mode.aliases,\n        preregister: mode.preregister,\n        createToken: tokenizer.createToken = tokenizer.createToken,\n        initializeState: tokenizer.initializeState,\n        finalizeState: tokenizer.finalizeState,\n        ...mode.overrides\n      } = options);\n\n    freeze(tokenizer);\n\n    return mode;\n  };\n\n  return {createTokenFromMatch, createMatcherInstance, createString, createMatcherTokenizer, createMatcherMode};\n})();\n","﻿//@ts-check\n\nimport {matcher} from './matcher.js';\nimport {initializeState, finalizeState, createToken} from './helpers.js';\nimport {createMatcherMode} from '../matcher/helpers.js';\n\nexport const mode = createMatcherMode(matcher, {\n  syntax: 'ecmascript',\n  aliases: ['es', 'js', 'javascript'],\n\n  preregister: parser => {\n    parser.unregister('es');\n    parser.unregister('ecmascript');\n  },\n\n  initializeState,\n  finalizeState,\n  createToken,\n});\n","﻿import {mode} from './mode.js';\n\nexport const {syntax, tokenizer} = mode;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// import {tokenizer} from '../../../markup/dist/tokenizer.es.js';\nimport {tokenizer} from '../../../markup/experimental/es/standalone.js';\n\n/** @param {string} text @returns {TokenizerTokens} */\nexport const tokenizeSourceText = text => tokenizer.tokenize(text, {console});\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from '../../../markup/experimental/matcher/matcher.js';\n\nexport const {esx, Rewriter} = (Rewriter => {\n\tconst {escape, sequence, join} = Matcher;\n\tconst {freeze} = Object;\n\tconst {raw} = String;\n\n\t/**\n\t * @param {TemplateStringsArray} strings\n\t * @param {... string} values\n\t */\n\tconst regex = (strings, ...values) => RegExp(raw(strings, ...values), 'g');\n\n\tconst word = word => sequence`\\b${escape(word)}\\b`;\n\n\tconst MARK = '/*/';\n\tconst MARKS = '/*@*/';\n\tconst STARTS = '/*‹*/';\n\tconst ENDS = '/*›*/';\n\tconst LITERAL = '`([^`]*)`';\n\n\tconst esx = {};\n\n\tesx.input = {\n\t\tMarkedExport: Rewriter(\n\t\t\tregex`${escape(MARK)}export${escape(MARK)}[\\s\\n]*(${'const let var async function class'\n\t\t\t\t.split(' ')\n\t\t\t\t.map(word)\n\t\t\t\t.join('|')})`,\n\t\t\traw` ${MARKS}export $1`,\n\t\t),\n\t\tModuleImport: Rewriter(regex`\\bmodule\\.import\\b${LITERAL}`, raw` ${STARTS} import $1 ${ENDS} `),\n\t\tModuleExport: Rewriter(regex`\\bmodule\\.export\\b${LITERAL}`, raw` ${STARTS} export $1 ${ENDS} `),\n\t\tModuleAwait: Rewriter(regex`\\bmodule\\.await\\b[\\s\\n]*\\(`, raw`module.await = (`),\n\t\tModuleExportDefault: Rewriter(regex`\\bmodule\\.export\\.default\\b[\\s\\n]*=`, ` ${STARTS} export default ${ENDS} `),\n\t};\n\t(esx.output = {\n\t\tUnmarkedExport: Rewriter(regex` ${escape(MARKS)}export `, raw`${MARK}export${MARK} `),\n\t\tWrappedExportDefault: Rewriter(regex` ${escape(STARTS)} export default ${escape(ENDS)} `, raw`exports.default =`),\n\t\tUntaggedExpression: Rewriter(regex` ${escape(STARTS)}([^]*?)${escape(ENDS)} `, raw`${MARK}$1${MARK}`),\n\t}),\n\t\t(esx.rewriteEvaluatorInput = Rewriter.create(\n\t\t\tesx.input.MarkedExport,\n\t\t\tesx.input.ModuleImport,\n\t\t\tesx.input.ModuleExport,\n\t\t\tesx.input.ModuleAwait,\n\t\t\tesx.input.ModuleExportDefault,\n\t\t));\n\tesx.rewriteEvaluatorOutput = Rewriter.create(\n\t\tesx.output.UnmarkedExport,\n\t\tesx.output.WrappedExportDefault,\n\t\tesx.output.UntaggedExpression,\n\t);\n\n\treturn {esx, Rewriter};\n})(\n\t(() => {\n\t\tconst {replace: ReplaceSymbol} = Symbol;\n\t\tconst {freeze, defineProperties} = Object;\n\n\t\t/**\n\t\t * @template {RegExp} T\n\t\t * @template {string|((...args) => string)} U\n\t\t * @template {PropertyDescriptorMap} V\n\t\t * @param {T} expression\n\t\t * @param {U} rewrite\n\t\t * @param {V} [propertyDescriptors]\n\t\t * @returns {T & {readonly rewrite: U} & DescribedType<V>}\n\t\t */\n\t\tconst Rewriter = (expression, rewrite, propertyDescriptors) =>\n\t\t\tdefineProperties(expression, {\n\t\t\t\t...propertyDescriptors,\n\t\t\t\t...Rewriter.descriptors,\n\t\t\t\trewrite: {value: rewrite, writable: false, enumerable: true},\n\t\t\t});\n\n\t\tRewriter.reducer = (string, rewriter) => rewriter[ReplaceSymbol](string);\n\n\t\t/** @type {(... RegExp) => (source: string) => string} */\n\t\tRewriter.create = (...rewriters) => string => rewriters.reduce(Rewriter.reducer, string);\n\n\t\tRewriter.descriptors = Object.getOwnPropertyDescriptors(\n\t\t\tclass Rewriter extends RegExp {\n\t\t\t\t[ReplaceSymbol](string, replacement) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\treturn replacement == null && (({rewrite: replacement} = this), replacement) == null\n\t\t\t\t\t\t? string\n\t\t\t\t\t\t: super[ReplaceSymbol](string, replacement);\n\t\t\t\t}\n\t\t\t}.prototype,\n\t\t);\n\n\t\treturn freeze(Rewriter);\n\t})(),\n);\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// import {tokenizer} from '../../../markup/dist/tokenizer.es.js';\nimport {Collator} from './collator.js';\nimport {ModuleSource, ModuleBinding} from './records.js';\nimport {Node} from './tree.js';\nimport {tokenizeSourceText} from './tokenizer.js';\nimport {esx} from './rewriters.js';\nimport * as symbols from './symbols.js';\nimport {environment} from '../environment.js';\n\nexport const {parseModuleText, parseDynamicModuleEvaluator} = (() => {\n\tconst {\n\t\tDEBUG_COMPILER,\n\t\tDEBUG_CONSTRUCTS,\n\t\tDEBUG_NODES,\n\t\tINTERNAL_CONSOLE,\n\t\tFORCE_INCOMPLETE_CONSTRUCTS = true,\n\t} = getFlags();\n\n\t/** @type {Console} */\n\tconst console =\n\t\t(globalThis.console && (INTERNAL_CONSOLE !== false && globalThis.console['internal'])) || globalThis.console;\n\n\tconst {log, warn, group, groupCollapsed, groupEnd, table} = console;\n\n\t/** @param {string} sourceText @param {ModuleSource} [sourceRecord] */\n\tconst compileModule = (sourceText, sourceRecord) => {\n\t\tsourceRecord || (sourceRecord = new ModuleSource({sourceText: sourceText}));\n\n\t\t/** @type {ModuleSource['fragments']} */\n\t\tconst fragments = (sourceRecord.fragments = []);\n\t\t/** @type {ModuleSource['bindings']} */\n\t\tconst bindings = (sourceRecord.bindings = []);\n\n\t\tconst nonBindings = [];\n\t\tconst tokens = tokenizeSourceText(sourceText);\n\t\tconst collator = new Collator('ECMAScript');\n\n\t\tcollator.log = log;\n\n\t\tfor (const token of tokens) {\n\t\t\tif (!token || !token.text) continue;\n\n\t\t\tconst node = collator.collate(token, tokens) || undefined;\n\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\n\t\t\tif (collator.queuedToken !== undefined) {\n\t\t\t\tconst node = collator.collate(collator.queuedToken, tokens) || undefined;\n\t\t\t\ttypeof node.text === 'string' && fragments.push(node.text);\n\t\t\t}\n\t\t}\n\n\t\tconst {\n\t\t\trootNode,\n\t\t\trootNode: {constructs},\n\t\t} = collator;\n\n\t\tsourceRecord.rootNode = rootNode;\n\t\tsourceRecord.constructs = constructs;\n\t\tsourceRecord.compiledText = rootNode.text;\n\n\t\tif (constructs.length) {\n\t\t\tlet bindingRecord;\n\t\t\tconst constructList = [];\n\n\t\t\tfor (const construct of constructs) {\n\t\t\t\tconstructList.push(construct.type);\n\t\t\t\tbindingRecord = createBindingRecordFromConstruct(construct, sourceRecord);\n\t\t\t\tif (bindingRecord === undefined) {\n\t\t\t\t\tnonBindings.push(construct);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbindings.push(bindingRecord);\n\t\t\t}\n\n\t\t\tif (DEBUG_CONSTRUCTS) {\n\t\t\t\tbindings.length && table(bindings);\n\t\t\t\tnonBindings.length && table(nonBindings);\n\t\t\t\t// console.log(constructList.map(v => `- \\`${v}\\``).join('\\n'));\n\t\t\t}\n\t\t}\n\n\t\treturn sourceRecord;\n\t};\n\n\t/**\n\t * @param {ConstructNode} construct\n\t * @param {SourceRecord} sourceRecord\n\t * @returns {BindingRecord}\n\t */\n\tconst createBindingRecordFromConstruct = (construct, sourceRecord) => {\n\t\tconst record = {};\n\n\t\tconst bindingIntent = (record.bindingIntent = construct.type.startsWith('import')\n\t\t\t? 'import'\n\t\t\t: construct.type.startsWith('export')\n\t\t\t? 'export'\n\t\t\t: undefined);\n\n\t\trecord.declarationText =\n\t\t\tbindingIntent === construct.type || bindingIntent === undefined || construct.type === 'export default'\n\t\t\t\t? construct.type\n\t\t\t\t: construct.type.slice(bindingIntent.length + 1);\n\n\t\trecord.bindingDeclaration = ModuleBinding.DeclarationType[record.declarationText];\n\n\t\tif (record.bindingDeclaration !== undefined) {\n\t\t\treturn createDeclarationRecord(construct, record, sourceRecord);\n\t\t}\n\t};\n\n\t// * @param {Node} node\n\t/**\n\t * @param {ConstructNode} construct\n\t * @param {*} record\n\t * @param {SourceRecord} sourceRecord\n\t * @returns {BindingRecord}\n\t */\n\tconst createDeclarationRecord = (construct, record, sourceRecord) => {\n\t\t/** @type {Node} */\n\t\tlet node = construct[symbols.NextTokenNode];\n\t\tconst bindingTarget = construct[symbols.BindingClause] != null ? construct[symbols.BindingClause].text : undefined;\n\n\t\tswitch (record.bindingDeclaration) {\n\t\t\tcase 'FunctionDeclaration':\n\t\t\tcase 'AsyncFunctionDeclaration':\n\t\t\tcase 'GeneratorFunctionDeclaration':\n\t\t\tcase 'AsyncGeneratorFunctionDeclaration':\n\t\t\tcase 'ClassDeclaration':\n\t\t\t\tif (node.type !== 'identifier') {\n\t\t\t\t\tsourceRecord.error(`ConstructError: ${record.bindingDeclaration} must have a valid identifier`, {\n\t\t\t\t\t\tlineNumber: construct.lastToken.lineNumber,\n\t\t\t\t\t\tcolumnNumber: construct.lastToken.columnNumber,\n\t\t\t\t\t});\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t}\n\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\trecord.internalType = record.bindingDeclaration === 'ClassDeclaration' ? 'class' : 'function';\n\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\trecord.exportedIdentifier = record.internalIdentifier;\n\t\t\t\t\trecord.exportedType = 'readonly';\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'VariableDeclaration':\n\t\t\t\trecord.internalType = record.declarationText;\n\t\t\t\tif (node.type === '{…}') {\n\t\t\t\t\t// TODO: Destructure bindings\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\t\tif (record.bindingIntent === 'export') {\n\t\t\t\t\t\trecord.exportedIdentifier = record.internalIdentifier;\n\t\t\t\t\t\trecord.exportedType = record.internalType === 'const' ? 'constant' : 'readonly';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'ExportDefaultAssignmentExpression':\n\t\t\t\trecord.exportedType = 'constant';\n\t\t\t\trecord.internalType = 'void';\n\t\t\t\trecord.exportedIdentifier = 'default';\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'ImportDeclaration':\n\t\t\t\tif (node.text === '*') {\n\t\t\t\t\trecord.importedIdentifier = '*';\n\t\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\t} else if (node.type === 'string') {\n\t\t\t\t\trecord.externalModuleSpecifier = node.text.slice(1, -1);\n\t\t\t\t} else if (node.type === 'identifier') {\n\t\t\t\t\trecord.importedIdentifier = 'default';\n\t\t\t\t\trecord.internalIdentifier = bindingTarget;\n\t\t\t\t\t// TODO: import default, {} // if (trailer.nextToken.text !== ',')\n\t\t\t\t} else if (node.type === '{…}') {\n\t\t\t\t\t// TODO: import {…}\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t\tcase 'ExportDeclaration':\n\t\t\t\tif (node.text === '*') {\n\t\t\t\t\trecord.exportedIdentifier = bindingTarget;\n\t\t\t\t} else if (node.type === '{…}') {\n\t\t\t\t\t// TODO: export {…}\n\t\t\t\t\tif (!FORCE_INCOMPLETE_CONSTRUCTS) break;\n\t\t\t\t\telse if (DEBUG_CONSTRUCTS) log(record.bindingDeclaration, construct, node);\n\t\t\t\t}\n\t\t\t\treturn createBindingRecord(record);\n\t\t}\n\t\tlog(record.bindingDeclaration, construct, node);\n\t};\n\n\t/** @param {BindingRecord} record */\n\t/** @returns {BindingRecord} */\n\tconst createBindingRecord = record => new ModuleBinding(record);\n\n\t/** @param {string} sourceText @param {ModuleSource} [sourceRecord] */\n\tconst parseModuleText = (sourceText, sourceRecord) => {\n\t\tsourceRecord\n\t\t\t? (sourceRecord.sourceText = sourceText)\n\t\t\t: (sourceRecord = new ModuleSource({sourceText: sourceText, sourceType: 'module-text'}));\n\t\treturn compileModule(sourceText, sourceRecord);\n\t};\n\n\tconst SourceEvaluatorText = /^[\\s\\n]*module[\\s\\n]*=>[\\s\\n]*void[\\s\\n]*\\([\\s\\n]*\\([\\s\\n]*\\)[\\s\\n]*=>[\\s\\n]*\\{[ \\t]*?\\n?([^]*[\\s\\n]*?)\\s*\\}[\\s\\n]*\\)[\\s\\n]*;?[\\s\\n]*$/;\n\n\t/** @param {Function|string} sourceEvaluator @param {ModuleSource} [sourceRecord] */\n\tconst parseDynamicModuleEvaluator = (sourceEvaluator, sourceRecord) => {\n\t\tconst sourceType = 'evaluator';\n\n\t\t//@ts-ignore\n\t\tconst [, sourceEvaluatorText] = SourceEvaluatorText.exec(sourceEvaluator);\n\n\t\tconst sourceText = esx.rewriteEvaluatorInput(sourceEvaluatorText);\n\n\t\tsourceRecord\n\t\t\t? (sourceRecord.sourceType = sourceType)\n\t\t\t: (sourceRecord = new ModuleSource({sourceEvaluatorText, sourceText, sourceType}));\n\t\tparseModuleText(sourceText, sourceRecord);\n\n\t\tsourceRecord.compiledEvaluatorText = esx.rewriteEvaluatorOutput(sourceRecord.compiledText); // debugger;\n\n\t\tDEBUG_COMPILER\n\t\t\t? environment.process\n\t\t\t\t? log('%o\\n\\n%o', sourceRecord, sourceText)\n\t\t\t\t: log(\n\t\t\t\t\t\t'%O\\n%c%ssourceEvaluatorText: %s\\nsourceText: %s\\ncompiledText: %s\\ncompiledEvaluatorText: %s',\n\t\t\t\t\t\tsourceRecord,\n\t\t\t\t\t\tsourceEvaluatorText,\n\t\t\t\t\t\tsourceText,\n\t\t\t\t\t\tsourceRecord.compiledText,\n\t\t\t\t\t\tsourceRecord.compiledEvaluatorText,\n\t\t\t\t  )\n\t\t\t: DEBUG_CONSTRUCTS &&\n\t\t\t  (environment.process\n\t\t\t\t\t? log('%O\\n%s', sourceRecord, sourceText)\n\t\t\t\t\t: log('%O\\n%c%s', sourceRecord, 'whitespace: pre; font:monospace;', sourceText));\n\t\treturn sourceRecord;\n\t};\n\n\treturn {parseModuleText, parseDynamicModuleEvaluator};\n\n\t/** @param {{[name: string]: boolean}} param0 */\n\tfunction getFlags({DEBUG_COMPILER, DEBUG_CONSTRUCTS, DEBUG_NODES} = {}) {\n\t\tif (typeof location === 'object' && 'search' in location) {\n\t\t\tDEBUG_COMPILER = /\\bcompiler\\b/.test(location.search);\n\t\t\tDEBUG_NODES = /\\bnodes\\b/.test(location.search);\n\t\t\tDEBUG_CONSTRUCTS = /\\bconstructs\\b/.test(location.search);\n\t\t} else if (typeof process === 'object' && process.argv) {\n\t\t\tDEBUG_COMPILER = process.argv.includes('--compiler');\n\t\t\tDEBUG_NODES = process.argv.includes('--nodes');\n\t\t\tDEBUG_CONSTRUCTS = process.argv.includes('--constructs');\n\t\t}\n\t\treturn {DEBUG_COMPILER, DEBUG_CONSTRUCTS, DEBUG_NODES};\n\t}\n})();\n","import {Exports, Mappings, BindingDeclarations} from './expressions.js';\nimport {freeze} from './helpers.js';\nimport {parseDynamicModuleEvaluator} from './compiler/compiler.js';\n\n/** @type {(init: {source: Function | string, url: string}) => Evaluator} */\nexport const ModuleEvaluator = (() => {\n\tconst evaluate = code => (1, eval)(code);\n\n\tconst rewrite = source =>\n\t\t// TODO: Handle shadows and redudant exports!\n\t\t`${source}`.replace(Exports, (match, guard, mappings) => {\n\t\t\tconst bindings = [];\n\t\t\twhile ((match = Mappings.exec(mappings))) {\n\t\t\t\tlet {1: identifier, 2: binding} = match;\n\t\t\t\tbindings.push(`${binding || '()'} => ${identifier}`);\n\t\t\t}\n\t\t\treturn (bindings.length && `exports(${bindings.join(', ')})`) || '';\n\t\t});\n\n\treturn ({\n\t\tsource,\n\t\tsourceText = `${source}`,\n\t\turl: moduleURL,\n\t\tcompiledText = rewrite(\n\t\t\ttypeof source === 'function' ? parseDynamicModuleEvaluator(source).compiledEvaluatorText : sourceText,\n\t\t),\n\t}) => {\n\t\tlet match;\n\n\t\t/** @type {Evaluator} */\n\t\tconst evaluator = evaluate(\n\t\t\t`(function* (module, exports) { with(module.scope) (function () { \"use strict\";\\n${compiledText}${\n\t\t\t\tmoduleURL ? `//# sourceURL=${`${new URL(moduleURL, 'file:///')}`.replace(/^file:/i, 'virtual:')}\\n` : ''\n\t\t\t}})();})`,\n\t\t);\n\t\tevaluator.sourceText = sourceText;\n\t\tevaluator.compiledText = compiledText;\n\t\tevaluator.moduleURL = moduleURL;\n\t\tconst links = (evaluator.links = {});\n\n\t\twhile ((match = BindingDeclarations.exec(compiledText))) {\n\t\t\tconst [, intent, bindings, binding, , specifier] = match;\n\t\t\tconst mappings = (\n\t\t\t\t(binding && ((binding.startsWith('* ') && binding) || `default as ${binding}`)) ||\n\t\t\t\tbindings ||\n\t\t\t\t''\n\t\t\t).split(/ *, */g);\n\t\t\twhile ((match = Mappings.exec(mappings))) {\n\t\t\t\tconst [, identifier, binding = identifier] = match;\n\t\t\t\tfreeze((links[binding] = {intent, specifier, identifier, binding}));\n\t\t\t}\n\t\t}\n\n\t\tfreeze(links);\n\n\t\treturn evaluator;\n\t};\n})();\n\n/** @typedef {import('./types').modules.Module.Context} Context */\n/** @typedef {import('./types').modules.Module.Exports} Exports */\n/** @typedef {import('./types').modules.Module.Links} Links */\n/** @typedef {import('./types').modules.DynamicModule.Evaluator} Evaluator */\n","import {create, freeze, setPrototypeOf} from './helpers.js';\n\nexport function ModuleNamespace() {}\n{\n\tconst toPrimitive = setPrototypeOf(() => 'ModuleNamespace', null);\n\tconst toString = setPrototypeOf(() => 'class ModuleNamespace {}', null);\n\tconst {toJSON} = {\n\t\ttoJSON() {\n\t\t\treturn Object.getOwnPropertyNames(this);\n\t\t},\n\t};\n\tModuleNamespace.prototype = create(null, {\n\t\t[Symbol.toPrimitive]: {value: toPrimitive, enumerable: false},\n\t\t[Symbol.toStringTag]: {value: 'ModuleNamespace', enumerable: false},\n\t\ttoJSON: {value: toJSON, enumerable: false},\n\t});\n\tfreeze(setPrototypeOf(ModuleNamespace, create(null, {toString: {value: toString}})));\n}\n","import {ModuleNamespace} from './namespace.js';\nimport {Identifier, Specifier} from './expressions.js';\n\nimport {\n\tcreate,\n\tentries,\n\tfreeze,\n\tsetProperty,\n\tbindProperty,\n\tsetPrototypeOf,\n\tcopyProperty,\n\tResolvedPromise,\n\tReflect,\n} from './helpers.js';\n\nexport class ModuleStrapper {\n\t/** @type {import('./namespaces').ModuleNamespaces} */\n\tget map() {\n\t\tif (this !== this.constructor.prototype) return setProperty(this, 'map', create(null));\n\t}\n\n\tthrow(error) {\n\t\tthrow error;\n\t}\n\n\t// async createLinkedBinding(namespaces, linkURL, linkedBinding, bindingRecords, bindingIdentifier) {\n\tasync createLinkedImportBinding(bindingStatus) {\n\t\tlet exportedNamespace;\n\t\tconst {\n\t\t\tnamespaces,\n\t\t\tlinkURL,\n\t\t\tlinkingRecord,\n\t\t\tmoduleURL,\n\t\t\tbindingRecords,\n\t\t\tbindingIdentifier,\n\t\t\tmoduleContext,\n\t\t\ttraceId,\n\t\t\tlinkedNamespace = (bindingStatus.linkedNamespace = namespaces[linkURL] || namespaces.import(linkURL)),\n\t\t} = bindingStatus;\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t\tlinkedNamespace ||\n\t\t\tthis.throw(\n\t\t\t\tnew ReferenceError(\n\t\t\t\t\t`Cannot create linked imported binding against ‹${linkURL}› prior to the creation of its namespace record`,\n\t\t\t\t),\n\t\t\t);\n\t\tbindingIdentifier ||\n\t\t\tthis.throw(new ReferenceError(`Cannot create linked import binding without a binding identifier`));\n\n\t\t// Make a TBD binding\n\t\tbindProperty(bindingRecords, bindingIdentifier, undefined, true, true);\n\n\t\t// Make the actual binding\n\t\tlinkingRecord.identifier !== '*'\n\t\t\t? copyProperty(\n\t\t\t\t\tbindingRecords,\n\t\t\t\t\t(exportedNamespace =\n\t\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t\t\tlinkingRecord.identifier,\n\t\t\t\t\tbindingIdentifier,\n\t\t\t  )\n\t\t\t: ((exportedNamespace =\n\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t  copyProperty(bindingRecords, namespaces, linkURL, bindingIdentifier));\n\t\t// Update linked binding status\n\t\tbindingStatus.isLinked = true;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t}\n\tasync createLinkedExportBinding(bindingStatus) {\n\t\tlet exportedNamespace;\n\t\tconst {\n\t\t\tnamespaces,\n\t\t\tlinkURL,\n\t\t\tlinkingRecord,\n\t\t\tmoduleURL,\n\t\t\tbindingRecords,\n\t\t\tbindingIdentifier,\n\t\t\tmoduleContext,\n\t\t\ttraceId,\n\t\t\tlinkedNamespace = (bindingStatus.linkedNamespace = namespaces[linkURL] || namespaces.import(linkURL)),\n\t\t} = bindingStatus;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\n\t\tlinkedNamespace ||\n\t\t\tthis.throw(\n\t\t\t\tnew ReferenceError(\n\t\t\t\t\t`Cannot create linked export binding against ‹${linkURL}› prior to the creation of its namespace record`,\n\t\t\t\t),\n\t\t\t);\n\n\t\t// Make a TBD binding\n\t\tbindProperty(moduleContext.namespace, bindingIdentifier, undefined, true, true);\n\n\t\t// Make the actual binding\n\t\tlinkingRecord.identifier !== '*'\n\t\t\t? ((exportedNamespace =\n\t\t\t\t\tbindingStatus.exportedNamespace || (bindingStatus.exportedNamespace = await linkedNamespace)),\n\t\t\t  copyProperty(moduleContext.namespace, exportedNamespace, linkingRecord.identifier, bindingIdentifier))\n\t\t\t: this.throw(\n\t\t\t\t\tnew TypeError(\n\t\t\t\t\t\t`Cannot create linked \"export * as\" binding against ‹${linkURL}› since it is not a valid binding type`,\n\t\t\t\t\t),\n\t\t\t  );\n\n\t\t// Update linked binding status\n\t\tbindingStatus.isLinked = true;\n\n\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t}\n\n\tlink(module) {\n\t\tlet linkURL, bindingStatus;\n\t\tconst {namespaces, context: moduleContext, bindings: bindingRecords, links, url: moduleURL} = module;\n\n\t\tconst promises = [];\n\n\t\tfor (const [bindingIdentifier, linkingRecord] of entries(links)) {\n\t\t\tif (\n\t\t\t\t!(linkingRecord.intent === 'import' || linkingRecord.intent === 'export') ||\n\t\t\t\t!(linkURL = linkingRecord.url || (linkingRecord.specifier && this.resolve(linkingRecord.specifier, moduleURL)))\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tbindingStatus = {\n\t\t\t\tisLinked: false,\n\t\t\t\tnamespaces,\n\t\t\t\tlinkURL,\n\t\t\t\tlinkingRecord,\n\t\t\t\tmoduleURL,\n\t\t\t\tbindingRecords,\n\t\t\t\tbindingIdentifier,\n\t\t\t\tmoduleContext,\n\t\t\t\t// traceId: `${linkingRecord.intent} ${moduleURL}#${bindingIdentifier} ‹ ${linkURL}#${linkingRecord.identifier}`,\n\t\t\t};\n\n\t\t\tbindingStatus.traceId && console.log(bindingStatus.traceId, bindingStatus);\n\t\t\tpromises.push(\n\t\t\t\t(bindingStatus.promise = this[\n\t\t\t\t\tlinkingRecord.intent === 'import' ? 'createLinkedImportBinding' : 'createLinkedExportBinding'\n\t\t\t\t](bindingStatus)),\n\t\t\t);\n\t\t}\n\n\t\treturn promises.length ? Promise.all(promises).then(() => {}) : Promise.resolve();\n\t}\n\n\tinstantiate(module) {\n\t\tconst enumerable = false;\n\t\tconst namespace = new ModuleNamespace();\n\t\tconst {context, bindings, namespaces, url, scope} = module;\n\n\t\tcontext.export = (...exports) => void this.bind(namespace, ...exports);\n\n\t\tReflect.defineProperty(context.export, 'default', {\n\t\t\tset: value => void this.bind(namespace, {default: () => value}),\n\t\t});\n\n\t\tfreeze(context.export);\n\n\t\tsetProperty(bindings, 'module', context, false, true);\n\t\tsetProperty(context, 'namespace', namespace);\n\t\tsetProperty(context, 'scope', setPrototypeOf(bindings, scope || null), enumerable, false);\n\t\tsetProperty(context, 'meta', create(null), false, false);\n\t\tsetProperty(context.scope, 'meta', context.meta, false, false);\n\t\tsetProperty(context.meta, 'url', url);\n\n\t\t// TODO: To be used for top-level await\n\t\tlet awaits = void Reflect.defineProperty(context, 'await', {get: () => awaits, set: value => (awaits = value)});\n\n\t\tfreeze(context);\n\t\treturn setProperty(module, 'instance', {namespace, context});\n\t}\n\n\tasync evaluate(module) {\n\t\tconst {bindings, namespace, context} = await module.instantiate();\n\t\ttry {\n\t\t\t// TODO: Ensure single execution\n\t\t\tmodule.evaluator(context, context.export).next();\n\t\t\t!context.await || (await context.await);\n\t\t\treturn setProperty(module, 'namespace', namespace);\n\t\t} catch (exception) {\n\t\t\tconsole.warn(exception);\n\t\t\tsetProperty(module, 'exception', exception);\n\t\t}\n\t}\n\n\tasync import(url) {\n\t\tconst module = this.map[url];\n\t\treturn module.namespace || (await module.evaluate());\n\t}\n\n\tresolve(specifier, referrer) {\n\t\tspecifier = `${(specifier && specifier) || ''}`;\n\t\treferrer = `${(referrer && referrer) || ''}` || '';\n\t\tconst key = `[${referrer}][${specifier}]`;\n\t\tconst cache = this.resolve.cache || (this.resolve.cache = {});\n\t\tlet url = cache[key];\n\t\tif (url) return url.link;\n\t\tconst {schema, domain} = Specifier.parse(specifier);\n\t\tconst origin = (schema && `${schema}${domain || '//'}`) || `file:///`;\n\t\treferrer =\n\t\t\t(!referrer && origin) || (cache[`[${referrer}]`] || (cache[`[${referrer}]`] = new URL(referrer, origin))).href;\n\t\turl = cache[key] = new URL(specifier, referrer);\n\t\treturn (url.link = url.href.replace(/^file:\\/\\/\\//, ''));\n\t}\n\n\tbind(namespace, ...bindings) {\n\t\tfor (const binding of bindings) {\n\t\t\tconst type = typeof binding;\n\t\t\tif (type === 'function') {\n\t\t\t\tconst identifier = (Identifier.exec(binding) || '')[0];\n\t\t\t\tidentifier && bindProperty(namespace, identifier, binding, true);\n\t\t\t} else if (type === 'object') {\n\t\t\t\tfor (const identifier in binding) {\n\t\t\t\t\tidentifier === (Identifier.exec(identifier) || '')[0] &&\n\t\t\t\t\t\tbindProperty(namespace, identifier, binding[identifier], true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n","//@ts-check\n\nimport {ModuleNamespaces} from './namespaces.js';\nimport {ModuleEvaluator} from './evaluator.js';\nimport {ModuleStrapper} from './strapper.js';\nimport {create, setProperty, freeze, setPrototypeOf} from './helpers.js';\nimport {environment} from './environment.js';\n\n/** @augments {Module} */\nexport class DynamicModule {\n\t/** @param {string} url @param {Function} evaluator @param {Scope} scope */\n\tconstructor(url, evaluator, scope) {\n\t\tconst enumerable = false;\n\t\tsetProperty(this, 'url', url, enumerable);\n\t\tsetProperty(this, 'evaluator', (evaluator = ModuleEvaluator({source: evaluator, url})), enumerable);\n\t\tsetProperty(this, 'scope', scope, enumerable);\n\t\t//@ts-ignore\n\t\tsetProperty(this, 'context', create(null, contextuals), enumerable, false);\n\t\tsetProperty(this, 'bindings', create(null), enumerable);\n\t\t//@ts-ignore\n\t\tsetProperty(this, 'links', {...evaluator.links}, enumerable, false);\n\n\t\tthis.namespaces ||\n\t\t\tsetProperty(new.target.prototype, 'namespaces', new ModuleNamespaces(url => new.target.import(url)), false);\n\n\t\tnew.target.map[url] = this;\n\t}\n\n\tlink() {\n\t\tconst promise = DynamicModule.link(this);\n\t\tsetProperty(this, 'link', () => promise);\n\t\treturn promise;\n\t}\n\n\tinstantiate() {\n\t\tconst instance = this.instance || DynamicModule.instantiate(this);\n\t\tconst promise = this.link().then(() => instance);\n\t\tsetProperty(this, 'instantiate', () => promise);\n\t\treturn promise;\n\t}\n\n\tevaluate() {\n\t\tconst promise = DynamicModule.evaluate(this).then(() => this.namespace);\n\t\tsetProperty(this, 'evaluate', () => promise);\n\t\treturn promise;\n\t}\n}\n\n/** Properties injected into every module context */\nconst contextuals = {};\n\nDynamicModule.environment = environment;\n\n// DynamicModule.environment = environment.\n\nDynamicModule.debugging = (() => {\n\tconst debug = (type, ...args) => {\n\t\tconsole.log(type, ...args);\n\t\t// type in debugging && debugging[type] null, args);\n\t};\n\tconst debugging = (debug.debugging = {});\n\tcontextuals.debug = {value: freeze(debug)};\n\treturn debugging;\n})();\n\n{\n\tconst moduleStrapper = new ModuleStrapper();\n\t/** @type {ModuleStrapper['map']} */\n\tDynamicModule.map = moduleStrapper.map;\n\t/** @type {ModuleStrapper['link']} */\n\tDynamicModule.link = moduleStrapper.link;\n\t/** @type {ModuleStrapper['instantiate']} */\n\tDynamicModule.instantiate = moduleStrapper.instantiate;\n\t/** @type {ModuleStrapper['evaluate']} */\n\tDynamicModule.import = moduleStrapper.import;\n\t/** @type {ModuleStrapper['evaluate']} */\n\tDynamicModule.evaluate = moduleStrapper.evaluate;\n\n\tDynamicModule.prototype.evaluator = undefined;\n\t/** @type {Module['url']} */\n\tDynamicModule.prototype.url = undefined;\n\t/** @type {Evaluator} */\n\tDynamicModule.prototype.evaluator = undefined;\n\t/** @type {Module['scope']} */\n\tDynamicModule.prototype.scope = undefined;\n\t/** @type {Module['context']} */\n\tDynamicModule.prototype.context = undefined;\n\t/** @type {Module['bindings']} */\n\tDynamicModule.prototype.bindings = undefined;\n\t/** @type {Module['links']} */\n\tDynamicModule.prototype.links = undefined;\n\t/** @type {Module['instance']} */\n\tDynamicModule.prototype.instance = undefined;\n\t/** @type {Module['namespace']} */\n\tDynamicModule.prototype.namespace = undefined;\n\n\t/** @type {Namespaces} */\n\tDynamicModule.prototype.namespaces = undefined;\n\n\tsetPrototypeOf(DynamicModule, moduleStrapper);\n}\n\n/** @typedef {import('./types').modules.Namespaces} Namespaces */\n/** @typedef {import('./types').modules.Module} Module */\n/** @typedef {import('./types').modules.Module.Scope} Scope */\n/** @typedef {import('./types').modules.DynamicModule.Evaluator} Evaluator */\n","import {ModuleScope, GlobalScope} from './scope.js';\nimport {DynamicModule} from './dynamic-module.js';\nimport {environment} from './environment.js';\n\nGlobalScope.DynamicModules\n\t? 'DynamicModule' in GlobalScope.DynamicModules ||\n\t  ((GlobalScope.DynamicModules.ModuleScope = ModuleScope), (GlobalScope.DynamicModules.DynamicModule = DynamicModule))\n\t: (GlobalScope.DynamicModules = {ModuleScope, GlobalScope});\n"],"names":["Construct","symbols.RootNode","symbols.ParentNode","symbols.NextNode","symbols.PreviousNode","symbols.NextTokenNode","symbols.PreviousTokenNode","symbols.Construct","symbols.Trailer","symbols.LastKeyword","symbols.LastOperator","symbols.LastBreak","symbols.TokenContext","symbols.FunctionConstruct","symbols.FunctionBody","symbols.FunctionArguments","symbols.BindingClause","symbols.ArgumentConstruct","symbols.BlockConstruct","symbols.ClassConstruct","symbols.ClassBody","symbols.VariableConstruct","symbols.BindingConstruct","symbols.ImportConstruct","symbols.FromClause","symbols.ExportConstruct","symbols.ContextNode","symbols.ExtendsClause"],"mappings":"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"}